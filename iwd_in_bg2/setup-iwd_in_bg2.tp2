BACKUP ~iwd_in_bg2/backup~ // location to store files for
AUTHOR ~www.gibberlings3.net~ // email address displayed if install fails

AUTO_TRA ~iwd_in_bg2/languages/%s~
  ALWAYS
ACTION_IF FILE_EXISTS ~iwd_in_bg2/iwd.tra~ THEN BEGIN
LOAD_TRA ~iwd_in_bg2/iwd.tra~
END

ACTION_IF FILE_EXISTS ~iwd_in_bg2/lib/extra_regexp_vars.tpa~ BEGIN
  INCLUDE ~iwd_in_bg2/lib/extra_regexp_vars.tpa~
  INCLUDE ~iwd_in_bg2/lib/creature_mappings.tpa~
  INCLUDE ~iwd_in_bg2/lib/david_itm_spl.tpa~
  INCLUDE ~iwd_in_bg2/lib/david_rename.tph~
END

OUTER_SET ~iwd_offset~=74100

ACTION_IF VARIABLE_IS_SET ~%argv[0]%~ BEGIN
    OUTER_SET ~easy_version~=1
END ELSE BEGIN
    OUTER_SET ~easy_version~=0
END

// fragments of my embryonic rewrite
OUTER_SPRINT ~scsroot~ ~iwd_in_bg2~
OUTER_SPRINT ~iwdfiles~ ~iwd_in_bg2~
OUTER_SPRINT ~iwdlists~ ~iwd_in_bg2/lib~
INCLUDE ~iwd_in_bg2/lib/iwd_in_bg2_shared.tph~


END


LANGUAGE
  ~English~
  ~english~
  ~iwd_in_bg2/languages/english/setup.tra~

/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////                                                  \\\\\
///// IWD in BG2                                       \\\\\
/////                                                  \\\\\
///// This is now David's editing of Cam's code        \\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\
/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\/////\\\\\

//BEGIN ~test~ DESIGNATED 0






///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///     BASIC SETUP
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

BEGIN ~Initialise~ DESIGNATED 10


AT_NOW ~COPY "setup-iwd_in_bg2.exe" "weidu.exe"~
AT_NOW ~COPY "setup-iwd_in_bg2.exe" "setup-ice_tutu_tweaks.exe"~

<<<<<<<< blank.txt
>>>>>>>>

ACTION_FOR_EACH datafile IN 
biff_file_list.2da 
rename_copy.tpa
anim_rename.2da
critterproblist.txt
spell_map.txt
fx.tpa
pro_from_spell.list
rename_record.2da
sectype_iterate.2da
item_overwrite.2da
sectypelist.tpa
stringdoc.tpa
strings.tpa
debug.list
eff_resource_list.list
missing_files.2da
missing_cre_sound.txt
dvconflict.txt
BEGIN
   COPY ~blank.txt~ ~iwd_in_bg2/lib/%datafile%~
END

BEGIN ~Make BIFF directories~ DESIGNATED 12


MKDIR ~iwd_in_bg2/biff~
ACTION_FOR_EACH dir IN extra bcs_dlg cre_anim cre_anim2 mos_bmp misc_anim misc_snd dialog_snd cre_snd spell_icons item_icons spl_anim spl_snd new_map cre_ini gen_cre gui narr_files misc itm_spl BEGIN
        MKDIR ~iwd_in_bg2/biff/%dir%~
END

BEGIN ~Clear out the override~ DESIGNATED 14

// remove all the ARE, BCS, DLG, STO, TIS and WED files from the override

MKDIR ~iwd_in_bg2\old_removed~

ACTION_FOR_EACH type IN
        ARE BCS DLG STO TIS WED 
BEGIN
   ACTION_BASH_FOR override ~.*\.%type%~ BEGIN
      MOVE ~%BASH_FOR_FILESPEC%~ ~iwd_in_bg2\old_removed~
   END
END

// BIFF what's left

MKDIR ~iwd_in_bg2\old_biffed~

ACTION_BASH_FOR override  ~.*..*~ BEGIN
   MOVE ~%BASH_FOR_FILESPEC%~ ~iwd_in_bg2\old_biffed~
END

MAKE_BIFF ~i#oldbg~ BEGIN ~iwd_in_bg2\old_biffed~ ~.*..*~ END


BEGIN ~BIFF everything~ DESIGNATED 15


ACTION_IF ~easy_version~=1 BEGIN

     MAKE_BIFF ~i#creani~ BEGIN ~iwd_in_bg2/biff/cre_anim~ ~.*\.bam~ END
     MAKE_BIFF ~i#crean2~ BEGIN ~iwd_in_bg2/biff/cre_anim2~ ~.*\.bam~ END
     MAKE_BIFF ~i#mosbmp~ BEGIN ~iwd_in_bg2/biff/mos_bmp~ ~.*\..*~ END
     MAKE_BIFF ~i#animsc~ BEGIN ~iwd_in_bg2/biff/misc_anim~ ~.*\.bam~ END
     MAKE_BIFF ~i#sndmsc~ BEGIN ~iwd_in_bg2/biff/misc_snd~ ~.*\.wav~ END
     MAKE_BIFF ~i#diasnd~ BEGIN ~iwd_in_bg2/biff/dialog_snd~ ~.*\.wav~ END
     MAKE_BIFF ~i#cresnd~ BEGIN ~iwd_in_bg2/biff/CRE_snd~ ~.*\.wav~ END
     MAKE_BIFF ~i#splico~ BEGIN ~iwd_in_bg2/biff/spell_icons~ ~.*\.bam~ END
     MAKE_BIFF ~i#itmico~ BEGIN ~iwd_in_bg2/biff/item_icons~ ~.*\.bam~ END
     MAKE_BIFF ~i#splani~ BEGIN ~iwd_in_bg2/biff/spl_anim~ ~.*\.bam~ END
     MAKE_BIFF ~i#splsnd~ BEGIN ~iwd_in_bg2/biff/spl_snd~ ~.*\.wav~ END
     MAKE_BIFF ~i#newmap~ BEGIN ~iwd_in_bg2/new_map~ ~.*\.mos~ END


END


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///     ANIMATIONS
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

BEGIN ~Infinity Animation hacks to the EXE~ DESIGNATED 18

// install Infinity Animations core

INCLUDE ~iwd_in_bg2/ia/ia_core.tpa~

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////


BEGIN ~convert animations (new version)~ DESIGNATED 19


// my two additions

APPEND ~animate.ids~ ~0x5296 TROLL_SCRAG~
APPEND ~animate.ids~ ~0x505A ICE_GOLEM_LARGECIRCLE~

APPEND ~anisnd.ids~ ~0x5296 µDL      CGAMEANIMATIONTYPE_TROLL_SCRAG~
APPEND ~anisnd.ids~ ~0x505A µDM      CGAMEANIMATIONTYPE_ICE_GOLEM_LARGECIRCLE~

// get IWD animation codes

<<<<<<<< iwd_animation_codes.2da
0xEBF1 ARUNDEL
0xEB08 ANIMATED_PLATE_BRONZE
0xEB18 ANIMATED_PLATE_DARK
0xEB28 ANIMATED_PLATE_GREEN
0xF778 BARBARIAN_WARRIOR_TAN
0xF788 BARBARIAN_WARRIOR_RED
0xF798 BARBARIAN_WARRIOR_BROWN
0xE771 BARBARIAN_SHAMAN_HAMMER
0xE781 BARBARIAN_SHAMAN_STAFF
0xE791 BARBARIAN_SHAMAN_CLUB
0xE7AC BARBARIAN_ICASARACHT
0xEB39 BELHIFET
0xEB49 BELHIFET_PRIEST
0xE3A8 DROWNED_DEAD
0xE218 ELEMENTAL_EARTH_IWD
0xE228 ELEMENTAL_FIRE_IWD
0xE238 ELEMENTAL_WATER
0xF308 FIRE_GIANT_IWD
0xE138 FROST_GIANT
0xE51D GOLEM_IRON_IWD
0xEA20 CREEPING_DOOM
0xE050 REMORHAZ
0xF40B SAHUAGIN_IWD
0xF41B SAHUAGIN_LARGE_IWD
0xEB51 SEER_IWD
0xE7F9 UMBERHULK_VODYANOI
0xE449 SVIRFNEBLIN_PALE_AXE
0xE459 SVIRFNEBLIN_PALE_NOAXE
0xE76C TUNDRA_YETI
0xE148 VERBEEG
0xF029 WIGHT_BARROW
0xE249 HARPY
58408 GOBLINELITE_AXE
58418 GOBLINELITE_BOW
58376 GOBLIN_AXE
58386 GOBLIN_BOW
60681 CORNUGON
60697 GLABREZU
58664 ICE_GOLEM_LARGECIRCLE
61961 LIZARDMAN_BROWN
59144 MINOTAUR
59448 ORC_MELEE3
59458 ORC_RANGE4
59416 ORC_MELEE1
59426 ORC_RANGE2
59481 ORC_SHAMAN
59496 OROG1
59512 OROG2
60376 SALAMANDER
60392 SALAMANDER2
61465 SKELETON0
61448 SKELETONA
58924 SKELETONB
60365 MARILITH
57938 WATER_WEIRD
4097 WYVERN_BIG
61710 YUANTI
61726 YUANTI2
59553 YUANTI3
57624 ETTIN
58299 WAILING_VIRGIN
59532 OROG3
60281 LICH_BLACK
60313 MYCONID
60329 MYCONID2
60337 SHROOM
59160 TROLL_BLUE
58249 MUMMY
61976 LIZARDMAN_GREEN
58153 WIGHT_GRAY
58201 WIGHT_GREEN
58217 WIGHT_YELLOW
57362 BEETLE_BLACK
57344 BEETLE_COPPER
57400 BEETLE_FIRE
57416 BEETLE_RHINOCEROS
57608 CYCLOPS
59176 TROLL_ICE
59545 LIZARD_KING
59656 SHADOW_SMALL_IWD
59672 SHADOW_LARGE_IWD
59688 GHOST_IWD
59192 TROLL_SNOW
58268 HISTACHII
58168 ZOMBIE_YELLOW_IWD
58184 ZOMBIE_BLUE_IWD
58120 GHOUL_IWD
58136 GHAST_IWD
59225 UMBERHULK_IWD
60265 LICH_WHITE
59368 TROLL_SCRAG
>>>>>>>>

COPY ~iwd_animation_codes.2da~ ~override~
      READ_2DA_ENTRIES_NOW ~iwd_animation_array~ 2
      FOR (i=0;i<~iwd_animation_array~;i=i+1) BEGIN
         READ_2DA_ENTRY_FORMER iwd_animation_array ~i~ 0 temp1
         READ_2DA_ENTRY_FORMER iwd_animation_array ~i~ 1 temp2
         SET ~temp1~=~temp1~+1 - 1 // to ensure uniform hex/dec repn - don't know if this matters
         SPRINT $iwd_hash_left_to_right(~%temp1%~) ~%temp2%~
         SET $iwd_hash_right_to_left(~%temp2%~)=~temp1~
      END
BUT_ONLY

// get BG2 animation codes

COPY_EXISTING ~animate.ids~ ~override~
      READ_2DA_ENTRIES_NOW ~bg2_animation_array~ 2
      FOR (i=0;i<~bg2_animation_array~;i=i+1) BEGIN
         READ_2DA_ENTRY_FORMER bg2_animation_array ~i~ 0  temp1
         READ_2DA_ENTRY_FORMER bg2_animation_array ~i~ 1 temp2
         SPRINT $bg2_hash_left_to_right(~%temp1%~) ~%temp2%~
         SET $bg2_hash_right_to_left(~%temp2%~)=~temp1~
      END
BUT_ONLY

// construct code map

ACTION_PHP_EACH ~iwd_hash_left_to_right~ AS ~iwd_code~ => ~iwd_string~ BEGIN
   ACTION_IF VARIABLE_IS_SET $bg2_hash_right_to_left(EVALUATE_BUFFER ~%iwd_string%~) BEGIN
      OUTER_SET ~temp~=$bg2_hash_right_to_left(EVALUATE_BUFFER ~%iwd_string%~)
      OUTER_SET $cre_anim_code_map(~%iwd_code%~)=~temp~
//      PRINT ~matched IWD code %iwd_code% to BG2 code %temp%~
   END ELSE BEGIN
      PRINT ~Can't match %iwd_string%~
   END

END

// ad hoc additions to the code map

// boring beetles use bombadier beetle slot (beetle_black)

OUTER_SET $cre_anim_code_map(~57378~)=57888

// variant mummies use the ordinary mummy slot

OUTER_SET $cre_anim_code_map(~58248~)=57472

// convert the cre files to use the new codes

ACTION_BASH_FOR ~iwd_in_bg2/cre~ ~.*\.cre~ BEGIN
    COPY ~iwd_in_bg2/cre/%BASH_FOR_RES%.cre~ ~iwd_in_bg2/cre~
	READ_SHORT 0x28 ~anim~
	SET ~anim~=~anim~+0 // enforce number
	PATCH_IF VARIABLE_IS_SET $cre_anim_code_map(EVALUATE_BUFFER ~%anim%~) THEN BEGIN
//		PATCH_PRINT ~Matched %SOURCE_RES% on %anim%~
		WRITE_SHORT 0x28 $cre_anim_code_map(EVALUATE_BUFFER ~%anim%~)
	END
    BUT_ONLY_IF_IT_CHANGES
END

//// Map ****_LOW animations to **** animations, removing a problem with IA

DEFINE_PATCH_FUNCTION low_no_more
BEGIN
    READ_SHORT 0x28 t-old
    PATCH_IF
    ((t-old > 0x4fff) AND (t-old < 0x5004))
     OR
    ((t-old > 0x500f) AND (t-old < 0x5014))
    OR
    ((t-old > 0x50ff) AND (t-old < 0x5104))
    OR
    ((t-old > 0x510f) AND (t-old < 0x5114))
    OR
    ((t-old > 0x51ff) AND (t-old < 0x5203))
    OR
    ((t-old > 0x520f) AND (t-old < 0x5213))
    OR
    ((t-old > 0x52ff) AND (t-old < 0x5304))
    OR
    ((t-old > 0x530f) AND (t-old < 0x5314)) BEGIN
       SET ~t-new~ = ~t-old~ + 0x1000
       WRITE_SHORT 0x28 ~t-new~
    END
END

ACTION_BASH_FOR ~iwd_in_bg2/cre~ ~.*\.cre~ BEGIN
    COPY ~iwd_in_bg2/cre/%BASH_FOR_RES%.cre~ ~iwd_in_bg2/cre~
       LPF low_no_more END
    BUT_ONLY
END

// do it for BG2-native creatures too (otherwise people will whine later when their mods break)
COPY_EXISTING_REGEXP ~.*\.cre~ ~override~
       LPF low_no_more END
BUT_ONLY

// copy over the animations

// the ones in IA_IWD

<<<<<<<< cre_anim_mappings.2da
MARU µCL
MANI µCI
MAN2 µCJ
MAN3 µCK
MBA1 µCP
MBA2 µCQ
MBA3 µCR
MBA4 µCM
MBA5 µCN
MBA6 µCO
MBAI µCS
MBE1 µBV
MBE2 µCT
MDRD µCV
MELE µCD
MELF µCE
MELW µCF
MGFI µCW
MGFR µBR
MGIR µCX
MCRD µCU
MREM µCY
MSAH µCG
MSAT µCH
MSEE µCZ
MUM2 µDB
MSVI µBM
MSV2 µBN
MYET µDA
MGVE µDC
MWI4 µDD
MHAR µBS
MSCR µDL
MGIC µDM
>>>>>>>>

COPY - ~cre_anim_mappings.2da~ ~cre_anim_mappings.2da~
     READ_2DA_ENTRIES_NOW ~cre_anim_rename~ 2
     FOR (i=0;i<~%cre_anim_rename%~;i=i+1) BEGIN
        READ_2DA_ENTRY_FORMER ~cre_anim_rename~ ~i~ 0 ~oldname~
        READ_2DA_ENTRY_FORMER ~cre_anim_rename~ ~i~ 1 ~newname~
        SPRINT $animation_sound_remap(~%oldname%~) ~%newname%~
        INNER_ACTION BEGIN
           ACTION_BASH_FOR ~iwd_in_bg2/override~ ~%oldname%.*\.bam~ BEGIN
              OUTER_SPRINT ~inputname~ ~%BASH_FOR_RES%~
              OUTER_INNER_PATCH_SAVE ~outputname~ ~%inputname%~ BEGIN
                 DELETE_BYTES 0x0 1
                 WRITE_ASCIIE 0x0 ~%newname%~
              END
              COPY ~iwd_in_bg2/override/%inputname%.bam~ ~IWD_in_BG2/BIFF/cre_anim/%outputname%.bam~
              APPEND_OUTER ~iwd_in_bg2/lib/anim_rename.2da~ ~%inputname%.bam IWD_in_BG2/BIFF/cre_anim/%outputname%.bam~
           END
        END
     END

//// work around the broken sahuagin crossbow-walking animation

//////////////////////////////////////////////////////////////////////////////
////   Systematic fix to sahuagin animation problem
/////////////////////////////////////////////////////////////////////////////

ACTION_FOR_EACH broken IN ca gh gu sp wk BEGIN
COPY ~iwd_in_bg2/BIFF/cre_anim/µcgc%broken%.bam~ ~iwd_in_bg2/BIFF/cre_anim~
    GET_OFFSET_ARRAY fr_arr 0xc 4 0x8 2 0 0 0xc
    SET ind=0
    PHP_EACH fr_arr AS int=>fr_off BEGIN
        SET width=SHORT_AT fr_off
        SET height=SHORT_AT (fr_off+2)
        SET xloc=SHORT_AT (fr_off+4)
        SET yloc=SHORT_AT (fr_off+6)
        PATCH_IF (width > 100 || height > 100) BEGIN
           WRITE_SHORT fr_off 8
           WRITE_SHORT (fr_off+2) 8
           WRITE_SHORT (fr_off+4) 0
           WRITE_SHORT (fr_off+6) 0
        END
        SET ind+=1
    END

END


     MAKE_BIFF ~i#creani~ BEGIN ~iwd_in_bg2/biff/cre_anim~ ~.*\.bam~ END


<<<<<<<< cre_anim_copy_list
MLI2 Lizard man (green)
MWIG Wight
MWI2 Wight 2
MWI3 Wight 3
MBBM Bombardier Beetle
MBET Copper Beetle
MBFI Fire Beetle
MBRH Rhino Beetle
MCYC Cyclops
MTIC Ice Troll
MLI3 Lizard Man King
MLIC Lich
MLIZ Lizard man (actually there already, but we want the weapons)
MSH1 Shadow
MSH2 Shadow, Buff
MGHO Ghost
MTSN Snow Troll
MWAV Wailing Virgin
MHIS Histachii
MZO2 Zombie 2
MZO3 Zombie 3
MGH2 Ghoul 2
MGH3 Ghoul 3
MUMB Umber Hulk
>>>>>>>>

COPY - cre_anim_copy_list cre_anim_copy_list
     READ_2DA_ENTRIES_NOW ~cre_anim_copy~ 1
     FOR (i=0;i<~%cre_anim_copy%~;i=i+1) BEGIN
        READ_2DA_ENTRY_FORMER ~cre_anim_copy~ ~i~ 0 ~crefile~
        INNER_ACTION BEGIN
           ACTION_BASH_FOR ~iwd_in_bg2/override~ ~%crefile%.*\.bam~ BEGIN
              COPY ~iwd_in_bg2/override/%BASH_FOR_RES%.bam~ ~IWD_in_BG2/BIFF/cre_anim2~
           END
        END
     END




     MAKE_BIFF ~i#crean2~ BEGIN ~iwd_in_bg2/biff/cre_anim2~ ~.*\.bam~ END

// soundsets

// correct a small syntax glitch in sounds.ini

COPY ~iwd_in_bg2/rules/sounds.ini~ ~iwd_in_bg2/rules~
    REPLACE_TEXTUALLY ~mummy,histachii~ ~ /mummy,histachii~

INCLUDE ~iwd_in_bg2/lib/convert_snd.tpa~

LAUNCH_ACTION_MACRO ~parse_snd~

MAKE_BIFF ~i#cresnd~ BEGIN ~iwd_in_bg2/biff/CRE_snd~ ~.*\.wav~ END

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


BEGIN ~Icasaracht conversion~  DESIGNATED 30


COPY ~iwd_in_bg2/cre/icasa.cre~ ~iwd_in_bg2/cre~
    WRITE_SHORT 0x28 4610


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///     DIRECT COPYING, PLUS GUI
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////



BEGIN ~copy over MOS and BMP files~ DESIGNATED 50



ACTION_BASH_FOR ~iwd_in_bg2/override~ ~.*\.mos~  BEGIN
   COPY ~iwd_in_bg2/override/%BASH_FOR_RES%.mos~ ~IWD_in_BG2/BIFF/mos_bmp~
END
ACTION_BASH_FOR ~iwd_in_bg2/override~ ~.*\.bmp~  BEGIN
   COPY ~iwd_in_bg2/override/%BASH_FOR_RES%.bmp~ ~IWD_in_BG2/BIFF/mos_bmp~
END

MAKE_BIFF ~i#mosbmp~ BEGIN ~iwd_in_bg2/biff/mos_bmp~ ~.*\..*~ END

BEGIN ~Copy over GUI material~ DESIGNATED 59


COPY - ~iwd_in_bg2/lib/guilist.2da~ ~iwd_in_bg2/lib~
     READ_2DA_ENTRIES_NOW gui_files 1
     FOR (i=0;i<~gui_files~;i=i+1) BEGIN
         READ_2DA_ENTRY_FORMER gui_files ~i~ 0 ~temp~
         INNER_ACTION BEGIN
             ACTION_IF FILE_EXISTS ~iwd_in_bg2/override/%temp%~ THEN BEGIN
                         COPY ~iwd_in_bg2/override/%temp%~ ~iwd_in_bg2/biff/gui~
             END ELSE BEGIN
                         COPY ~iwd_in_bg2/real_override/%temp%~ ~iwd_in_bg2/biff/gui~
             END
         END
     END


BEGIN ~Convert GUI~ DESIGNATED 60



COPY ~iwd_in_bg2/gui~ ~iwd_in_bg2/biff/gui~

// use non-HOW screen for SoA page

COPY ~iwd_in_bg2/files/startold.mos~ ~iwd_in_bg2/biff/gui~



     /// ad hoc changes to chapter 1 screen, for which LadeJarl's correction seems slightly out;
/// need to do prologue screen in toto

COPY ~iwd_in_bg2/gui/guichap.chu~ ~iwd_in_bg2/biff/gui~
    WRITE_SHORT 0x548 432  // single correction to chapter 1 screen
    WRITE_SHORT 0x994 337  // prologue control 1
    WRITE_SHORT 0x996 422
    WRITE_SHORT 0x998 126
    WRITE_SHORT 0x99a 26
    WRITE_ASCII 0x99e ~chapbut~ #8
    WRITE_SHORT 0x9a8 1
    WRITE_SHORT 0x9aa 2
    WRITE_SHORT 0x9ac 0
    WRITE_SHORT 0x9ae 3
    WRITE_SHORT 0x9b4 110  // prologue control 2
    WRITE_SHORT 0x9b6 22
    WRITE_SHORT 0x9d8 271  // prologue control 3
    WRITE_SHORT 0x9da 265
    WRITE_SHORT 0x9dc 351
    WRITE_SHORT 0x9de 120
    WRITE_SHORT 0xa06 177  // prologue control 4
    WRITE_SHORT 0xa08 421
    WRITE_SHORT 0xa0a 126
    WRITE_SHORT 0xa0c 26
    WRITE_ASCII 0xa10 ~chapbut~ #8
    WRITE_SHORT 0xa1a 1
    WRITE_SHORT 0xa1c 2
    WRITE_SHORT 0xa1e 0
    WRITE_SHORT 0xa20 3

// ad hoc bugfix to LadeJarl's GUIREC.chu

COPY ~iwd_in_bg2/gui/guirec.chu~ ~iwd_in_bg2/biff/gui~
        WRITE_SHORT 0x228e 70
        WRITE_SHORT 0x2290 155
        WRITE_SHORT 0x2294 74
        WRITE_SHORT 0x22e4 219
        WRITE_SHORT 0x22e6 244
        WRITE_SHORT 0x22ea 117
        WRITE_SHORT 0x1a0e 291
        
/////////////////////////////////////////////////////////////////////////////////////////////
//// and another one


COPY ~iwd_in_bg2/gui/guirec.chu~ ~iwd_in_bg2/biff/gui~
   GET_OFFSET_ARRAY ~window_array~ 0x10 4 0x8 4 0 0 0x1c
   PHP_EACH ~window_array~ AS int => window_off BEGIN
         READ_LONG window_off window_ID
         PATCH_IF window_ID=0 BEGIN
             GET_OFFSET_ARRAY ~ctrl_array~ 0xc 4 (0xe+window_off) 2 (0x18+window_off) 2 0x8
             PHP_EACH ~ctrl_array~ AS int => ctrl_ind_off BEGIN
                   READ_LONG ctrl_ind_off ctrl_off
                   PATCH_IF SHORT_AT ctrl_off = 8 BEGIN
                       WRITE_SHORT 0x18+ctrl_off 14
                       WRITE_SHORT 0x1a+ctrl_off 15
                   END
             END
         END
   END


// new front screen

COPY ~iwd_in_bg2/files/start25.mos~ ~iwd_in_bg2/biff/gui~

COPY ~iwd_in_bg2/biff/gui/start.chu~ ~iwd_in_bg2/biff/gui~
      WRITE_ASCII 0x104 ~start25~ #8

/// Race selector has wrong button notes

COPY ~iwd_in_bg2/biff/gui/guiclb.bam~ ~iwd_in_bg2/biff/gui/guircb.bam~


// a couple of typos on spell selector

COPY ~iwd_in_bg2/biff/gui/guicg.chu~ ~iwd_in_bg2/biff/gui~
   WRITE_SHORT 0x22bc 0
   WRITE_SHORT 0x24fc 0

// couple of typos in the 840-res GUI

COPY ~iwd_in_bg2/biff/gui/guiw08.chu~ ~iwd_in_bg2/biff/gui~
   WRITE_SHORT 0xe38 42
   WRITE_SHORT 0xe3a 42
   WRITE_SHORT 0x14fe 93
   WRITE_SHORT 0xd8e 4

COPY ~iwd_in_bg2/biff/gui/guistore.chu~ ~iwd_in_bg2/biff/gui~
          WRITE_SHORT 0x9f4 0    // random extra box in GUISTORE
          WRITE_SHORT 0x17fa 0 // make inn room-select work correctly
          WRITE_SHORT 0x181a 0 // make inn room-select work correctly
          WRITE_SHORT 0x183a 0 // make inn room-select work correctly
          WRITE_SHORT 0x185a 0 // make inn room-select work correctly


// ad hoc bugfix to inventory screen (colorful initial wasn't displaying correctly)


COPY ~iwd_in_bg2/biff/gui/guiinv.chu~ ~iwd_in_bg2/biff/gui~
  WRITE_ASCII 0x141e ~initials~
  WRITE_LONG 0x142a 0x006eaadc
  WRITE_LONG 0x142e 0x006eaadc

// sort out

// misc fixes to the CG screen

COPY ~iwd_in_bg2/biff/gui/guicg.chu~ ~iwd_in_bg2/biff/gui~
        WRITE_ASCII 0x3404 ~STONESML~ // sort out font of "Appearence"
        WRITE_ASCII 0x34b6 ~STONESML~ // sort out font of "Specialist Mage"
        WRITE_SHORT 0x34a0 30 // realign button on Appearence selector
              //// class (Window 2)
       // xloc
        WRITE_SHORT 0x50 5
        WRITE_SHORT 0x52 5
        WRITE_SHORT 0x54 631
       // text box
        WRITE_SHORT 0x1594 299
        WRITE_SHORT 0x1596 33
        WRITE_SHORT 0x1598 297
        WRITE_SHORT 0x159a 380
        // scrollbar
       WRITE_SHORT 0x156c 606
        WRITE_SHORT 0x156e 28
        WRITE_SHORT 0x1570 11
        WRITE_SHORT 0x1572 390
        WRITE_SHORT 0x1588 4
        WRITE_SHORT 0x158a 5
        // graphic
       WRITE_ASCII 0x1576 ~STORESCR~
       //// kit (Window 22)
       // xloc
       WRITE_SHORT 0x280 5
       WRITE_SHORT 0x282 5
       WRITE_SHORT 0x284 631

       // text box
       WRITE_SHORT 0x49da 299
       WRITE_SHORT 0x49dc 33
       WRITE_SHORT 0x49de 297
       WRITE_SHORT 0x49e0 380
       // scrollbar
      WRITE_SHORT 0x4a08 606
       WRITE_SHORT 0x4a0a 28
       WRITE_SHORT 0x4a0c 11
       WRITE_SHORT 0x4a0e 390
       WRITE_SHORT 0x4a24 4
       WRITE_SHORT 0x4a26 5
       // graphic
       WRITE_ASCII 0x4a12 ~STORESCR~
       //// multi-class (Window 10)
       // xloc
       WRITE_SHORT 0x130 5
       WRITE_SHORT 0x132 5
       WRITE_SHORT 0x134 631

       // text box
       WRITE_SHORT 0x3300 299
       WRITE_SHORT 0x3302 33
       WRITE_SHORT 0x3304 297
       WRITE_SHORT 0x3306 380
       // scrollbar
       WRITE_SHORT 0x332e 606
       WRITE_SHORT 0x3330 28
       WRITE_SHORT 0x3332 11
       WRITE_SHORT 0x3334 390
       WRITE_SHORT 0x334a 4
       WRITE_SHORT 0x334c 5
       // graphic
       WRITE_ASCII 0x3338 ~STORESCR~


       //// specialist mage (Window 12)
       // xloc
       WRITE_SHORT 0x168 5
       WRITE_SHORT 0x16a 5
       WRITE_SHORT 0x16c 631

       // text box
       WRITE_SHORT 0x35f4 299
       WRITE_SHORT 0x35f6 33
       WRITE_SHORT 0x35f8 297
       WRITE_SHORT 0x35fa 380
       // scrollbar
      WRITE_SHORT 0x35cc 606
       WRITE_SHORT 0x35ce 28
       WRITE_SHORT 0x35d0 11
       WRITE_SHORT 0x35d2 390
       WRITE_SHORT 0x35e8 4
       WRITE_SHORT 0x35ea 5
       // graphic
       WRITE_ASCII 0x35d6 ~STORESCR~

// new sorceror level-up screen

ACTION_DEFINE_ASSOCIATIVE_ARRAY ~guirec_x_coord~ BEGIN
       0 => 25
       1 => 68
       2 => 112
       3 => 154
       4 => 197
       5 => 25
       6 => 68
       7 => 112
       8 => 154
       9 => 197
       10 => 25
       11 => 68
       12 => 112
       13 => 154
       14 => 197
       15 => 25
       16 => 68
       17 => 112
       18 => 154
       19 => 197
       20 => 25
       21 => 68
       22 => 112
       23 => 154
END

ACTION_DEFINE_ASSOCIATIVE_ARRAY ~guirec_y_coord~ BEGIN
       0 => 33
       1 => 33
       2 => 33
       3 => 33
       4 => 33
       5 => 77
       6 => 77
       7 => 77
       8 => 77
       9 => 77
       10 => 121
       11 => 121
       12 => 121
       13 => 121
       14 => 121
       15 => 165
       16 => 165
       17 => 165
       18 => 165
       19 => 165
       20 => 210
       21 => 210
       22 => 210
       23 => 210
END

COPY ~iwd_in_bg2/biff/gui/guirec.chu~ ~iwd_in_bg2/biff/gui~
    GET_OFFSET_ARRAY window_array 0x10 4 0x8 4 0 0 0x1c
    PHP_EACH window_array AS int => window_off BEGIN
       PATCH_IF LONG_AT window_off =8 BEGIN   // this is the Sorcerer spell control
          WRITE_ASCII window_off+0x10 ~GUISORC~ #8
          WRITE_SHORT window_off+0x8 264 // new width
          WRITE_SHORT window_off+0xa 395 // new height
          GET_OFFSET_ARRAY control_array 0xc 4 0xe+ window_off 2 0x18+window_off 2 8
               PHP_EACH control_array AS int => control_off BEGIN
                     READ_LONG control_off control_loc
                        READ_SHORT control_loc control_ID
                        READ_BYTE control_loc + 0xc control_type
                        PATCH_IF (~control_type~=0 AND ~control_ID~<24) BEGIN // i.e., it's a spell button
                           SET ~x_coord~=$guirec_x_coord(~%control_ID%~)
                           SET ~y_coord~=$guirec_y_coord(~%control_ID%~)
                           WRITE_SHORT 0x4+control_loc x_coord
                           WRITE_SHORT 0x6+control_loc y_coord
                        END ELSE
                        PATCH_IF (control_ID=23 AND control_type=6) BEGIN // top left text label
                           WRITE_SHORT 0x8+control_loc 185
                        END ELSE
                        PATCH_IF (control_ID=24 AND control_type=6) BEGIN // top right text label
                           WRITE_SHORT 0x4+control_loc 211
                        END ELSE
                        PATCH_IF (control_ID=26 AND control_type=5) BEGIN // main text box
                           WRITE_SHORT 0x6+control_loc 258
                           WRITE_SHORT 0x8+control_loc 218
                        END ELSE
                        PATCH_IF (control_ID=27 AND control_type=7) BEGIN // main text scrollbar
                           WRITE_SHORT 0x4+control_loc 240
                           WRITE_SHORT 0x6+control_loc 256
                        END ELSE
                        PATCH_IF (control_ID=29 AND control_type=0) BEGIN // bottom left button
                           WRITE_SHORT 0x4+control_loc 24
                           WRITE_SHORT 0x6+control_loc 351
                        END ELSE
                        PATCH_IF (control_ID=28 AND control_type=0) BEGIN // bottom right button
                           WRITE_SHORT 0x4+control_loc 135
                           WRITE_SHORT 0x6+control_loc 351
                        END
               END
       END
    END

// block the tutorial

COPY ~iwd_in_bg2/biff/gui/start.chu~ ~iwd_in_bg2/biff/gui~
    GET_OFFSET_ARRAY window_array 0x10 4 0x8 4 0 0 0x1c
    PHP_EACH window_array AS int => window_off BEGIN
       PATCH_IF LONG_AT window_off =5 BEGIN   // this is the Tutorial option
          WRITE_ASCII window_off+0x10 ~GUIERR1B~ #8
          WRITE_SHORT window_off+0x4 173 // new ypos
          WRITE_SHORT window_off+0xa 133 // new height
          GET_OFFSET_ARRAY control_array 0xc 4 0xe+ window_off 2 0x18+window_off 2 8
               PHP_EACH control_array AS int => control_off BEGIN
                     READ_LONG control_off control_loc
                        READ_SHORT control_loc control_ID
                        READ_BYTE control_loc + 0xc control_type
                        PATCH_IF (control_ID=10 OR control_ID=2) BEGIN // tutorial button or scrollbar
                           WRITE_SHORT 0x4+control_loc ~-1~
                           WRITE_SHORT 0x6+control_loc ~-1~
                        END ELSE
                        PATCH_IF (control_ID=11) BEGIN // "cancel" button
                           WRITE_SHORT 0x6+control_loc ~86~
                        END ELSE
                        PATCH_IF (control_ID=1) BEGIN // text area
                           WRITE_SHORT 0x6+control_loc ~14~
                        END
               END
       END
    END

// initial warning

COPY_EXISTING ~baldur.ini~ ~baldur.ini~
   REPLACE_TEXTUALLY ~One Time Popup=1~ ~One Time Popup=0~
BUT_ONLY

COPY ~iwd_in_bg2/biff/gui/start.chu~ ~iwd_in_bg2/biff/gui~
       WRITE_ASCII 0x61c ~storescr~
       WRITE_SHORT 0x62e 4
       WRITE_SHORT 0x630 5


/////////////////////////////////////////////////////////////////////////////////////////////
// fix some oddities in GUIMAP.chu that may (and again, may not) be causing map crashes


COPY ~iwd_in_bg2/biff/gui/guimap.chu~ ~iwd_in_bg2/biff/gui~
     GET_OFFSET_ARRAY window_array 0x10 4 0x8 4 0 0 0x1c
     PHP_EACH window_array AS int => window_off BEGIN
        PATCH_IF SHORT_AT window_off = 2 BEGIN // window = 2 - main map
               GET_OFFSET_ARRAY2 ctrl_ind_array window_off 0xc 4 0xe 2 0x18 2 0x8
               PHP_EACH ctrl_ind_array AS int => ctrl_ind_off BEGIN
                  READ_LONG ctrl_ind_off ctrl_off
                  PATCH_IF SHORT_AT ctrl_off = 1 BEGIN // the main map button
                       WRITE_SHORT 0x1c + ctrl_off 1 // don't use frame "2", which doesn't exist
                  END ELSE
                  PATCH_IF SHORT_AT ctrl_off = 3 AND BYTE_AT (ctrl_off + 0xc) = 0 BEGIN // the map pin toggle
                         WRITE_ASCII 0xe + ctrl_off ~#MAPBUT~ (8)
                   END
               END

        END
     END
BUT_ONLY





MAKE_BIFF ~i#gui~ BEGIN ~iwd_in_bg2/biff/gui~ ~.*\..*~ END


ACTION_FOR_EACH ~loadscreen~ IN
~gtrsk001~ ~gtrsk002~ ~gtrsk003~ ~gtrsk004~ ~gtrsk005~ ~gtrsk006~ ~gtrsk007~ ~gtrsk008~ ~gtrsk009~
~load1000~ ~load1100~ ~load1200~ ~load2000~ ~load2100~ ~load3000~ ~load3600~ ~load4000~ ~load5000~
~load6000~ ~load7000~ ~load8001~ ~load9100~ ~load9200~ ~load9300~ ~load9400~ ~load9500~ ~load9600~
~load9700~ ~load9711~ ~load9714~ ~load9716~ ~load9800~
BEGIN
   COPY_EXISTING ~ldsrcn01.mos~ ~override/%loadscreen%.mos~
END

// clear out BG2 override resources

ACTION_FOR_EACH file IN
~gmpconnc.bam~ ~guibtact.bam~ ~guichap.chu~ ~guiconn.chu~ ~guimg.chu~ ~guimp.chu~ ~guirec.chu~
~loadbar.bam~ ~loadcntr.bam~ ~start.chu~ ~gmpncge2.mos~ ~gmpncge3.mos~ ~gprogbar.mos~ ~gtrspbg.mos~
~gtrspsk.mos~ ~gtrspsk2.mos~ ~guierr0b.mos~ ~guiverb.mos~ ~start.mos~ ~stoneopt.mos~
BEGIN
   ACTION_IF FILE_EXISTS ~override/%file%~ BEGIN
      MOVE ~override/%file%~ ~iwd_in_bg2/workspace~
   END
END

BEGIN ~copy over misc anim resources~   DESIGNATED 70


COPY ~iwd_in_bg2/lib/misc_anim.2da~ ~iwd_in_bg2/lib~
        READ_2DA_ENTRIES_NOW ~misc_anim~ 1
        FOR (i=0;i<~misc_anim~;i=i+1) BEGIN
           READ_2DA_ENTRY_FORMER ~misc_anim~ ~i~ 0 ~filename~
           INNER_ACTION BEGIN
                COPY ~iwd_in_bg2/override/%filename%.bam~ ~iwd_in_bg2/biff/misc_anim~
           END
        END
BUT_ONLY

ACTION_BASH_FOR ~iwd_in_bg2/real_override~ ~.*\.bam~ BEGIN
   COPY ~iwd_in_bg2/real_override/%BASH_FOR_RES%.bam~ ~iwd_in_bg2/biff/misc_anim~
END

MAKE_BIFF ~i#animsc~ BEGIN ~iwd_in_bg2/biff/misc_anim~ ~.*\.bam~ END

BEGIN ~copy over misc wav resources~  DESIGNATED 80


COPY ~iwd_in_bg2/lib/misc_wav.2da~ ~iwd_in_bg2/lib~
        READ_2DA_ENTRIES_NOW ~misc_wav~ 1
        FOR (i=0;i<~misc_wav~;i=i+1) BEGIN
           READ_2DA_ENTRY_FORMER ~misc_wav~ ~i~ 0 ~filename~
           INNER_ACTION BEGIN
                COPY ~iwd_in_bg2/real_override/%filename%.wav~ ~iwd_in_bg2/biff/misc_snd~
           END
        END
BUT_ONLY

// Carry over snow footstep sounds

ACTION_DEFINE_ASSOCIATIVE_ARRAY footstep_map BEGIN
   fs_snow7=>wal_01
   fs_snow8=>wal_01a
   fs_snow9=>wal_01b
   fs_snow1=>wal_olc
   fs_snow2=>wal_01d
END
ACTION_PHP_EACH footstep_map AS old=>new BEGIN
      LAF rename_and_log STR_VAR from=EVALUATE_BUFFER ~real_override/%old%.wav~
                                 to=EVALUATE_BUFFER ~biff/misc_snd/%new%.wav~
      END
END
MAKE_BIFF ~i#sndmsc~ BEGIN ~iwd_in_bg2/biff/misc_snd~ ~.*\.wav~ END


BEGIN ~copy over dialog sounds~   DESIGNATED 90


ACTION_FOR_EACH ~soundbase~ IN
~arun_~ ~ann~ ~belh_~ ~cyxu_~ ~ever_~
~fab_~ ~hjoll~ ~hrot_~ ~icas~ ~kres_~
~larr_~  ~poqu_~ ~seer~ ~wylf~  ~yxun_~
BEGIN
   ACTION_BASH_FOR ~iwd_in_bg2/real_override~ ~%soundbase%.*\.wav~ BEGIN
      COPY ~iwd_in_bg2/real_override/%BASH_FOR_RES%.wav~ ~iwd_in_bg2/biff/dialog_snd~
   END
END

MAKE_BIFF ~i#diasnd~ BEGIN ~iwd_in_bg2/biff/dialog_snd~ ~.*\.wav~ END

BEGIN ~copy over portraits~ DESIGNATED 100

<<<<<<<< portrait_map
IWD_portrait         BG2_portrait
dmc                  ncernd
dmf                  nkeldor
dmf2                 nanomen
emc                  nedwin
emf2                 nhaer
emf                  yeslick
emt                  njan
emw                  nminsc
gmw                  nvalyga
hamf                 nyoshim
hamt                 nkorgan
hemf                 man1
hemt                 man2
hemw                 gendwrf
hmb2                 genmelf
hmb                  genmhlf
hmc2                 ajantis
hmc3                 coran
hmc                  edwin
hmf2                 eldoth
hmf3                 garrick
hmf4                 kagain
hmf5                 khalid
hmf6                 kivan
hmf7                 minsc
hmf                  montar
hmw2                 quayle
hmw3                 tiax
hmw4                 xan
hmw                  xzar
dff                  nnalia
efc                  nmazzy
eff                  naerie
efw                  njaheir
efw2                 nvicon
gfw                  woman1
haff                 woman2
hefb                 alora
hefc                 branwe
heff                 dynahei
hefw                 faldorn
hfw2                 imoen
hfw3                 jaheira
hff                  safana
hft2                 shartel
hft                  skie
hfw                  viconia
>>>>>>>>


COPY - portrait_map portrait_map
     READ_2DA_ENTRIES_NOW portrait_map 2
     FOR (i=1;i<~portrait_map~;i=i+1) BEGIN
        READ_2DA_ENTRY_FORMER portrait_map i 0 iwdname
        READ_2DA_ENTRY_FORMER portrait_map i 1 bg2name
        INNER_ACTION BEGIN
           COPY ~iwd_in_bg2/override/%iwdname%_G.bmp~ ~portraits/%bg2name%l.bmp~
           COPY ~iwd_in_bg2/override/%iwdname%_L.bmp~ ~portraits/%bg2name%m.bmp~
           COPY ~iwd_in_bg2/override/%iwdname%_S.bmp~ ~portraits/%bg2name%s.bmp~
        END
     END

BEGIN ~convert soundsets~ DESIGNATED 110

<<<<<<<< sound_set_map
03 8    battlecry
04 9    battlecry
16 0    selection
23 _    action
05 a    battlecry
08 b    becoming leader
10 c    tired
12 d    bored
15 e    badly wounded
17 f    selection
18 g    selection
19 h    selection
24 i    action
25 j    action
26 k    action
34 l    being hit
37 m    dying
27 s    action
28 t    action
29 u    action
23 v    action
20 x    rare select
21 y    rare select
06 z    critical hit
39 '    React to party death 1
40 !    React to party death 2
01 #    Morale failure
>>>>>>>>


COPY - ~sound_set_map~ ~sound_set_map~
   READ_2DA_ENTRIES_NOW ~soundset_data~ 2
   SET ~num_sounds~=~soundset_data~
   FOR (i=0;i<~soundset_data~;i=i+1) BEGIN
      READ_2DA_ENTRY_FORMER ~soundset_data~ i 0 ~iwd~
      READ_2DA_ENTRY_FORMER ~soundset_data~ i 1 ~bg2~
      SPRINT $soundset_map_iwd(~%i%~) ~%iwd%~
      SPRINT $soundset_map_bg2(~%i%~) ~%bg2%~
   END


<<<<<<<< sound_set_table
dff_     Female_Fighter_1
hefc_    Female_Fighter_2
heff_    Female_Fighter_3
haff_    Female_Fighter_4
hff_     Female_Fighter_5
dfc_     Female_Mage_1
efm_     Female_Mage_2
gfc_     Female_Mage_3
hefm_    Female_Mage_4
hfm_     Female_Mage_5
haft_    Female_Thief_1
hft_     Female_Thief_2
hfone0    HoW_Female_1
hftw0    HoW_Female_2
hfthr0    HoW_Female_3
hmone0    HoW_Male_1
hmtw0    HoW_Male_2
hmthr0    HoW_Male_3
dmc_     Male_Fighter_1
dmf_     Male_Fighter_2
hmf_     Male_Fighter_3
hemf_    Male_Fighter_4
emf_     Male_Fighter_5
emm_     Male_Mage_1
gmm_     Male_Mage_2
gmt_     Male_Mage_3
hmc_     Male_Mage_4
hamf_    Male_Mage_5
emt_     Male_Thief_1
hemt_    Male_Thief_2
>>>>>>>>

COPY - ~sound_set_table~ ~sound_set_table~
   READ_2DA_ENTRIES_NOW ~soundset_list~ 2
   FOR (j=0;j<~soundset_list~;j=j+1) BEGIN
      READ_2DA_ENTRY_FORMER ~soundset_list~ j 0 ~prefix~
      READ_2DA_ENTRY_FORMER ~soundset_list~ j 1 ~folder~
      INNER_ACTION BEGIN
           OUTER_FOR (i=0;i<~num_sounds~;i=i+1) BEGIN
                OUTER_SET ~iwd_suffix~=$soundset_map_iwd(~%i%~)
                OUTER_SPRINT ~bg2_suffix~ $soundset_map_bg2(~%i%~)
                ACTION_IF ~iwd_suffix~<10 THEN BEGIN
                   OUTER_SPRINT ~iwd_name~ ~%prefix%~ ^ ~0~ ^ ~%iwd_suffix%~
                END ELSE BEGIN
                   OUTER_SPRINT ~iwd_name~ ~%prefix%~ ^ ~%iwd_suffix%~
                END
                OUTER_SPRINT ~bg2_name~ ~%prefix%~^~%bg2_suffix%~
                ACTION_IF FILE_EXISTS ~iwd_in_bg2/sounds/%folder%/%iwd_name%.wav~ THEN BEGIN
                   COPY ~iwd_in_bg2/sounds/%folder%/%iwd_name%.wav~ ~sounds/%bg2_name%.wav~
                END ELSE BEGIN
                   FAIL ~Can't find %folder%/%iwd_name%~
                END
           END
           COPY ~iwd_in_bg2/real_override/ign_21.wav~ ~sounds/%prefix%3.wav~
      END
   END
   


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///     CREATURES
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

BEGIN ~CRE conversions~ DESIGNATED 120


  //// deal with race and class IDs

  //// start by creating the files

COPY ~iwd_in_bg2/files/race.ids~ ~override~

// The goblin "SS1GOB1" is our paradigm of "boring" death variables

COPY ~iwd_in_bg2/cre/ss1gob1.cre~ ~iwd_in_bg2/cre/ssgob1.cre~
     READ_ASCII 0x27e "boringdeathvar" (32) NULL
BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~helljon.cre~ ~override~
  READ_LONG 0x04 "ver"
  BUT_ONLY_IF_IT_CHANGES

COPY ~iwd_in_bg2/cre~ ~override~
  FOR (index = 0x08 ; index < 0x231 ; index = index + 0x04) BEGIN
    PATCH_IF ("%index%" = 0x10) BEGIN
      SET "index" = 0x50
    END
    PATCH_IF ("%index%" = 0x58) BEGIN
      SET "index" = 0xa4
    END
    READ_LONG "%index%" "string"
    PATCH_IF ("%string%" >= 0) AND ("%string%" < 100000) BEGIN
      PATCH_IF (("%string%" = 0) AND ("%index%" >= 0xa4)) BEGIN
        WRITE_LONG "%index%" 0xffffffff
      END ELSE BEGIN
        SET ~string~=~string~+~iwd_offset~
        WRITE_LONG "%index%" ~string~
      END
    END
  END
  WRITE_LONG 0x04 "%ver%"
  READ_LONG  0x308 "known_off"
  READ_LONG  0x310 "meminfo_off"
  READ_LONG  0x318 "mem_off"
  READ_LONG  0x320 "slot_off"
  READ_LONG  0x324 "itm_off"
  READ_LONG  0x32c "fx_off"
  WRITE_LONG 0x308 ("%known_off%" - 0x68)
  WRITE_LONG 0x310 ("%meminfo_off%" - 0x68)
  WRITE_LONG 0x318 ("%mem_off%" - 0x68)
  WRITE_LONG 0x320 ("%slot_off%" - 0x68)
  WRITE_LONG 0x324 ("%itm_off%" - 0x68)
  WRITE_LONG 0x32c ("%fx_off%" - 0x68)
/*  READ_ASCII 0x27e "secondary" (32) NULL
  READ_ASCII 0x29e "tertiary" (32) NULL
  PATCH_IF (("%secondary%" STRING_COMPARE_CASE "%boringdeathvar%") OR ("%tertiary%" STRING_COMPARE_CASE "%boringdeathvar%")) BEGIN
    READ_ASCII 0x2e8 "primary" (32) NULL // typo in Cam's script
    SPRINT ~outputstring~ ~%SOURCE_RES%~ ^~ ~ ^ ~%primary%~ ^ ~ ~ ^ ~%secondary%~ ^ ~ ~ ^ ~%tertiary%~
    INNER_ACTION BEGIN
      APPEND_OUTER ~iwd_in_bg2/lib/dvs.tpa~ "%outputstring%"
    END
  END
  */
  DELETE_BYTES 0x270 0x68
  LAUNCH_PATCH_MACRO ~creature_mappings~

// Ad hoc stuff: BG2 myconids get race: myconid

COPY_EXISTING ~icmyc01.cre~ ~override~ ~icmyc02.cre~ ~override~  // bg2 myconids
    WRITE_BYTE 0x272 164


// Ad hoc stuff: all fire elementals get class: ELEMENTAL_FIRE (187)

ACTION_FOR_EACH ~fire~ IN
~cyfiree~ ~druidfe~ ~elemfire~ ~es12fire~
~es16fire~ ~es20fire~ ~es24fire~ ~es8fire~
BEGIN
   COPY_EXISTING ~%fire%.cre~ ~override~
        WRITE_BYTE 0x273 187
   BUT_ONLY
END

// Ad hoc stuff: all fire salamanders  get class: SALAMANDER_FIRE (218)

APPEND ~class.ids~ ~218 SALAMANDER_FIRE~

ACTION_FOR_EACH ~fire~ IN
~ms6salf~ ~msmsalf~ ~rldsalfi~ ~rndfsal~
~rwtsalf~ ~sal8001~ ~sal8005~ ~sal8008~
BEGIN
   COPY_EXISTING ~%fire%.cre~ ~override~
        WRITE_BYTE 0x273 218
   BUT_ONLY
END

// Ad hoc stuff: all frost salamanders get class: SALAMANDER_FROST (213)

APPEND ~class.ids~ ~213 SALAMANDER_FROST~

ACTION_FOR_EACH ~frost~ IN
~frostsal~ ~invissal~ ~kerish~ ~ms6salc~ ~rndfsal~ ~rwtsalf~
BEGIN
   COPY_EXISTING ~%frost%.cre~ ~override~
        WRITE_BYTE 0x273 213
   BUT_ONLY
END

// Ad hoc stuff: all remorhazes get class: REMORHAZ (214)

APPEND ~class.ids~ ~214 REMORHAZ~

ACTION_FOR_EACH ~frost~ IN
~remorha~ ~remorhas~ ~remorhh~ ~rndremor~
BEGIN
   COPY_EXISTING ~%frost%.cre~ ~override~
        WRITE_BYTE 0x273 214
   BUT_ONLY
END

// Ad hoc stuff: all ice golems get class: GOLEM_ICE (215)

APPEND ~class.ids~ ~215 GOLEM_ICE~

ACTION_FOR_EACH ~frost~ IN
~cyiceg~ ~dlgolem~ ~golemic~ ~rndigolm~ ~sagolem~
BEGIN
   COPY_EXISTING ~%frost%.cre~ ~override~
        WRITE_BYTE 0x273 215
   BUT_ONLY
END


// Ad hoc stuff: all rhinoceros beetles get class: BEETLE_RHINO (217)

APPEND ~class.ids~ ~217 BEETLE_RHINO~

ACTION_FOR_EACH ~frost~ IN
~beetrhin~ ~cybeetr~ ~mbrh~
BEGIN
   COPY_EXISTING ~%frost%.cre~ ~override~
        WRITE_BYTE 0x273 217
   BUT_ONLY
END

// Ad hoc stuff: all water elementals get class: ELEMENTAL_WATER (218)
APPEND ~class.ids~ ~218 ELEMENTAL_WATER~

ACTION_FOR_EACH ~frost~ IN
~cywatere~ ~druidwe~ ~elemwat~ ~elwatg01~ ~es12watr~ ~es16watr~ ~es20watr~ ~es24watr~ ~es8watr~
BEGIN
   COPY_EXISTING ~%frost%.cre~ ~override~
        WRITE_BYTE 0x273 218
   BUT_ONLY
END

// Ad hoc stuff: all winter wolves get class: WOLF_WINTER (146)

ACTION_FOR_EACH ~frost~ IN
~as3wint~ ~druidww~ ~rndwwolf~ ~rwtwwolf~ ~winwolf~ ~winwolfp~ ~wolfwint~
BEGIN
   COPY_EXISTING ~%frost%.cre~ ~override~
        WRITE_BYTE 0x273 146
   BUT_ONLY
END

// Ad hoc stuff: all iron golems get class: GOLEM_IRON (182)

ACTION_FOR_EACH ~frost~ IN
~cyirong~ ~golemiro~
BEGIN
   COPY_EXISTING ~%frost%.cre~ ~override~
        WRITE_BYTE 0x273 182
   BUT_ONLY
END

// Ad hoc stuff: some svirfneblin are designated "gnome" and need to become "svirfneblin"

ACTION_FOR_EACH ~svirf~ IN ~beorn~ ~fengla~ ~fengla2~ ~guello~ BEGIN
   COPY_EXISTING ~%svirf%.cre~ ~override~
      WRITE_BYTE 0x272 153
END

// Ad hoc stuff: ettins

ACTION_FOR_EACH ~ettin~ IN ~ettin~ ~metn~ ~wtettin~ BEGIN
   COPY_EXISTING ~%ettin%.cre~ ~override~
      WRITE_BYTE 0x272 199
END

// Ad hoc stuff: skeletons need to be strong enough to use their weapons

COPY_EXISTING_REGEXP ~.*\.cre~ ~override~          // Skeletons need Str >=15
      PATCH_IF (BYTE_AT 0x238 <15) AND (BYTE_AT 0x272=115) BEGIN
         WRITE_BYTE 0x238 15
      END
BUT_ONLY




///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///     MISC CAM TASKS
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

BEGIN ~misc cam tasks~   DESIGNATED 140



/////                                                  \\\\\
///// preset GAM file                                  \\\\\
/////                                                  \\\\\

COPY ~iwd_in_bg2/rules/icewind.gam~ ~iwd_in_bg2/rules/icewind.gam~ // read info for updating bg2 gam file
  READ_LONG  0x08 "time"
  READ_ASCII 0x40 "area"
  BUT_ONLY_IF_IT_CHANGES

COPY_EXISTING ~baldur.gam~ ~override~
  WRITE_LONG   0x08 "%time%"
  WRITE_ASCIIE 0x40 "%area%" #8
  READ_LONG 0x34 "npc_num"
  PATCH_IF ("%npc_num%" > 0) BEGIN // delete npc references
    READ_LONG 0x30 "npc_off"
    DELETE_BYTES "%npc_off%" (0x160 * "%npc_num%")
    WRITE_LONG 0x34 0
    READ_LONG  0x20 "party_off"
    WRITE_LONG 0x20 ("party_off" - (0x160 * "%npc_num%"))
    READ_LONG  0x28 "unk_off"
    WRITE_SHORT 0x28 ("unk_off" - (0x160 * "%npc_num%"))
    READ_LONG  0x50 "journal_off"
    WRITE_LONG 0x50 ("journal_off" - (0x160 * "%npc_num%"))
    READ_LONG  0x68 "fam_off"
    WRITE_LONG 0x68 ("fam_off" - (0x160 * "%npc_num%"))
  END


// master area

COPY ~iwd_in_bg2/rules/mastarea.2da~ ~override~
  APPEND_FILE ~iwd_in_bg2/more/mastarea.2da~

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///     AREAS AND WORLDMAP
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////


BEGIN ~convert area files~  DESIGNATED 150



COPY ~iwd_in_bg2/are~ ~override~
  READ_SHORT 0x5a "info_num"
  READ_LONG  0x5c "info_off"
  READ_LONG  0xc0 "rest_off"
  FOR (index = 0 ; index < info_num ; index = index + 1) BEGIN
    READ_LONG ("%info_off%" + 0x64 + ("%index%" * 0xc4)) "string"
    PATCH_IF ("%string%" > 0) AND ("%string%" < 100000) BEGIN
             SET ~string~=~string~+~iwd_offset~
             WRITE_LONG ("%info_off%" + 0x64 + ("%index%" * 0xc4)) "string"
    END
  END
  FOR (index2 = ("%rest_off%" + 0x20) ; index2 < ("%rest_off%" + 0x45) ; index2 = index2 + 0x04) BEGIN
    READ_LONG "%index2%" "string"
    PATCH_IF ("%string%" > 0) AND ("%string%" < 100000) BEGIN
             SET ~string~=~string~+~iwd_offset~
             WRITE_LONG "%index2%" "string"
    END
  END

BEGIN ~fix awkward/broken area transitions~ DESIGNATED 155


DEFINE_PATCH_MACRO ~make_pixel_passable~ BEGIN
   SET ~linelength~=~width~/2
   PATCH_IF ~linelength~*2<~width~ BEGIN
      SET ~linelength~=~width~+1
   END
   SET ~loc~=(~x_coord~/2)+~y_coord~*~linelength~ +~pixel_offset~
//   PATCH_PRINT ~%x_coord% %y_coord% %loc%~
   READ_BYTE ~loc~ ~pixel~
   // left pixel
   SET ~leftpixel~=~pixel~ BAND 0b11110000
   PATCH_IF ~leftpixel~=0x0 OR ~leftpixel~=0x80 OR ~leftpixel~=0xa0 BEGIN
         SET ~pixel~=~pixel~ BAND 0b00001111
         SET ~pixel~=~pixel~ BOR 0b01010000
   END
   // right pixel
   SET ~rightpixel~=~pixel~ BAND 0b00001111
   PATCH_IF ~rightpixel~=0x0 OR ~rightpixel~=0x8 OR ~rightpixel~=0xa BEGIN
         SET ~pixel~=~pixel~ BAND 0b11110000
         SET ~pixel~=~pixel~ BOR 0b00000101
   END
   WRITE_BYTE ~loc~ ~pixel~
END

DEFINE_PATCH_MACRO ~make_rectangle_passable~ BEGIN
   SET ~pixel_offset~=0x10*0x4+0x36
   READ_LONG 0x12 ~width~
   READ_LONG 0x16 ~height~
   SET ~left~=(~bb_left~*~width~)/~ar_width~
   SET ~right~=(~bb_right~*~width~)/~ar_width~
   SET ~top~=(~bb_top~*~height~)/~ar_height~
   SET ~bottom~=(~bb_bottom~*~height~)/~ar_height~
//   PATCH_PRINT ~%left% %right% %top% %bottom%~
   FOR (i=~left~;i<~right~;i=i+1) BEGIN
      FOR (j=~bottom~;j<~top~;j=j+1) BEGIN
         SET ~x_coord~=~i~
         SET ~y_coord~=~j~
         LAUNCH_PATCH_MACRO ~make_pixel_passable~
      END
   END

END

ACTION_BASH_FOR ~iwd_in_bg2/are~ ~.*\.are~ BEGIN
   COPY_EXISTING ~%BASH_FOR_FILE%~ ~override~
    SPRINT ~filename~ ~%SOURCE_RES%~
    // get overall dimensions
    READ_ASCII 0x8 ~wedfile~
    INNER_ACTION BEGIN
       COPY_EXISTING ~%wedfile%.wed~ ~override~
              READ_SHORT 0x20 ~tile_width~
              READ_SHORT 0x22 ~tile_height~
              SET ~ar_width~=~tile_width~*64
              SET ~ar_height~=~tile_height~*64
       BUT_ONLY
    END
    // find the travel triggers
    READ_LONG 0x5c ~trig_off~
    READ_SHORT 0x5a ~trig_num~
    FOR (~k~=0;k<~trig_num~;k=k+1) BEGIN
       // check trigger type
       READ_SHORT 0x20 + ~trig_off~ + 0xc4*~k~ ~trigtype~
       // if it's a travel trigger...
       PATCH_IF ~trigtype~=2 BEGIN
             // find the bounding box coords
             READ_SHORT 0x22 + ~trig_off~ + 0xc4*~k~ ~bb_left~
             READ_SHORT 0x24 + ~trig_off~ + 0xc4*~k~ ~bb_top~
             READ_SHORT 0x26 + ~trig_off~ + 0xc4*~k~ ~bb_right~
             READ_SHORT 0x28 + ~trig_off~ + 0xc4*~k~ ~bb_bottom~
             // reflect the y-coords to allow for the fact that Areas go top-bottom, BMPs bottom-top
             SET ~bb_top~=~ar_height~-~bb_top~
             SET ~bb_bottom~=~ar_height~-~bb_bottom~
             // patch the search map
             INNER_ACTION BEGIN
                COPY_EXISTING ~%wedfile%SR.BMP~ ~override~
                       LAUNCH_PATCH_MACRO ~make_rectangle_passable~
                BUT_ONLY
             END
       END
    END
   BUT_ONLY
END


// MAKE_BIFF ~i#srcmap~ BEGIN ~iwd_in_bg2/biff/search_maps~ ~.*\.bmp~ END


BEGIN ~copy over world map graphics~ DESIGNATED 160


// the old ones

COPY
     ~iwd_in_bg2/real_override/expmap.mos~ ~override~
     ~iwd_in_bg2/override/emapicon.bam~ ~override~

// the new graphics

COPY ~iwd_in_bg2/files/worldmap.mos~ ~override~
COPY ~iwd_in_bg2/files/mapicons.bam~ ~override~


BEGIN ~convert world map~  DESIGNATED 170


COPY ~iwd_in_bg2/wmp~ ~override~
  READ_LONG 0x24 "string"
  PATCH_IF ("%string%" >= 0) AND ("%string%" < 100000) BEGIN
           SET ~string~=~string~+~iwd_offset~
           WRITE_LONG 0x24 ~string~
  END
  READ_LONG 0x30 "area_num"
  READ_LONG 0x34 "area_off"
  FOR (index = 0 ; index < area_num ; index = index + 1) BEGIN
    READ_LONG ("%area_off%" + 0x40 + ("%index%" * 0xf0)) "string"
    PATCH_IF ("%string%" >= 0) AND ("%string%" < 100000) BEGIN
           SET ~string~=~string~+~iwd_offset~
           WRITE_LONG ("%area_off%" + 0x40 + ("%index%" * 0xf0)) ~string~
    END
    READ_LONG ("%area_off%" + 0x44 + ("%index%" * 0xf0)) "string"
    PATCH_IF ("%string%" >= 0) AND ("%string%" < 100000) BEGIN
           SET ~string~=~string~+~iwd_offset~
           WRITE_LONG ("%area_off%" + 0x44 + ("%index%" * 0xf0)) ~string~
    END
 //   WRITE_ASCII ("%area_off%" + 0x44 + ("%index%" * 0xf0)) ~~ #8        // wipe the loading images

  END

BEGIN ~merge maps~     DESIGNATED 180



// adjust the original-game locations; adjust the map size; record the number of original-game areas and links

OUTER_SET ~adjust~=399

COPY_EXISTING ~worldmap.wmp~ ~override~
    WRITE_LONG 0x1c 1249
    READ_LONG 0x30 ~num_area~
    READ_LONG 0x34 ~off_area~
    READ_LONG 0x38 ~off_links~
    READ_LONG 0x3c ~num_links~
    FOR (i=0;i<~num_area~;i=i+1) BEGIN
         READ_LONG 0x3c + ~off_area~ + 0xf0*~i~ ~yloc~
         SET ~yloc~=~yloc~+~adjust~
         WRITE_LONG 0x3c + ~off_area~ + 0xf0*~i~ ~yloc~
    END
BUT_ONLY

// renumber the HoW map

OUTER_SET ~bam_step~=11

COPY_EXISTING ~worldm25.wmp~ ~workspace~
    READ_LONG 0x30 ~num_area_how~
    READ_LONG 0x34 ~off_area_how~
    READ_LONG 0x38 ~off_links_how~
    READ_LONG 0x3c ~num_links_how~
   FOR (i=0;i<~num_area_how~;i=i+1) BEGIN
        READ_LONG 0x34 + ~off_area_how~+0xf0*~i~ ~bamnum~
        SET ~bamnum~=~bamnum~+~bam_step~
        WRITE_LONG 0x34 + ~off_area_how~+0xf0*~i~ ~bamnum~
        FOR (j=0;j<4;j=j+1) BEGIN
           READ_LONG 0x50 + ~off_area_how~ + 0x8*~j~ + 0xf0 * ~i~ ~linkstart~
           SET ~linkstart~=~linkstart~+~num_links~
           WRITE_LONG 0x50 + ~off_area_how~ + 0x8*~j~ + 0xf0 * ~i~ ~linkstart~
        END
    END
    FOR (i=0;i<~num_links_how~;i=i+1) BEGIN
       READ_LONG ~off_links_how~+ 0xd8 * ~i~ ~are_ind~
       SET ~are_ind~=~are_ind~+~num_area~
       WRITE_LONG ~off_links_how~+ 0xd8 * ~i~ ~are_ind~
    END
    SET ~area_length_how~=~num_area_how~*0xf0
    READ_ASCII ~off_area_how~ ~how_areas~ (~area_length_how~)
    SET ~disp~=STRING_LENGTH ~%how_areas%~
    SET ~link_length_how~=~num_links_how~*0xd8
    READ_ASCII ~off_links_how~ ~how_links~ (~link_length_how~)

COPY_EXISTING ~worldmap.wmp~ ~override~
    INSERT_BYTES ~off_area~+0xf0 * ~num_area~ ~area_length_how~
    WRITE_ASCIIE ~off_area~+0xf0 * ~num_area~ ~%how_areas%~
   INSERT_BYTES ~off_links~+~area_length_how~+0xd8*~num_links~ ~link_length_how~
   WRITE_ASCIIE ~off_links~+~area_length_how~+0xd8*~num_links~ ~%how_links%~
    SET ~off_links~=~off_links~+~area_length_how~
    WRITE_LONG 0x38 ~off_links~
    SET ~num_area~=~num_area~+~num_area_how~
    WRITE_LONG 0x30 ~num_area~
    SET ~num_links~=~num_links~+~num_links_how~
   WRITE_LONG 0x3c ~num_links~


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///     MISC DAVID TASKS
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////


BEGIN ~misc David tasks~      DESIGNATED 190




// Starting area

COPY ~iwd_in_bg2/files/startare.2da~ ~override~
COPY ~iwd_in_bg2/files/startpos.2da~ ~override~

// Wipe BALDUR

<<<<<<<< baldur.baf
>>>>>>>>

COMPILE ~baldur.baf~
COPY_EXISTING ~baldur.bcs~ ~override/baldur25.bcs~

// Copy over working minimaps~

ACTION_BASH_FOR ~iwd_in_bg2/new_map~ ~.*\.mos~ BEGIN
    COPY ~iwd_in_bg2/new_map/%BASH_FOR_RES%.mos~ ~iwd_in_bg2/BIFF/new_map~
END




MAKE_BIFF ~i#newmap~ BEGIN ~iwd_in_bg2/biff/new_map~ ~.*\.mos~ END



//  ~Sort out chapter displays~

<<<<<<<< chp_txt_template
2DA V1.0
NONE 
       0       1
SWITCH DEFAULT DEFAULT
>>>>>>>>

<<<<<<<< chp_txt_table
chptxt0       16202		14454
chptxt1       16203		14453
chptxt2       16204		14452
chptxt3       16205		19435
chptxt4       16206		14450
chptxt5       16207		14449
chptxt6       16208		14448
chptxt7       16209		15889
>>>>>>>>

COPY - chp_txt_table chp_txt_table
     READ_2DA_ENTRIES_NOW chp_txt 3
     FOR (i=0;i<chp_txt;i=i+1) BEGIN
         READ_2DA_ENTRY_FORMER chp_txt i 0 ~filename~
         READ_2DA_ENTRY_FORMER chp_txt i 1 ~string1~
         READ_2DA_ENTRY_FORMER chp_txt i 2 ~string2~
         SET ~string1~=~string1~+~iwd_offset~
         SET ~string2~=~string2~+~iwd_offset~
         INNER_ACTION BEGIN
                 COPY chp_txt_template ~override/%filename%.2da~
                 APPEND ~%filename%.2da~ ~DEFAULT     %string1%      %string2%~
         END
     END




// resurrection costs

COPY ~iwd_in_bg2/rules/raisdead.2da~ ~override~

OUTER_FOR (i=31;i<41;i=i+1) BEGIN
   APPEND ~raisdead.2da~ ~%i% 10000~
END

// earlier calender

COPY ~iwd_in_bg2/rules/years.2da~ ~override~

// ITEMEXCL

COPY ~iwd_in_bg2/files/itemexcl.2da~ ~override~

// remove loading hints

COPY ~iwd_in_bg2/files/loadhint.2da~ ~override~
COPY ~iwd_in_bg2/files/loadh25.2da~ ~override~

// lowered XP rewards for traps et al

COPY ~iwd_in_bg2/files/xpbonus.2da~ ~override~

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///     STORES
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////


BEGIN ~convert stores~         DESIGNATED 200


// Cam's code

COPY ~iwd_in_bg2/sto~ ~override~
  READ_LONG 0x0c "string"
  PATCH_IF ("%string%" >= 0) AND ("%string%" < 100000) BEGIN
           SET ~string~=~string~+~iwd_offset~
           WRITE_LONG 0x0c ~string~
  END
  READ_LONG 0x4c "drink_off"
  READ_LONG 0x50 "drink_num"
  FOR (index = 0 ; index < drink_num ; index = index + 1) BEGIN
    READ_LONG ("%drink_off%" + 0x08 + ("%index%" * 0x14)) "string"
    PATCH_IF ("%string%" >= 0) AND ("%string%" < 100000) BEGIN
           SET ~string~=~string~+~iwd_offset~
           WRITE_LONG ("%drink_off%" + 0x08 + ("%index%" * 0x14)) ~string~
    END
  END

// convert v9 STO to v1

COPY_EXISTING_REGEXP GLOB ~.*\.STO~ ~OVERRIDE~
    READ_ASCII 0x5 ~type~ (1)
    PATCH_IF ~%type%~ STRING_EQUAL_CASE ~9~ THEN BEGIN
          READ_SHORT 0x9c ~capacity~
          WRITE_SHORT 0x22 ~capacity~
          DELETE_BYTES 0x9c 0x54
          PATCH_FOR_EACH ~offsetloc~ IN ~0x2c~ ~0x34~ ~0x4c~ ~0x70~ BEGIN
             READ_LONG ~offsetloc~ ~offset~
             SET ~offset~=~offset~-0x54
             WRITE_LONG ~offsetloc~ ~offset~
             WRITE_ASCII 0x5 ~1~
          END
    END
BUT_ONLY

// stores buy shields

ACTION_BASH_FOR ~iwd_in_bg2/sto~ ~.*\.sto~ BEGIN
   COPY_EXISTING ~%BASH_FOR_RES%.sto~ ~override~
      READ_LONG 0x2c ~purchase_off~
      READ_LONG 0x30 ~purchase_num~
           FOR (i=0;i<~purchase_num~;i=i+1) BEGIN
              READ_LONG 0x4*~i~+~purchase_off~ ~item~
              PATCH_IF ~item~=49 BEGIN
                 WRITE_LONG 0x4*~i~+~purchase_off~ 12
              END
           END
   BUT_ONLY
END




///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///     MUSIC
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////


BEGIN ~convert music~       DESIGNATED 210

// we assume all the music is copied over

AT_NOW ~iwd_in_bg2/move_music.bat~

ACTION_BASH_FOR ~music~ ~.*\.mus~ BEGIN
   COPY ~music\%BASH_FOR_RES%.mus~ ~music~
        REPLACE_TEXTUALLY ~MX9000A~ ~SPC1~
   BUT_ONLY
END



ACTION_IF FILE_EXISTS ~iwd_in_bg2\files\songlist.2da~ BEGIN
    COPY ~iwd_in_bg2\files\songlist.2da~ ~override~ // won't be needed in EasyIWD mode
END
COPY ~music/mx9000/mx9000a.acm~ ~music/spc1.acm~

COPY_EXISTING ~ar8005.are~ ~override~
    WRITE_LONG 0x2d38 57


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///     SPELLS AND ITEMS
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////



BEGIN ~convert spells~       DESIGNATED 220



INCLUDE ~iwd_in_bg2/lib/nythrun_sectype.tpa~ // this does secondary type setup

LAUNCH_ACTION_MACRO ~initialise_records~ // this wipes all the record files

COPY ~iwd_in_bg2/files/spfearef.vvc~ ~iwd_in_bg2/workspace/vvc_base.vvc~
      WRITE_ASCII 0x8 ~~ #8 // wipe BAM file
      WRITE_LONG 0x20 0x8 // wipe sequencing flags, other than the kind-of-essential "draw me"
      WRITE_ASCII 0x78 ~~ #8 // wipe WAV start sound


// secondary types for spells that don't currently have them

COPY - ~iwd_in_bg2/lib/newsectype.2da~ ~iwd_in_bg2/lib~
    READ_2DA_ENTRIES_NOW ~newsectype~ 1
    FOR (i=0;i<~%newsectype%~;i=i+1) BEGIN
       READ_2DA_ENTRY_FORMER ~newsectype~ i 0 ~spell~
       READ_2DA_ENTRY_FORMER ~newsectype~ i 1 ~sectype~
       INNER_ACTION BEGIN
          COPY ~iwd_in_bg2/spl/%spell%.spl~ ~iwd_in_bg2/spl~
             WRITE_BYTE 0x27 ~sectype~
       END
    END

// icon map

LAUNCH_ACTION_MACRO ~read_in_state_icons~

// casting graphics

COPY
    ~iwd_in_bg2/override/abjurcg.bam~ ~iwd_in_bg2/biff/spl_anim/cgabjura.bam~
     ~iwd_in_bg2/override/altercg.bam~ ~iwd_in_bg2/biff/spl_anim/cgaltera.bam~
     ~iwd_in_bg2/override/conjurcg.bam~ ~iwd_in_bg2/biff/spl_anim/cgconjur.bam~
     ~iwd_in_bg2/override/divincg.bam~ ~iwd_in_bg2/biff/spl_anim/cgdivina.bam~
     ~iwd_in_bg2/override/enchacg.bam~ ~iwd_in_bg2/biff/spl_anim/cgenchan.bam~
     ~iwd_in_bg2/override/illuscg.bam~ ~iwd_in_bg2/biff/spl_anim/cgillusi.bam~
     ~iwd_in_bg2/override/invoccg.bam~ ~iwd_in_bg2/biff/spl_anim/cginvoca.bam~
     ~iwd_in_bg2/override/necrocg.bam~ ~iwd_in_bg2/biff/spl_anim/cgnecrom.bam~

// projectiles

INCLUDE ~iwd_in_bg2/lib/convert_pro.tpa~

// preliminary BAM work

COPY ~iwd_in_bg2/spl/sppr610.spl~ ~iwd_in_bg2/spl~
   WRITE_ASCII 0x3a ~sppr610c~ #8



/// Get the list of "awkward opcodes", opcodes we're not happy with atm

LAUNCH_ACTION_MACRO ~awkward_opcodes~

/// Get the "drop list" - the list of spells we can't handle atm

COPY ~iwd_in_bg2/lib/spells_dropped.2da~ ~iwd_in_bg2/lib/spells_dropped.2da~
        READ_2DA_ENTRIES_NOW ~spells_dropped~ 1
        FOR (i=0;i<~spells_dropped~;i=i+1) BEGIN
            READ_2DA_ENTRY_FORMER ~spells_dropped~ ~i~ 0 ~temp~
            TO_LOWER ~temp~
            SPRINT $spell_drop_list(~%temp%~) ~~
        END
BUT_ONLY

/// Get the "item drop list" - the list of items we can't handle atm

COPY ~iwd_in_bg2/lib/items_dropped.2da~ ~iwd_in_bg2/lib/items_dropped.2da~
        READ_2DA_ENTRIES_NOW ~items_dropped~ 1
        FOR (i=0;i<~items_dropped~;i=i+1) BEGIN
            READ_2DA_ENTRY_FORMER ~items_dropped~ ~i~ 0 ~temp~
            TO_LOWER ~temp~
            SPRINT $item_drop_list(~%temp%~) ~~
        END
BUT_ONLY

/// Get the "minimal clone list" - the list of files where we just steal the BAMs and otherwise
/// use a BG2 resource

COPY ~iwd_in_bg2/lib/spells_mini_cloned.2da~ ~iwd_in_bg2/lib/spells_mini_cloned.2da~
        READ_2DA_ENTRIES_NOW ~spellsminicloned~ 6
        FOR (i=0;i<~spellsminicloned~;i=i+1) BEGIN
            READ_2DA_ENTRY_FORMER ~spellsminicloned~ ~i~ 0 ~iwdspl~
            TO_LOWER ~iwdspl~
            READ_2DA_ENTRY_FORMER ~spellsminicloned~ ~i~ 1 ~bg2spl~
            TO_LOWER ~bg2spl~
            SPRINT $spell_minimal_clone(~%iwdspl%~) ~%bg2spl%~
            SPRINT $spell_map(~%iwdspl%~) ~%bg2spl%~
            READ_2DA_ENTRY_FORMER ~spellsminicloned~ ~i~ 2 ~iwdbam~
            READ_2DA_ENTRY_FORMER ~spellsminicloned~ ~i~ 3 ~bg2bam~
            INNER_ACTION BEGIN
                  COPY ~iwd_in_bg2/override/%iwdbam%.bam~ ~override/%bg2bam%.bam~
            END
            READ_2DA_ENTRY_FORMER ~spellsminicloned~ ~i~ 4 ~iwdbam~
            READ_2DA_ENTRY_FORMER ~spellsminicloned~ ~i~ 5 ~bg2bam~
            INNER_ACTION BEGIN
                  COPY ~iwd_in_bg2/override/%iwdbam%.bam~ ~override/%bg2bam%.bam~
            END
        END
BUT_ONLY

/// Get the "overwrite list" - the list of spells in BG2 being replaced by their IWD namesakes

COPY_EXISTING ~IWD_in_BG2/lib/spl_overwrite_list.2da~ ~IWD_in_BG2/lib~
        COUNT_2DA_ROWS 2 ~rowcount~
        FOR (i=1;i<~rowcount~;i=i+1) BEGIN
            READ_2DA_ENTRY ~i~ 0 2 ~IWDres~
            READ_2DA_ENTRY ~i~ 1 2 ~BG2res~
            TO_LOWER ~IWDres~
            PATCH_IF ~%BG2res%~ STRING_EQUAL_CASE ~copy~ THEN BEGIN
                     SPRINT ~BG2res~ ~%IWDres%~
            END
            SPRINT $overwrite_list(EVALUATE_BUFFER ~%IWDres%~) ~%BG2res%~
        END
BUT_ONLY

/// get the IWD ids list


/// first correct these small errors

COPY ~IWD_in_BG2/rules/spell.ids~ ~IWD_in_BG2/rules~
              REPLACE_TEXTUALLY CASE_INSENSITIVE ~2423 CLERIC_WALL_OF_MOONLIGHT~ ~1423 CLERIC_WALL_OF_MOONLIGHT~
              REPLACE_TEXTUALLY CASE_INSENSITIVE ~3996 TANARI_DEATH_GAZE~ ~~
              REPLACE_TEXTUALLY CASE_INSENSITIVE ~3997 TANARI_VAMPIRIC_TOUCH~ ~~
              REPLACE_TEXTUALLY CASE_INSENSITIVE ~3998 TANARI_SILENCE~ ~~
              REPLACE_TEXTUALLY CASE_INSENSITIVE ~3999 TANARI_PARALYZE~ ~~

COPY_EXISTING ~spell.ids~ ~override~
              REPLACE_TEXTUALLY CASE_INSENSITIVE ~1112 CLERIC_CIRCLE_OF_PROTECTION~ ~~
              REPLACE_TEXTUALLY CASE_INSENSITIVE ~1114 CLERIC_ANIMAL_FRIENDSHIP~ ~~
              REPLACE_TEXTUALLY CASE_INSENSITIVE ~1115 CLERIC_ENDURE_HEAT_COLD~ ~~
              REPLACE_TEXTUALLY CASE_INSENSITIVE ~1215 CLERIC_RESIST_COLD~   ~~


COPY_EXISTING ~IWD_in_BG2/rules/spell.ids~ ~IWD_in_BG2/rules~
        COUNT_2DA_ROWS 2 ~rowcount~
        FOR (i=0;i<~rowcount~;i=i+1) BEGIN
            READ_2DA_ENTRY ~i~ 0 2 ~ids_num~
            READ_2DA_ENTRY ~i~ 1 2 ~ids_entry~
            SPRINT $IWD_ids_list(EVALUATE_BUFFER ~%ids_num%~) ~%ids_entry%~
        END
BUT_ONLY

// build vvcs to play ___h bam files

LAUNCH_ACTION_MACRO ~build_opcode_anims~

// build vvcs to play character overlays

LAUNCH_ACTION_MACRO ~build_cha_anims~

// do Burning hands by hand, borrowing BG2 version  (and stealing from the fixpack)

COPY_EXISTING ~spwi103.spl~  ~override~
  PATCH_IF (SOURCE_SIZE > 0x71) THEN BEGIN
    READ_LONG  0x64 "ho"
    FOR (READ_SHORT 0x68 "hc"; "hc" > 0x00; "hc" -= 0x01) BEGIN
      WRITE_SHORT ("ho" + ("hc" * 0x28) - 0x16) 1
      WRITE_BYTE  ("ho" + ("hc" * 0x28) - 0x1c) 4
      WRITE_SHORT ("ho" + ("hc" * 0x28) - 0x02) "burnhand"
    END
  END
  BUT_ONLY_IF_IT_CHANGES

// read in the list of monster files

LAUNCH_ACTION_MACRO ~list_of_summons~

// overwrite the default monster-summoning animation with the IWD green smoke flash

COPY ~iwd_in_bg2/override/msumm1h.bam~ ~iwd_in_bg2/biff/spl_anim/spgflsh1.bam~

/// get the list of damage types to associate an animation to

LAUNCH_ACTION_MACRO ~damage_anims~

// read in the opcode converter table for "protect from opcode"

LAUNCH_ACTION_MACRO ~pro_from_opcode_converter~


// set up Chant et al

LAUNCH_ACTION_MACRO ~chant_prayer_recitation~

// sort out Moonblade

LAUNCH_ACTION_MACRO ~moon_blade~

// sort out Amaunator sword

LAUNCH_ACTION_MACRO ~amaunator~

// read in the lists of spells that blindness and deafness give immunity to

LAUNCH_ACTION_MACRO ~blindness_deafness_protect~

// sort out ranger tracking

LOAD_TRA  ~iwd_in_bg2/iwd.tra~
LAUNCH_ACTION_MACRO ~ranger_tracking~

// read in the list of cold and fire creatures

LAUNCH_ACTION_MACRO ~cold_fire_using~

// sort out some items

LAUNCH_ACTION_MACRO ~holy_deck~
LAUNCH_ACTION_MACRO ~chill_touch~

// fix ancient/broken armor so as not to count as a projectile

ACTION_FOR_EACH ~notbag~ IN ~misc58~ ~misc82~ BEGIN
   COPY ~iwd_in_bg2/itm/%notbag%.itm~ ~iwd_in_bg2/itm~
      WRITE_SHORT 0x1c 0
END

// create the BG2 Whirlwind spell

LAUNCH_ACTION_MACRO ~refinements_whirlwind~

// copy over Shadow Pact

COPY ~iwd_in_bg2/files/spin997.spl~ ~iwd_in_bg2/spl~

// ad hoc trick: Siren's Yearning gets mapped to Sleep and then back again

COPY ~iwd_in_bg2/spl/spin147.spl~ ~iwd_in_bg2/spl~
   WRITE_SHORT 0x18a 39

// label Hope and Courage to use the alternative, positive emotion projectile


ACTION_FOR_EACH positiveemotion IN spwi419 spwi421 BEGIN
   COPY ~iwd_in_bg2/spl/%positiveemotion%.spl~ ~iwd_in_bg2/spl~
      WRITE_SHORT 0x98 407
END

// sort out the anomalous too-short duration on Hjollder's disable-self windwalk opcode

COPY ~iwd_in_bg2/spl/spin133.spl~ ~iwd_in_bg2/spl~
     WRITE_LONG 0x108 12

// give War Cry a projectile

COPY ~iwd_in_bg2/spl/spin136.spl~ ~iwd_in_bg2/spl~
     WRITE_SHORT 0x98 322

// correct the vanilla bug that prevents Hold Monster getting an icon

COPY ~iwd_in_bg2/spl/spwi508.spl~ ~iwd_in_bg2/spl~
    WRITE_ASCII 0x3a spwi508c

// start work on the spl files

COPY ~iwd_in_bg2/lib/blank.tpa~ ~iwd_in_bg2/lib/strings.tpa~

OUTER_SET ~delete~=0
OUTER_SET ~spell_immunity_index~=0

ACTION_BASH_FOR ~iwd_in_bg2/spl~ ~.*\.SPL~ BEGIN
//ACTION_BASH_FOR ~iwd_in_bg2/spl~ ~SP\(WI\|PR\|IN\)[0-9][0-9][0-9]\.SPL~ BEGIN
//ACTION_BASH_FOR ~iwd_in_bg2/spl~ ~spin162.SPL~ BEGIN
   OUTER_SPRINT ~spellname~ ~%BASH_FOR_RES%~
   OUTER_SPRINT ~spellfullname~ ~%BASH_FOR_FILE%~
   OUTER_INNER_PATCH ~~ BEGIN
      TO_LOWER ~spellname~
   END
   ACTION_IF VARIABLE_IS_SET $spell_drop_list(EVALUATE_BUFFER ~%spellname%~) THEN BEGIN
          PRINT ~We don't even try to convert %spellname% at the moment~
          OUTER_SPRINT $skip_this_spell(~%spellname%~) ~~
   END ELSE BEGIN
          ACTION_IF VARIABLE_IS_SET $spell_minimal_clone(EVALUATE_BUFFER ~%spellname%~) THEN BEGIN
                PRINT ~Doing a purely cosmetic upgrade to %spellname%~
                OUTER_SPRINT $skip_this_spell(~%spellname%~) ~~
          END ELSE BEGIN
                PRINT ~Attempting to convert %spellname%~
                OUTER_SET "abil_length" = 0x28
              OUTER_SET "proj_off" = 0x26
              COPY ~iwd_in_bg2/spl/%spellname%.spl~ ~iwd_in_bg2/workspace~
                   LAUNCH_PATCH_MACRO ~convert_spl~
 ////         BUT_ONLY        // NOT "BUT ONLY", we need the file to be there

          END
   END

END




// sort out Flame Strike

LAUNCH_ACTION_MACRO ~flame_strike~

// righteous wrath

LAUNCH_ACTION_MACRO ~righteous_wrath~


// start work on the items


ACTION_BASH_FOR ~iwd_in_bg2/itm~ ~.*\.ITM~ BEGIN
//ACTION_BASH_FOR ~iwd_in_bg2/itm~ ~sw1h02.ITM~ BEGIN
   OUTER_SPRINT ~spellname~ ~%BASH_FOR_RES%~
   OUTER_SPRINT ~spellfullname~ ~%BASH_FOR_FILE%~
   OUTER_INNER_PATCH ~~ BEGIN
      TO_LOWER ~spellname~
   END
   ACTION_IF VARIABLE_IS_SET $item_drop_list(EVALUATE_BUFFER ~%spellname%~) THEN BEGIN
          PRINT ~We don't even try to convert %spellname% at the moment~
   END ELSE BEGIN
          ACTION_IF VARIABLE_IS_SET $item_minimal_clone(EVALUATE_BUFFER ~%spellname%~) THEN BEGIN
                PRINT ~Doing a purely cosmetic upgrade to %spellname%~
                OUTER_SPRINT $skip_this_spell(~%spellname%~) ~~
          END ELSE BEGIN
                PRINT ~Attempting to convert %spellname%~
                OUTER_SET "abil_length" = 0x38
              OUTER_SET "proj_off" = 0x2a
              COPY ~iwd_in_bg2/itm/%spellname%.itm~ ~iwd_in_bg2/workspace~
                   LAUNCH_PATCH_MACRO ~cam_prof_conv~
                   LAUNCH_PATCH_MACRO ~convert_spl~
 ////         BUT_ONLY        // NOT "BUT ONLY", we need the file to be there

          END
   END

END



// ad hoc changes

// crypt thing teleport

LAUNCH_ACTION_MACRO ~crypt_thing_teleport~

// Debian's rod

LAUNCH_ACTION_MACRO ~debian~

// Talon of the Gloomfrost, Holdfast arrows

LAUNCH_ACTION_MACRO ~entangling_items~

// aura spells

LAUNCH_ACTION_MACRO ~aura_effs~

// undead ward

LAUNCH_ACTION_MACRO ~undead_ward~

// sunray

LAUNCH_ACTION_MACRO ~sunray~

// cloud spells

LAUNCH_ACTION_MACRO ~sort_out_cloud_effects~


// shambling mound weapon

LAUNCH_ACTION_MACRO ~gasp~

// inc. cloud

LAUNCH_ACTION_MACRO ~innate_incendiary_cloud~

// stoneskin secondary type

COPY ~iwd_in_bg2/workspace/spwi408.spl~ ~iwd_in_bg2/workspace~
     WRITE_BYTE 0x27 7 // combat protections


   // sort out strings

LOAD_TRA ~iwd_in_bg2/iwd.tra~
PRINT ~Doing inclusions now~
AT_NOW ~copy "iwd_in_bg2/lib/strings.tpa" "iwd_in_bg2/lib/stringdoc.tpa"~
REINCLUDE ~iwd_in_bg2/lib/strings.tpa~


// ghoul's touch

LAUNCH_ACTION_MACRO ~ghoul_touch~

// Pig's eye

LAUNCH_ACTION_MACRO ~pigs_eye~

// variable-plus items

LAUNCH_ACTION_MACRO ~+x+y~

// animate dead

LAUNCH_ACTION_MACRO ~animate_dead~

// vitriolic sphere (needs green glow effect)

LAUNCH_ACTION_MACRO ~vitriol_fix~

// visible summoned weapons

LAUNCH_ACTION_MACRO ~visible_weapons~

// shield blocks MM

LAUNCH_ACTION_MACRO ~shield_vs_MM~


/// move over the spells

ACTION_BASH_FOR ~iwd_in_bg2/workspace~ ~.*\.SPL~ BEGIN
//ACTION_BASH_FOR ~iwd_in_bg2/spl~ ~SP\(WI\|PR\|IN\)[0-9][0-9][0-9]\.SPL~ BEGIN
//ACTION_BASH_FOR ~iwd_in_bg2/spl~ ~SPWI309\.SPL~ BEGIN
   OUTER_SPRINT ~spellname~ ~%BASH_FOR_RES%~
   OUTER_SPRINT ~spellfullname~ ~%BASH_FOR_FILE%~
   OUTER_INNER_PATCH ~~ BEGIN
      TO_LOWER ~spellname~
   END   /// see if we skip this one
   ACTION_IF !VARIABLE_IS_SET $skip_this_spell(EVALUATE_BUFFER ~%spellname%~) THEN BEGIN

         ACTION_IF VARIABLE_IS_SET $overwrite_list(EVALUATE_BUFFER ~%spellname%~) THEN BEGIN
                 OUTER_SPRINT ~outname~ $overwrite_list(EVALUATE_BUFFER ~%spellname%~)
                 OUTER_SPRINT $spell_map(EVALUATE_BUFFER ~%spellname%~) ~%outname%~
                 ACTION_IF FILE_EXISTS_IN_GAME ~%outname%.spl~ THEN BEGIN
                    COPY_EXISTING ~%outname%.spl~ ~override~
                        READ_BYTE 0x27 ~sec_type~
                    BUT_ONLY
                 END ELSE BEGIN
                     OUTER_SET ~sec_type~=0
                 END
                 ACTION_IF !~sec_type~=0 THEN BEGIN
                   OUTER_SET ~sec_type_iterate~=0
                   COPY ~iwd_in_bg2/workspace/%spellname%.spl~ ~override/%outname%.spl~
                       READ_BYTE 0x27 ~old_sec_type~
                       PATCH_IF ~old_sec_type~=0 OR ~old_sec_type~=~sec_type~ THEN BEGIN
                          WRITE_BYTE 0x27 ~sec_type~
                       END ELSE BEGIN
                          SET ~sec_type_iterate~=1
                       END
                   ACTION_IF ~sec_type_iterate~=1 THEN BEGIN
   //                   LAUNCH_ACTION_MACRO ~iterate_sectype~
                   END
                 END ELSE BEGIN
                    COPY ~iwd_in_bg2/workspace/%spellname%.spl~ ~override/%outname%.spl~
                 END
                 PRINT ~Overwriting BG2 spell %outname% with IWD spell %spellname%~
         END ELSE BEGIN 
                  COPY_EXISTING ~iwd_in_bg2/workspace/%spellname%.spl~ ~iwd_in_bg2/workspace~
                           // do a bit of sec-type listing
                    READ_BYTE 0x27 ~sec_type~
                    READ_STRREF 0x8 ~name~
                  BUT_ONLY
                  APPEND_OUTER ~iwd_in_bg2/lib/sectypelist.tpa~ ~%spellname% %sec_type% %name%~



                  // main bit

                 OUTER_INNER_PATCH ~00000000~ BEGIN
                        WRITE_ASCIIE 0x0 ~%spellname%~
                        READ_ASCII 0x0 ~type~ (4)
                        READ_ASCII 0x4 ~spellcode~ (3)
                        READ_ASCII 0x5 ~shortcode~ (2)
                        READ_ASCII 0x4 ~spelllevel~ (1)
                 END
                 OUTER_SET ~typenum~=0
                 ACTION_IF ~%type%~ STRING_EQUAL_CASE ~SPPR~ THEN BEGIN
                      OUTER_SET ~typenum~=1
                 END ELSE BEGIN
                      ACTION_IF ~%type%~ STRING_EQUAL_CASE ~SPWI~ THEN BEGIN
                                OUTER_SET ~typenum~=2
                      END ELSE BEGIN
                               ACTION_IF ~%type%~ STRING_EQUAL_CASE ~SPIN~ THEN BEGIN
                                         OUTER_SET ~typenum~=3
                                         ACTION_IF ~spelllevel~=9 THEN BEGIN
                                            OUTER_SET ~spelllevel~=4 // squeeze in the effects
                                         END
                               END
                      END
                 END
                 ACTION_IF ~typenum~>0 THEN BEGIN
                 /// spells of the spwi/spin/sppr type
                       OUTER_SPRINT ~fullcode~ ~%typenum%~^~%spellcode%~
                       ACTION_IF !VARIABLE_IS_SET $IWD_ids_list(EVALUATE_BUFFER ~%fullcode%~) THEN BEGIN
                           OUTER_SPRINT ~BG2_ids_entry~ ~IWD_%spellname%~
                       END ELSE BEGIN
                           OUTER_SPRINT ~BG2_ids_entry~ $IWD_ids_list(EVALUATE_BUFFER ~%fullcode%~)
                       END
                       PRINT ~Attempting to add %spellname%~
                       ACTION_IF ~shortcode~ <50 OR ~%type%~ STRING_EQUAL_CASE ~SPIN~ BEGIN
                           ADD_SPELL ~IWD_in_BG2/workspace/%spellname%.spl~ ~typenum~ ~spelllevel~ ~%BG2_ids_entry%~
                           OUTER_SPRINT ~temp~ ~%~^~%BG2_ids_entry%~^~%~
<<<<<<<< spl_inc_trick
>>>>>>>>
                           COPY spl_inc_trick ~iwd_in_bg2/workspace/spl_inc_trick~
                           APPEND_OUTER ~iwd_in_bg2/workspace/spl_inc_trick~ ~OUTER_SPRINT "output" "%temp%"~
                           REINCLUDE ~iwd_in_bg2/workspace/spl_inc_trick~
                           OUTER_INNER_PATCH ~%output%~ BEGIN
                              READ_ASCII 0x1 ~code~ (3)
                              READ_BYTE 0x0 ~type~
                           END
                           ACTION_IF ~typenum~=1 THEN BEGIN OUTER_SPRINT ~newname~ ~SPPR~^~%code%~ END
                           ACTION_IF ~typenum~=2 THEN BEGIN OUTER_SPRINT ~newname~ ~SPWI~^~%code%~ END
                           ACTION_IF ~typenum~=3 THEN BEGIN OUTER_SPRINT ~newname~ ~SPIN~^~%code%~ END
                           OUTER_SPRINT $spell_map(EVALUATE_BUFFER ~%spellname%~) ~%newname%~
                           PRINT ~IWD spell %spellname% (%BG2_ids_entry%) added to game as %newname%~
                       END ELSE BEGIN
                           COPY ~IWD_in_BG2/workspace/%spellname%.spl~ ~override~
                           APPEND ~spell.ids~ ~%fullcode% %BG2_ids_entry%~
                           OUTER_SPRINT $spell_map(EVALUATE_BUFFER ~%spellname%~) ~%spellname%~
                       END


                 END ELSE BEGIN
                 /// spells not of the spwi/spin/sppr type
                     OUTER_SPRINT $spell_map(EVALUATE_BUFFER ~%spellname%~) ~%spellname%~
                       ACTION_IF FILE_EXISTS_IN_GAME ~%spellname%.spl~ THEN BEGIN
                           COPY ~IWD_in_BG2/workspace/%spellname%.spl~ ~override~
                           PRINT ~IWD spell %spellname% copied directly, OVERWRITING its BG2 namesake~
                           APPEND_OUTER ~iwd_in_bg2/lib/fx.tpa~ ~%spellname% warning: OVERWRITES BG2 file of the same name~
                       END ELSE BEGIN
                           COPY ~IWD_in_BG2/workspace/%spellname%.spl~ ~override~
                           PRINT ~IWD spell %spellname% copied directly, no BG2 namesake~
                       END
                 END
          END
    END
END


/// move over the items

ACTION_BASH_FOR ~iwd_in_bg2/workspace~ ~.*\.ITM~ BEGIN
   ACTION_IF FILE_EXISTS_IN_GAME ~%BASH_FOR_RES%.itm~ THEN BEGIN
      APPEND_OUTER ~iwd_in_bg2/lib/item_overwrite.2da~ ~BG2 item %BASH_FOR_RES% overwritten by IWD item of the same name~
   END
   COPY ~iwd_in_bg2/workspace/%BASH_FOR_RES%.itm~ ~override~
END





/// now make various spell maps to handle name changes

/// first list some resources which exist really but aren't picked up for various reasons


ACTION_FOR_EACH ~spell~ IN ~SPPR205D~ ~#CHANTG~ ~#CHANTB~ ~#PRAYERG~ ~#PRAYERB~ ~#RECITEG~ ~#RECITEB~ ~#FLMSTRK~ ~GHOUL1~ ~GASP~ BEGIN
   OUTER_INNER_PATCH ~~ BEGIN 
         TO_LOWER ~spell~
   END
   OUTER_SPRINT $spell_map(~%spell%~) ~%spell%~
END

/// then list the substitutions of removed spells

// shout --> vitriolic sphere
OUTER_SPRINT ~temp~ $spell_map(~spwi424~)
OUTER_SPRINT $spell_map(~spwi423~) ~%temp%~

// force missiles --> burning blood
OUTER_SPRINT ~temp~ $spell_map(~spwi417~)
OUTER_SPRINT $spell_map(~spwi422~) ~%temp%~

// seven eyes --> spell turning
OUTER_SPRINT $spell_map(~spwi710~) ~spwi701~

// soul eater --> death spell
OUTER_SPRINT $spell_map(~spwi619~) ~spwi605~

// smashing wave --> thorn spray
OUTER_SPRINT ~temp~ $spell_map(~sppr422~)
OUTER_SPRINT $spell_map(~sppr421~) ~%temp%~

// spiritual wrath --> bolt of glory
OUTER_SPRINT $spell_map(~sppr612~) ~sppr612~


ACTION_FOR_EACH ~spell~ IN ~TALONGF~ ~HOLDFAST~ ~HOLDFST~ BEGIN
   OUTER_INNER_PATCH ~~ BEGIN
         TO_LOWER ~spell~
   END
   OUTER_SPRINT $spell_map(~%spell%~) ~#ENTANG~
END

// convert cre files

ACTION_BASH_FOR ~iwd_in_bg2/cre~ ~.*\.cre~ BEGIN
   COPY_EXISTING ~%BASH_FOR_RES%.cre~ ~override~
           READ_LONG 0x2b0 ~spell_mem_off~
           READ_LONG 0x2b4 ~spell_mem_num~
           READ_LONG 0x2a0 ~spell_known_off~
           READ_LONG 0x2a4 ~spell_known_num~
           FOR (i=0;i<~spell_known_num~;i=i+1) BEGIN
              READ_ASCII ~spell_known_off~ + 0xc*i ~spellname~
              TO_LOWER ~spellname~
              PATCH_IF VARIABLE_IS_SET $spell_map(EVALUATE_BUFFER ~%spellname%~) BEGIN
                 SPRINT ~temp~ $spell_map(EVALUATE_BUFFER ~%spellname%~)
                 WRITE_ASCIIE ~spell_known_off~ + 0xc*i ~%temp%~
              END
           END
           FOR (i=0;i<~spell_mem_num~;i=i+1) BEGIN
              READ_ASCII ~spell_mem_off~ + 0xc*i ~spellname~
              TO_LOWER ~spellname~
              PATCH_IF VARIABLE_IS_SET $spell_map(EVALUATE_BUFFER ~%spellname%~) BEGIN
                 SPRINT ~temp~ $spell_map(EVALUATE_BUFFER ~%spellname%~)
                 WRITE_ASCIIE ~spell_mem_off~ + 0xc*i ~%temp%~
              END
           END
   BUT_ONLY
END


// convert temple spells

COPY ~iwd_in_bg2/rules/speldesc.2da~ ~override~
    COUNT_2DA_ROWS 2 ~rowcount~
    FOR (i=1;i<~rowcount~;i=i+1) BEGIN
       READ_2DA_ENTRY i 0 2 ~spellname~
       PATCH_IF VARIABLE_IS_SET $spell_map(EVALUATE_BUFFER ~%spellname%~) BEGIN
             SPRINT ~temp~ $spell_map(EVALUATE_BUFFER ~%spellname%~)
             SET_2DA_ENTRY i 0 2 ~%temp%~
       END
       READ_2DA_ENTRY i 1 2 ~spelldesc~
       SET ~spelldesc~=~spelldesc~+~iwd_offset~
       SET_2DA_ENTRY i 1 2 ~spelldesc~
    END

ACTION_BASH_FOR ~iwd_in_bg2/sto~ ~.*\.sto~ BEGIN
   COPY_EXISTING ~%BASH_FOR_RES%.sto~ ~override~
        READ_LONG 0x70 ~cure_off~
        READ_LONG 0x74 ~cure_num~
        FOR (i=0;i<~cure_num~;i=i+1) BEGIN
           READ_ASCII 0xc*~i~+~cure_off~ ~spellname~
           TO_LOWER ~spellname~
           PATCH_IF VARIABLE_IS_SET $spell_map(EVALUATE_BUFFER ~%spellname%~) BEGIN
             SPRINT ~temp~ $spell_map(EVALUATE_BUFFER ~%spellname%~)
             WRITE_ASCIIE 0xc*~i~+~cure_off~ ~%temp%~
           END
        END
   BUT_ONLY
END

// read in a list of spells to ignore

COPY - ~iwd_in_bg2/lib/ignore_missing_spell.2da~ ~iwd_in_bg2/lib~
   READ_2DA_ENTRIES_NOW ~ignore_spell_list~ 1
   FOR (i=0;i<~%ignore_spell_list%~;i=i+1) BEGIN
      READ_2DA_ENTRY_FORMER ~ignore_spell_list~ ~i~ 0 ~temp~
      TO_LOWER ~temp~
      SPRINT $ignore_this_spell_missing(~%temp%~) ""
   END

COPY_EXISTING ~iwd_in_bg2\lib\eff_resource_list.list~ ~iwd_in_bg2\lib~
        READ_2DA_ENTRIES_NOW ~pro_eff~ 2
        FOR (i=0;i<~%pro_eff%~;i=i+1) BEGIN
           READ_2DA_ENTRY_FORMER ~pro_eff~ ~i~ 0 ~this_eff~
           READ_2DA_ENTRY_FORMER ~pro_eff~ ~i~ 1 ~protect_spell~
           TO_LOWER ~protect_spell~
           PATCH_IF VARIABLE_IS_SET $spell_map(EVALUATE_BUFFER ~%protect_spell%~) THEN BEGIN
           PATCH_IF !$spell_map(EVALUATE_BUFFER ~%protect_spell%~) STRING_EQUAL_CASE ~%protect_spell%~ THEN BEGIN
                     SPRINT ~new_protect_spell~ $spell_map(EVALUATE_BUFFER ~%protect_spell%~)
                     INNER_ACTION BEGIN
                                  ACTION_IF !FILE_EXISTS_IN_GAME ~%this_eff%.eff~ THEN BEGIN
                                     PRINT ~%this_eff%.eff doesn't exist~
                                  END ELSE BEGIN
                                    COPY_EXISTING ~%this_eff%.eff~ ~override~
                                       REPLACE_TEXTUALLY CASE_INSENSITIVE ~%protect_spell%~ ~%new_protect_spell%~ (8)
                                    BUT_ONLY
                                  END
                     END
           END
           END ELSE BEGIN
              PATCH_IF !VARIABLE_IS_SET $ignore_this_spell_missing(EVALUATE_BUFFER ~%protect_spell%~) BEGIN
               INNER_ACTION BEGIN
               APPEND_OUTER ~IWD_in_BG2/lib/fx.tpa~ ~Effect file %this_eff% grants protection from UNKNOWN spell %protect_spell%~
               END
              END
           END
       END
BUT_ONLY




COPY_EXISTING ~iwd_in_bg2\lib\pro_from_spell.list~ ~iwd_in_bg2\lib~
        READ_2DA_ENTRIES_NOW ~pro_spell~ 3
        FOR (i=0;i<~%pro_spell%~;i=i+1) BEGIN
           READ_2DA_ENTRY_FORMER ~pro_spell~ ~i~ 0 ~this_spell~
           READ_2DA_ENTRY_FORMER ~pro_spell~ ~i~ 1 ~type~
           READ_2DA_ENTRY_FORMER ~pro_spell~ ~i~ 2 ~protect_spell~
           TO_LOWER ~protect_spell~
           PATCH_IF VARIABLE_IS_SET $spell_map(EVALUATE_BUFFER ~%protect_spell%~) THEN BEGIN
                    PATCH_IF !$spell_map(EVALUATE_BUFFER ~%protect_spell%~) STRING_EQUAL_CASE ~%protect_spell%~ THEN BEGIN
                         PATCH_IF ~%type%~ STRING_EQUAL_CASE ~spl~ THEN BEGIN
                              SPRINT ~new_this_spell~ $spell_map(EVALUATE_BUFFER ~%this_spell%~)
                              SPRINT ~filename~ ~%new_this_spell%.spl~
                         END ELSE BEGIN
                              SPRINT ~filename~ ~%this_spell%.itm~
                         END
                         SPRINT ~new_protect_spell~ $spell_map(EVALUATE_BUFFER ~%protect_spell%~)
                         INNER_ACTION BEGIN
                              COPY_EXISTING ~%filename%~ ~override~
                                    REPLACE_TEXTUALLY CASE_INSENSITIVE ~%protect_spell%~ ~%new_protect_spell%~ (8)
                              BUT_ONLY
                         END
                    END
             END ELSE BEGIN
              PATCH_IF !VARIABLE_IS_SET $ignore_this_spell_missing(EVALUATE_BUFFER ~%protect_spell%~) BEGIN
                INNER_ACTION BEGIN
                 APPEND_OUTER ~IWD_in_BG2/lib/fx.tpa~ ~%this_spell%.%type% grants protection from or allows use of UNKNOWN spell %protect_spell%~
                END
              END
            END
        END
BUT_ONLY

LAUNCH_ACTION_MACRO ~blade_barrier_secondary_spell~

// change Shroud of Flame sectype

OUTER_SPRINT ~outname~ $spell_map(~spwi511~)
OUTER_SET ~sec_type~=10
LAUNCH_ACTION_MACRO ~iterate_sectype~


// resurrection spells need target: dead

COPY_EXISTING
    ~sppr504.spl~ ~override~
    ~sppr712.spl~ ~override~
        WRITE_SHORT 0x7e 3

// strength vvc needs to be IWD-ified

COPY_EXISTING ~spwi214.spl~ ~override~
  REPLACE_TEXTUALLY CASE_INSENSITIVE ~icstreni~ ~strengh~ (8)

// otiluke's resilient sphere needs the IWD animation

COPY_EXISTING ~minorglb.vvc~ ~override/#otiluke.vvc~
   WRITE_BYTE 0x18 0b00000010
   WRITE_ASCII 0x8 ~orsphec.bam~
   
COPY_EXISTING ~spwi413.spl~ ~override~
   REPLACE_TEXTUALLY CASE_INSENSITIVE ~minorglb~ ~#otiluke~

COPY ~iwd_in_bg2/override/orsphec.bam~ ~iwd_in_bg2/biff/spl_anim~

// output spell_map somewhere we can get it

<<<<<<<<spell_map.txt
>>>>>>>>

COPY ~spell_map.txt~ ~iwd_in_bg2/lib~

ACTION_BASH_FOR ~iwd_in_bg2/spl~ ~.*\.spl~ BEGIN
   OUTER_SPRINT ~iwdspell~ ~%BASH_FOR_RES%~
   OUTER_INNER_PATCH ~~ BEGIN
     TO_LOWER ~iwdspell~
   END
   ACTION_IF VARIABLE_IS_SET $spell_map(EVALUATE_BUFFER ~%iwdspell%~) THEN BEGIN
      OUTER_SPRINT ~bg2spell~ $spell_map(EVALUATE_BUFFER ~%iwdspell%~)
      APPEND_OUTER ~iwd_in_bg2/lib/spell_map.txt~ ~%iwdspell% %bg2spell%~
   END
END

// biff spell-related files

MAKE_BIFF ~i#splico~ BEGIN ~iwd_in_bg2/biff/spell_icons~ ~.*\.bam~ END
MAKE_BIFF ~i#itmico~ BEGIN ~iwd_in_bg2/biff/item_icons~ ~.*\.bam~ END
MAKE_BIFF ~i#splani~ BEGIN ~iwd_in_bg2/biff/spl_anim~ ~.*\.bam~ END
MAKE_BIFF ~i#splsnd~ BEGIN ~iwd_in_bg2/biff/spl_snd~ ~.*\.wav~ END

/////////////////////////////////////////////////////////////////////////////////////////////////////

BEGIN ~sort out character state icons~ DESIGNATED 225

<<<<<<<< icon_bam_rewrite
Copy_this           To_this
32                  119     Good Luck--> Improved Mantle (for Courage)
32                  118     Good Luck--> Absolute Immunity (for Hope)
18                  98      Chant --> Blade Barrier (for Prayer)
18                  68      Chant --> Fire Shield Red (for Recitation)
18                  69      Chant --> Fire Shield Blue (for RWOTF)
37                  125     Resist Fear --> Otiluke (for Exaltation)
22                  131     Heroism --> Mental Combat (for Cat's Grace)
>>>>>>>>

COPY - ~icon_bam_rewrite~ ~icon_bam_rewrite~
  READ_2DA_ENTRIES_NOW ~icon_bam_rewrite_map~ 0
  FOR (j=1;j<~icon_bam_rewrite_map~;j=j+1) BEGIN
     READ_2DA_ENTRY_FORMER ~icon_bam_rewrite_map~ ~j~ 0 ~input~
     READ_2DA_ENTRY_FORMER ~icon_bam_rewrite_map~ ~j~ 1 ~output~
     SET $icon_bam_input_array(~%j%~)=~input~
     SET $icon_bam_output_array(~%j%~)=~output~
  END
  
OUTER_SET ~zero_state~=65

	COPY_EXISTING 
        ~states.bam~ ~override~
        ~states2.bam~ ~override~
	   /// decompress
		READ_ASCII 0x0 ~type~ (4)
		PATCH_IF ~%type%~ STRING_EQUAL_CASE ~BAMC~ THEN BEGIN
			READ_LONG 0x8 ~uncompressed_length~
			SET ~compressed_length~=~%SOURCE_SIZE%~-0xc
			DECOMPRESS_REPLACE_FILE 0xc ~%compressed_length%~ ~%uncompressed_length%~
		END

	COPY_EXISTING
        ~states.bam~ ~override~
        ~states2.bam~ ~override~
		READ_SHORT 0x8 ~framecount~
		READ_LONG 0xc ~frame_off~
		READ_LONG 0x14 ~frame_lookup_off~
		SET ~cycle_off~=~frame_off~+~framecount~*0xc
		FOR (j=1;j<~icon_bam_rewrite_map~;j=j+1) BEGIN
		   SET ~input~=$icon_bam_input_array(~%j%~)+~zero_state~
		   SET ~output~=$icon_bam_output_array(~%j%~)+~zero_state~
		   READ_SHORT ~cycle_off~+0x4*~input~+0x2 ~input_frame_lookup_num~
		   READ_SHORT ~cycle_off~+0x4*~output~+0x2 ~output_frame_lookup_num~
		   READ_SHORT ~frame_lookup_off~+~input_frame_lookup_num~*0x2 ~input_frame_num~
		   READ_SHORT ~frame_lookup_off~+~output_frame_lookup_num~*0x2 ~output_frame_num~
		   READ_SHORT ~frame_off~+0xc*~input_frame_num~ ~input_w~
		   READ_SHORT ~frame_off~+0xc*~input_frame_num~+0x2 ~input_h~
		   READ_SHORT ~frame_off~+0xc*~output_frame_num~ ~output_w~
		   READ_SHORT ~frame_off~+0xc*~output_frame_num~+0x2 ~output_h~
		   SET ~framedatasize~=~input_w~*~input_h~
		   READ_LONG ~frame_off~+0xc*~input_frame_num~+0x8 ~frame_off_in~
		   READ_LONG ~frame_off~+0xc*~output_frame_num~+0x8 ~frame_off_out~
		   READ_ASCII ~frame_off_in~ ~data~ (~framedatasize~)
		   WRITE_ASCIIE ~frame_off_out~ ~%data%~
//		   PATCH_PRINT ~%j% %input% %output% %input_frame_num% %output_frame_num% %frame_off_in% %frame_off_out% %framedatasize%~
		END


// relabelling

<<<<<<<< icon_relabel
119  14706           courage
118  14708           hope
98   1417            prayer
68   1914            recitation
69   2812            RWOTF
125  24383           Exaltation
131  19535           Cat's Grace
137  14728           Pain
>>>>>>>>


OUTER_SET ~iwd_offset~=74100


COPY - icon_relabel icon_relabel
  READ_2DA_ENTRIES_NOW ~icon_relabel_grid~ 0
  FOR (i=0;i<~icon_relabel_grid~;i=i+1) BEGIN
     READ_2DA_ENTRY_FORMER ~icon_relabel_grid~ ~i~ 0 ~number~
     READ_2DA_ENTRY_FORMER ~icon_relabel_grid~ ~i~ 1 ~string~
     SET ~string~=~string~+~iwd_offset~
     INNER_ACTION BEGIN
        COPY_EXISTING ~statdesc.2da~ ~override~
           SET_2DA_ENTRY ~number~+1 1 2 ~string~
     END
  END

/////////////////////////////////////////////////////////////////////////////////////////////////////



BEGIN ~Remove unconverted items and spells from the game~   DESIGNATED 230

// spwi710x (scroll of 7 eyes)

COPY_EXISTING ~ar9101.are~ ~override~
   REPLACE_TEXTUALLY ~spwi710x~ ~scmord~ (8)


// spwi619x (scroll of Soul Eater)
//  sppr421x (scroll of Smashing Wave)
// sppr423x (scroll of Wall of Moonlight)
//  spwi423x (scroll of Shout)
//  spwi806x (scroll of Great Shout)
// spwi422x (scroll of Mordenkainen's Force Missiles)
// sppr612x (scroll of Spiritual Wrath)
// sppr322x (scroll of Mold Touch, but doesn't seem to appear)
// BLAST (Bracers of Blasting)
// CONE.itm

// only in stores

// HELMSH (Helm of Shouting)

COPY ~iwd_in_bg2/rules/rndtres.2da~ ~iwd_in_bg2/rules~
  REPLACE_TEXTUALLY ~helmsh~ ~~

// and now remove them all from stores

ACTION_BASH_FOR ~iwd_in_bg2/sto~ ~.*\.sto~ BEGIN
   COPY_EXISTING ~%BASH_FOR_RES%.sto~ ~override~
       REMOVE_STORE_ITEM ~spwi710x~ ~spwi619x~ ~spwi421x~ ~spwi423x~ ~helmsh~ ~blast~ ~spwi806x~ ~spwi422x~ ~spwi612x~
   BUT_ONLY
END

// now get rid of the spells

// soul eater --> death spell
// seven eyes --> spell turning
// force missiles --> burning blood
// shout --> vitriolic sphere
// smashing wave --> thorn spray
// spiritual wrath --> bolt of glory
// mold touch --> Cause disease

ACTION_FOR_EACH ~script~ IN ~dulurmst~ ~ldilair~ BEGIN
   COPY ~iwd_in_bg2/baf/%script%.baf~ ~iwd_in_bg2/baf~
         REPLACE_TEXTUALLY CASE_INSENSITIVE ~SHOUT~ ~VITRIOLIC_SPHERE~
         REPLACE_TEXTUALLY CASE_INSENSITIVE ~CLERIC_WALL_OF_MOONLIGHT~ ~WIZARD_VITRIOLIC_SPHERE~ // this corrects for a bug in IWD's SPELL.ids file
END

ACTION_FOR_EACH ~script~ IN ~duadran~ ~duhero8~ ~keraksha~ ~ldkramge~ ~lwkieran~ ~lwvaarg1~ ~seadran~ BEGIN
   COPY ~iwd_in_bg2/baf/%script%.baf~ ~iwd_in_bg2/baf~
         REPLACE_TEXTUALLY CASE_INSENSITIVE ~MORDENKAINENS_FORCE_MISSILES~ ~BELTYNS_BURNING_BLOOD~
END

ACTION_FOR_EACH ~script~ IN  ~ldkramge~ ~lwkieran~  ~seadran~ BEGIN
   COPY ~iwd_in_bg2/baf/%script%.baf~ ~iwd_in_bg2/baf~
         REPLACE_TEXTUALLY CASE_INSENSITIVE ~SEVEN_EYES~ ~SPELL_TURNING~
END

ACTION_FOR_EACH ~script~ IN  ~ldkramge~ ~gnt2619~ BEGIN
   COPY ~iwd_in_bg2/baf/%script%.baf~ ~iwd_in_bg2/baf~
         REPLACE_TEXTUALLY CASE_INSENSITIVE ~SOUL_EATER~ ~DEATH_SPELL~
END

ACTION_FOR_EACH ~script~ IN  ~ducriek~ ~secrie2~ BEGIN
   COPY ~iwd_in_bg2/baf/%script%.baf~ ~iwd_in_bg2/baf~
         REPLACE_TEXTUALLY CASE_INSENSITIVE ~SMASHING_WAVE~ ~THORN_SPRAY~
END

ACTION_FOR_EACH ~script~ IN  ~bcjorn~ ~iljorn~ ~lwhjolo~ BEGIN
   COPY ~iwd_in_bg2/baf/%script%.baf~ ~iwd_in_bg2/baf~
         REPLACE_TEXTUALLY CASE_INSENSITIVE ~SPIRITUAL_WRATH~ ~BOLT_OF_GLORY~
END


COPY ~iwd_in_bg2/baf/duhero5.baf~ ~iwd_in_bg2/baf~
   REPLACE_TEXTUALLY CASE_INSENSITIVE ~MOLD_TOUCH~ ~CAUSE_DISEASE~




/////////////////////////////////////////////////////////////////////////////////////////////////////

BEGIN ~Do ad hoc fixes to imperfectly converted items~    DESIGNATED 240 DEPRECATED ~No such items any more~

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///     CHARACTERS
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////


BEGIN ~Characters~       DESIGNATED 250


// set IWD experience levels and caps
// clone monks from clerics, and sorcerors from mages


COPY ~iwd_in_bg2/rules/xpcap.2da~ ~override~
    READ_2DA_ENTRIES_NOW ~xpcap_data~ 2
    FOR (i=1;i<~xpcap_data~;i=i+1) BEGIN
       READ_2DA_ENTRY_FORMER ~xpcap_data~ i 0 ~name~
       PATCH_IF ~%name%~ STRING_EQUAL_CASE ~CLERIC~ BEGIN
          READ_2DA_ENTRY_FORMER ~xpcap_data~ i 1 ~cap~
          SPRINT ~monk_add~ ~MONK %cap%~
       END
       PATCH_IF ~%name%~ STRING_EQUAL_CASE ~MAGE~ BEGIN
          READ_2DA_ENTRY_FORMER ~xpcap_data~ i 1 ~cap~
          SPRINT ~sorceror_add~ ~SORCERER %cap%~
       END
    END
APPEND_OUTER ~override/xpcap.2da~ ~%monk_add%~
APPEND_OUTER ~override/xpcap.2da~ ~%sorceror_add%~


COPY ~iwd_in_bg2/rules/xplevel.2da~ ~override~
    COUNT_2DA_COLS ~colcount~
    READ_2DA_ENTRIES_NOW ~xplevel_data~ ~colcount~
    FOR (i=0;i<~xplevel_data~;i=i+1) BEGIN
       READ_2DA_ENTRY_FORMER ~xplevel_data~ i 0 ~name~
       PATCH_IF ~%name%~ STRING_EQUAL_CASE ~CLERIC~ BEGIN
          SPRINT ~monk_add~ ~MONK~
          FOR (j=1;j<~colcount~;j=j+1) BEGIN
             READ_2DA_ENTRY_FORMER ~xplevel_data~ i j ~data~
             SPRINT ~monk_add~ ~%monk_add%~^~  ~^~%data%~
          END
       END
       PATCH_IF ~%name%~ STRING_EQUAL_CASE ~MAGE~ BEGIN
          SPRINT ~sorceror_add~ ~SORCERER~
          FOR (j=1;j<~colcount~;j=j+1) BEGIN
             READ_2DA_ENTRY_FORMER ~xplevel_data~ i j ~data~
             SPRINT ~sorceror_add~ ~%sorceror_add%~^~  ~^~%data%~
          END
       END
    END
APPEND_OUTER ~override/xplevel.2da~ ~%monk_add%~
APPEND_OUTER ~override/xplevel.2da~ ~%sorceror_add%~


// wipe Bhaalspawn powers

<<<<<<<< abstart.2da
2DA V1.0

SPIN103

        1       2       3       4       5       6

>>>>>>>>

COPY abstart.2da ~override~
// make a string of blanks

OUTER_SPRINT ~twentynine_stars~ ~~
OUTER_FOR (i=0;i<29;i=i+1) BEGIN
   OUTER_SPRINT ~twentynine_stars~ ~%twentynine_stars%~^~****    ~
END

OUTER_SPRINT ~thirtyseven_stars~ ~~
OUTER_FOR (i=0;i<37;i=i+1) BEGIN
   OUTER_SPRINT ~thirtyseven_stars~ ~%thirtyseven_stars%~^~****    ~
END

OUTER_SPRINT ~thirtynine_stars~ ~~
OUTER_FOR (i=0;i<39;i=i+1) BEGIN
   OUTER_SPRINT ~thirtynine_stars~ ~%thirtynine_stars%~^~****    ~
END

////////////////////////////////////////////////
// Fighters: no change necessary
////////////////////////////////////////////////

////////////////////////////////////////////////
// Paladins
////////////////////////////////////////////////

/// copy over their new spell list

COPY ~iwd_in_bg2/rules/mxsplpal.2da~ ~override~

OUTER_FOR (i=31;i<41;i=i+1) BEGIN
   APPEND ~mxsplpal.2da~ ~%i% 5 5 5 5 3 1~
END

/// one-off spell giving immunity to disease

COPY ~iwd_in_bg2/files/#paldise.spl~ ~override~
     READ_LONG 0xfe ~string~
     SET ~string~=~string~+~iwd_offset~
     WRITE_LONG 0xfe ~string~
     READ_LONG 0x12e ~string~
     SET ~string~=~string~+~iwd_offset~
     WRITE_LONG 0x12e ~string~

/// one-off spell giving immunity to fear

COPY ~iwd_in_bg2/files/#palfear.spl~ ~override~
     READ_LONG 0x15e ~string~
     SET ~string~=~string~+~iwd_offset~
     WRITE_LONG 0x15e ~string~
     READ_LONG 0x18e ~string~
     SET ~string~=~string~+~iwd_offset~
     WRITE_LONG 0x18e ~string~


// locate Smite Evil

OUTER_SET ~smite_string~=26267+~iwd_offset~
COPY_EXISTING_REGEXP GLOB ~spin1.*\.spl~ ~override~
   READ_LONG 0x8 ~name~
   PATCH_IF ~name~=~smite_string~ BEGIN
      SPRINT ~smite~ ~%SOURCE_RES%~
   END
BUT_ONLY

// locate Cure Disease

OUTER_SET ~disease_string~=~6312~+~iwd_offset~
OUTER_SET ~disease_string2~=~18614~+~iwd_offset~
COPY_EXISTING_REGEXP GLOB ~spin1.*\.spl~ ~override~
   READ_LONG 0x8 ~name~
   PATCH_IF ~name~=~disease_string~ OR ~name~=~disease_string2~ BEGIN
      SPRINT ~disease~ ~%SOURCE_RES%~
   END
BUT_ONLY

// smite evil and cure disease need to be L1

COPY_EXISTING 
   ~%disease%.spl~ ~override~
   ~%smite%.spl~ ~override~
     WRITE_LONG 0x34 1

// upgrade ability files


APPEND ~clabpa01.2da~ ~ABILITY7   AP_#PALDISE   ****   AP_#PALFEAR %thirtyseven_stars%~
APPEND ~clabpa01.2da~ ~ABILITY8   GA_%smite% %thirtynine_stars%~
APPEND ~clabpa01.2da~ ~ABILITY9   GA_%disease% %thirtynine_stars%~
APPEND ~clabpa02.2da~ ~ABILITY9   AP_#PALDISE   ****   AP_#PALFEAR %thirtyseven_stars%~
APPEND ~clabpa02.2da~ ~ABILITYA   GA_%smite% %thirtynine_stars%~
APPEND ~clabpa02.2da~ ~ABILITYB   GA_%disease% %thirtynine_stars%~
APPEND ~clabpa03.2da~ ~ABILITYB   AP_#PALDISE   ****   AP_#PALFEAR %thirtyseven_stars%~
APPEND ~clabpa03.2da~ ~ABILITYC   GA_%smite% %thirtynine_stars%~
APPEND ~clabpa03.2da~ ~ABILITYD   GA_%disease% %thirtynine_stars%~
APPEND ~clabpa04.2da~ ~ABILITY8   AP_#PALDISE   ****   AP_#PALFEAR %thirtyseven_stars%~
APPEND ~clabpa04.2da~ ~ABILITY9   GA_%smite% %thirtynine_stars%~
APPEND ~clabpa04.2da~ ~ABILITYA   GA_%disease% %thirtynine_stars%~

////////////////////////////////////////////////
// Rangers
////////////////////////////////////////////////

/// copy over their new spell list

COPY ~iwd_in_bg2/rules/mxsplran.2da~ ~override~

OUTER_FOR (i=31;i<41;i=i+1) BEGIN
   APPEND ~mxsplran.2da~ ~%i% 5 5 5 5 3 1~
END

//// one-off spell granting extra hit points (we'll just do a flat 6 hp)

COPY ~iwd_in_bg2/files/#ranghps.spl~ ~override~

// upgrade ability files

APPEND ~clabrn01.2da~ ~ABILITY7 GA_SPCL922 %thirtynine_stars%~
APPEND ~clabrn01.2da~ ~ABILITY8 AP_#RANGHPS %thirtynine_stars%~
APPEND ~clabrn02.2da~ ~ABILITY7 GA_SPCL922 %thirtynine_stars%~
APPEND ~clabrn02.2da~ ~ABILITY8 AP_#RANGHPS %thirtynine_stars%~
APPEND ~clabrn03.2da~ ~ABILITY7 GA_SPCL922 %thirtynine_stars%~
APPEND ~clabrn03.2da~ ~ABILITY8 AP_#RANGHPS %thirtynine_stars%~
APPEND ~clabrn04.2da~ ~ABILITY7 GA_SPCL922 %thirtynine_stars%~
APPEND ~clabrn04.2da~ ~ABILITY8 AP_#RANGHPS %thirtynine_stars%~

// HATERACE.ids

COPY ~iwd_in_bg2/files/haterace.2da~ ~override~
     COUNT_2DA_ROWS 4 ~rowcount~
     FOR (i=0;i<~rowcount~;i=i+1) BEGIN
          READ_2DA_ENTRY i 1 4 ~string~
          SET ~string~=~string~+~iwd_offset~
          SET_2DA_ENTRY i 1 4 ~string~
          READ_2DA_ENTRY i 3 4 ~string~
          SET ~string~=~string~+~iwd_offset~
          SET_2DA_ENTRY i 3 4 ~string~
END


////////////////////////////////////////////////
// Wizards
////////////////////////////////////////////////

// copy over their new spell list

COPY ~iwd_in_bg2/rules/mxsplwiz.2da~ ~override~

OUTER_FOR (i=31;i<41;i=i+1) BEGIN
   APPEND ~mxsplwiz.2da~ ~%i% 7 7 7 7 7 7 7 6 6~
END

////////////////////////////////////////////////
// Sorcerors
////////////////////////////////////////////////

// no actual change needed

////////////////////////////////////////////////
// Thieves
////////////////////////////////////////////////

// We can't do evasion or sneak attack, so - alas - no change needed

////////////////////////////////////////////////
// Bards
////////////////////////////////////////////////

// copy over their new spell list

COPY ~iwd_in_bg2/rules/mxsplbrd.2da~ ~override~

OUTER_FOR (i=31;i<41;i=i+1) BEGIN
   APPEND ~mxsplbrd.2da~ ~%i% 6 6 6 6 5 5 5 1~
END

// new bard songs

DEFINE_ACTION_MACRO ~find_bard_song~ BEGIN
 OUTER_SET ~song_string~=~base_string~+~iwd_offset~
 COPY_EXISTING_REGEXP GLOB ~spin1.*\.spl~ ~override~
   READ_LONG 0x8 ~name~
   PATCH_IF ~name~=~song_string~ BEGIN
      SPRINT ~song~ ~%SOURCE_RES%~
      READ_ASCII 0x3a ~icon~
   END
 BUT_ONLY
END



// the ballad of three heroes

OUTER_SET ~base_string~=26268
LAUNCH_ACTION_MACRO ~find_bard_song~

// base spell - start with the ballad of three heroes

COPY_EXISTING ~spcl920.spl~ ~override/#bard-1.spl~
   REPLACE_TEXTUALLY CASE_INSENSITIVE ~spcl920a~ ~%song%~ (8)

COPY ~iwd_in_bg2/files/#bard0.spl~ ~override/#bard1.spl~
    REPLACE_TEXTUALLY CASE_INSENSITIVE ~the_song~ ~%song%~ (8)
    REPLACE_TEXTUALLY CASE_INSENSITIVE ~this_spl~ ~%DEST_RES%~ (8)
    REPLACE_TEXTUALLY CASE_INSENSITIVE ~the_icon~ ~%icon%~ (8)
    WRITE_LONG 0x8 ~iwd_offset~+~base_string~

// curran strongheart

OUTER_SET ~base_string~=26266
LAUNCH_ACTION_MACRO ~find_bard_song~

COPY ~iwd_in_bg2/files/#bard0.spl~ ~override/#bard2.spl~
    REPLACE_TEXTUALLY CASE_INSENSITIVE ~the_song~ ~%song%~ (8)
    REPLACE_TEXTUALLY CASE_INSENSITIVE ~this_spl~ ~%DEST_RES%~ (8)
    REPLACE_TEXTUALLY CASE_INSENSITIVE ~the_icon~ ~%icon%~ (8)
    WRITE_ASCIIE 0x76 ~%icon%~ #8
    WRITE_LONG 0x8 ~iwd_offset~+~base_string~

// tymora's melody

OUTER_SET ~base_string~=26265
LAUNCH_ACTION_MACRO ~find_bard_song~

COPY ~iwd_in_bg2/files/#bard0.spl~ ~override/#bard3.spl~
    REPLACE_TEXTUALLY CASE_INSENSITIVE ~the_song~ ~%song%~ (8)
    REPLACE_TEXTUALLY CASE_INSENSITIVE ~this_spl~ ~%DEST_RES%~ (8)
    REPLACE_TEXTUALLY CASE_INSENSITIVE ~the_icon~ ~%icon%~ (8)
    WRITE_ASCIIE 0x76 ~%icon%~ #8
    WRITE_LONG 0x8 ~iwd_offset~+~base_string~

// song of Kaudies

OUTER_SET ~base_string~=26264
LAUNCH_ACTION_MACRO ~find_bard_song~

COPY ~iwd_in_bg2/files/#bard0.spl~ ~override/#bard4.spl~
    REPLACE_TEXTUALLY CASE_INSENSITIVE ~the_song~ ~%song%~ (8)
    REPLACE_TEXTUALLY CASE_INSENSITIVE ~this_spl~ ~%DEST_RES%~ (8)
    REPLACE_TEXTUALLY CASE_INSENSITIVE ~the_icon~ ~%icon%~ (8)
    WRITE_ASCIIE 0x76 ~%icon%~ #8
    WRITE_LONG 0x8 ~iwd_offset~+~base_string~

// Siren's yearning

OUTER_SET ~base_string~=26263
LAUNCH_ACTION_MACRO ~find_bard_song~

COPY ~iwd_in_bg2/files/#bard0.spl~ ~override/#bard5.spl~
    REPLACE_TEXTUALLY CASE_INSENSITIVE ~the_song~ ~%song%~ (8)
    REPLACE_TEXTUALLY CASE_INSENSITIVE ~this_spl~ ~%DEST_RES%~ (8)
    REPLACE_TEXTUALLY CASE_INSENSITIVE ~the_icon~ ~%icon%~ (8)
    WRITE_ASCIIE 0x76 ~%icon%~ #8
    WRITE_LONG 0x8 ~iwd_offset~+~base_string~

// War Chant of Sith

OUTER_SET ~base_string~=26262
LAUNCH_ACTION_MACRO ~find_bard_song~

COPY ~iwd_in_bg2/files/#bard0.spl~ ~override/#bard6.spl~
    REPLACE_TEXTUALLY CASE_INSENSITIVE ~the_song~ ~%song%~ (8)
    REPLACE_TEXTUALLY CASE_INSENSITIVE ~this_spl~ ~%DEST_RES%~ (8)
    REPLACE_TEXTUALLY CASE_INSENSITIVE ~the_icon~ ~%icon%~ (8)
    WRITE_ASCIIE 0x76 ~%icon%~ #8
    WRITE_LONG 0x8 ~iwd_offset~+~base_string~


APPEND ~clabba01.2da~ ~ABILITY7   AP_#BARD-1 **** GA_#BARD1 %thirtyseven_stars%~
APPEND ~clabba01.2da~ ~ABILITY8   **** **** GA_#BARD2 **** GA_#BARD3 **** GA_#BARD4 **** GA_#BARD5 **** GA_#BARD6 %twentynine_stars%~

////////////////////////////////////////////////
// Clerics
////////////////////////////////////////////////

//copy over the spell table

COPY ~iwd_in_bg2/rules/mxsplprs.2da~ ~override~

OUTER_FOR (i=31;i<41;i=i+1) BEGIN
   APPEND ~mxsplprs.2da~ ~%i% 9   9   9   9   9   9   8~
END

////////////////////////////////////////////////
// Druids
////////////////////////////////////////////////

//IWD druids use the priest table

COPY_EXISTING ~mxsplprs.2da~ ~override/mxspldru.2da~

// druids should get HLAs later (giving them at 3M XP)

COPY_EXISTING ~lunumab.2da~ ~override~
      SET_2DA_ENTRY 6 1 5 21



// copy over Timeless Body - though atm it's not clear whether this actually works, so we're not installing it

COPY ~iwd_in_bg2/files/#timeles.spl~ ~override~

// find the shapeshift spells

DEFINE_ACTION_MACRO ~find_shapeshift~ BEGIN
 OUTER_SET ~shift_string~=~base_string~+~iwd_offset~
 COPY_EXISTING_REGEXP GLOB ~spin1.*\.spl~ ~override~
   READ_LONG 0x8 ~name~
   PATCH_IF ~name~=~shift_string~ BEGIN
      SPRINT ~file~ ~%SOURCE_RES%~
   END
 BUT_ONLY
END

// for some reason the shapeshifts need to be L1 to work

OUTER_SET ~base_string~=19793 // winter wolf
LAUNCH_ACTION_MACRO ~find_shapeshift~
OUTER_SPRINT ~druid_winterwolf~ ~%file%~
COPY_EXISTING ~%file%.spl~ ~override~
   WRITE_LONG 0x34 1

OUTER_SET ~base_string~=19792 // boring beetle
LAUNCH_ACTION_MACRO ~find_shapeshift~
OUTER_SPRINT ~druid_beetle~ ~%file%~
COPY_EXISTING ~%file%.spl~ ~override~
   WRITE_LONG 0x34 1

OUTER_SET ~base_string~=19794 // polar bear
LAUNCH_ACTION_MACRO ~find_shapeshift~
OUTER_SPRINT ~druid_bear~ ~%file%~
COPY_EXISTING ~%file%.spl~ ~override~
   WRITE_LONG 0x34 1

OUTER_SET ~base_string~=25824 // fire elem
LAUNCH_ACTION_MACRO ~find_shapeshift~
OUTER_SPRINT ~druid_fire~ ~%file%~
COPY_EXISTING ~%file%.spl~ ~override~
   WRITE_LONG 0x34 1

OUTER_SET ~base_string~=25823 // earth elem
LAUNCH_ACTION_MACRO ~find_shapeshift~
OUTER_SPRINT ~druid_earth~ ~%file%~
COPY_EXISTING ~%file%.spl~ ~override~
   WRITE_LONG 0x34 1

OUTER_SET ~base_string~=25822 // water elem
LAUNCH_ACTION_MACRO ~find_shapeshift~
OUTER_SPRINT ~druid_water~ ~%file%~
COPY_EXISTING ~%file%.spl~ ~override~
   WRITE_LONG 0x34 1

OUTER_SET ~base_string~=11826 // natural form
LAUNCH_ACTION_MACRO ~find_shapeshift~
OUTER_SPRINT ~druid_natural~ ~%file%~
COPY_EXISTING ~%file%.spl~ ~override~
   WRITE_LONG 0x34 1


COPY_EXISTING ~clabdr01.2da~ ~override~
      SET_2DA_ENTRY 1 5 10 ~GA_%druid_winterwolf%~
      SET_2DA_ENTRY 1 7 10 ~GA_%druid_beetle%~
      SET_2DA_ENTRY 1 9 10 ~GA_%druid_bear%~
      SET_2DA_ENTRY 1 11 10 ~GA_%druid_fire%~
      SET_2DA_ENTRY 1 13 10 ~GA_%druid_earth%~
      SET_2DA_ENTRY 1 15 10 ~GA_%druid_water%~
      SET_2DA_ENTRY 2 9 10 ~AP_clab924~
      SET_2DA_ENTRY 2 7 10 ~****~
      SET_2DA_ENTRY 3 7 10 ~****~

COPY_EXISTING ~clabdr02.2da~ ~override~
      SET_2DA_ENTRY 1 9 10 ~AP_clab924~

COPY_EXISTING ~clabdr03.2da~ ~override~
      SET_2DA_ENTRY 2 9 10 ~AP_clab924~

COPY_EXISTING ~clabdr04.2da~ ~override~
      SET_2DA_ENTRY 2 5 10 ~GA_%druid_winterwolf%~
      SET_2DA_ENTRY 2 7 10 ~GA_%druid_beetle%~
      SET_2DA_ENTRY 2 9 10 ~GA_%druid_bear%~
      SET_2DA_ENTRY 2 11 10 ~GA_%druid_fire%~
      SET_2DA_ENTRY 2 13 10 ~GA_%druid_earth%~
      SET_2DA_ENTRY 2 15 10 ~GA_%druid_water%~
      SET_2DA_ENTRY 3 9 10 ~AP_clab924~
      SET_2DA_ENTRY 1 7 10 ~****~
      SET_2DA_ENTRY 3 7 10 ~****~


//    Avenger extra spells need to be IWD-ified

COPY_EXISTING
     ~spwi118.spl~ ~override/spdr101.spl~
     ~spwi215.spl~ ~override/spdr201.spl~
     ~spwi308.spl~ ~override/spdr301.spl~
     ~spwi405.spl~ ~override/spdr401.spl~
     ~spwi508.spl~ ~override/spdr501.spl~
     ~spwi615.spl~ ~override/spdr601.spl~
        WRITE_SHORT 0x1c 2
        WRITE_SHORT 0x1e 0



BEGIN ~Item usability for classes and kits~ DESIGNATED 260

ACTION_BASH_FOR ~iwd_in_bg2/itm~ ~.*\.itm~ BEGIN
   ACTION_IF FILE_EXISTS_IN_GAME ~%BASH_FOR_RES%.itm~ BEGIN
      COPY_EXISTING ~%BASH_FOR_RES%.itm~ ~override~
         /// is it droppable? If not, we don't care
         READ_BYTE 0x18 ~droppablebyte~
         SET ~droppablebyte~=~%droppablebyte%~ BAND ~0b00000100~
         PATCH_IF ~droppablebyte~=~0b00000100~ BEGIN
                  // what kind of thing is it?
                  READ_SHORT 0x1c ~item_type~
                  READ_BYTE 0x18 ~magicbyte~
                  SET ~magicbyte~=~%magicbyte%~ BAND 0b01000000
                  PATCH_IF ~magicbyte~=0b01000000 BEGIN
                     SET ~ismagic~=1
                  END ELSE BEGIN
                     SET ~ismagic~=0
                  END
                  READ_BYTE 0x1e ~class1~
                  READ_BYTE 0x1f ~class2~
                  READ_BYTE 0x20 ~class3~
                  READ_BYTE 0x21 ~class4~
                  READ_BYTE 0x29 ~kit1~
                  READ_BYTE 0x2b ~kit2~
                  READ_BYTE 0x2d ~kit3~
                  READ_BYTE 0x2f ~kit4~
                  READ_LONG 0x8 ~name~
                  SET ~name~=~name~ - ~iwd_offset~
                  READ_ASCII 0x44 ~groundicon~
                  PATCH_IF ~item_type~=2 BEGIN  // Armor
                     // Kensai, monks, shapeshifters certainly can't use it
                     SET ~class4~=~%class4%~ BOR 0b00100000
                     SET ~kit1~=~%kit1%~ BOR 0b00010000
                     SET ~kit4~=~%kit4%~ BOR 0b00000100
                     // now, what type of armour is it?
                     PATCH_IF ~%groundicon%~ STRING_EQUAL_CASE ~#GPLAT01~ BEGIN // plate mail
                        // plate mail is unusable by Archers, Stalkers, Avengers, Barbarians
                        SET ~kit1~=~%kit1%~ BOR 0b01100000
                        SET ~kit2~=~%kit2%~ BOR 0b00000001
                        SET ~kit3~=~%kit3%~ BOR 0b10000000
                     END ELSE
                     PATCH_IF ~%groundicon%~ STRING_EQUAL_CASE ~#GCHAN01~ BEGIN // chain mail, splint mail
                        // chain mail is unusable by Archers, Stalkers, Avengers
                        SET ~kit1~=~%kit1%~ BOR 0b00100000
                        SET ~kit2~=~%kit2%~ BOR 0b00000001
                        SET ~kit3~=~%kit3%~ BOR 0b10000000
                     END ELSE
                     PATCH_IF ~name~=6664 BEGIN // studded leather
                        // studded leather isn't usable by Avengers
                        SET ~kit1~=~%kit1%~ BOR 0b00100000
                     END
                  END ELSE
                  PATCH_IF ~item_type~=12 BEGIN  // Shields
                  // Kensai, Monks can't use them
                     SET ~class4~=~%class4%~ BOR 0b00100000
                     SET ~kit4~=~%kit4%~ BOR 0b00000100
                  END ELSE
                  PATCH_IF (~item_type~=15 OR ~item_type~=27 OR ~item_type~=18 OR ~item_type~=24 OR ~name~=6697 OR ~name~=6724) BEGIN // missile
                  // Kensai, Cavaliers can't use them; if thieves can't use them neither can monks
                     SET ~kit4~=~%kit4%~ BOR 0b00001100
                     SET ~thiefcheck~=~%class3%~ BAND 0b01000000
                     PATCH_IF ~thiefcheck~=0b01000000 BEGIN
                         SET ~class4~=~%class4%~ BOR 0b00100000
                     END
                  END ELSE
                  PATCH_IF (~item_type~=25 OR ~item_type~=69
                       OR ~item_type~=16 OR ~item_type~=23 OR ~item_type~=57
                       OR ~item_type~=30 OR ~item_type~=21 OR ~item_type~=20
                       OR ~item_type~=17 OR ~item_type~=22 OR ~item_type~=29) BEGIN // metal weapons
                  // Beastmasters can't use them; if thieves can't use them neither can monks
                     SET ~kit2~=~%kit2%~ BOR 0b00000010
                     SET ~thiefcheck~=~%class3%~ BAND 0b01000000
                     PATCH_IF ~thiefcheck~=0b01000000 BEGIN
                         SET ~class4~=~%class4%~ BOR 0b00100000
                     END
                  END ELSE
                  PATCH_IF (~item_type~=6 OR ~item_type~=73) BEGIN // bracers/gauntlets
                     // not usable by kensai; not usable by wizard slayers if magical
                     SET ~kit4~=~%kit4%~ BOR 0b00000100
                     PATCH_IF ~ismagic~=1 BEGIN
                         SET ~kit4~=~%kit4%~ BOR 0b00000010
                     END
                  END ELSE
                  PATCH_IF ~ismagic~=1 BEGIN
                   SET ~isheal~=0
                   // wizard slayers can't use magic items except for healing
                      PATCH_FOR_EACH ~healcheck~ IN ~potn20~ ~potn32~ ~adisease~ ~extheal~ ~ipotn08~ ~potn08~ ~potn17~ ~potn25~ ~elfwine~ BEGIN
                         PATCH_IF ~%healcheck%~ STRING_EQUAL_CASE ~%BASH_FOR_RES%~ BEGIN
                              SET ~isheal~=1
                         END
                      END
                      PATCH_IF ~isheal~=0 BEGIN
                         SET ~kit4~=~%kit4%~ BOR 0b00000010
                      END
                  END
                  WRITE_BYTE 0x1e ~class1~
                  WRITE_BYTE 0x1f ~class2~
                  WRITE_BYTE 0x20 ~class3~
                  WRITE_BYTE 0x21 ~class4~
                  WRITE_BYTE 0x29 ~kit1~
                  WRITE_BYTE 0x2b ~kit2~
                  WRITE_BYTE 0x2d ~kit3~
                  WRITE_BYTE 0x2f ~kit4~

         END
      BUT_ONLY
   END
END

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///     BCS and DLG files
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

BEGIN ~Swap Move-to-PC to Move-to-Player1~ DESIGNATED 265

ACTION_BASH_FOR ~iwd_in_bg2\baf~ ~.*\.baf~ BEGIN
   COPY ~iwd_in_bg2\baf\%BASH_FOR_RES%.baf~ ~iwd_in_bg2\baf~
     REPLACE_TEXTUALLY ~MoveToObject(\[PC\]\[0\.0\.10000\.10000\])~ ~MoveToObject(Player1)~
   BUT_ONLY
END

BEGIN ~SSL-based processing of BCS files, plus other preprocessing~ DESIGNATED 270

AT_NOW ~mkdir iwd_in_bg2\baf\ssl_out~

INCLUDE ~iwd_in_bg2/ssl/ssl.tph~

//SetBestWeapon

<<<<<<<< .../scsII-inline/ssl.2da
iwd_in_bg2/baf/D4FIGHT2
iwd_in_bg2/baf/EFATKBTH
iwd_in_bg2/baf/EFATKCR
iwd_in_bg2/baf/EFATKHR
iwd_in_bg2/baf/EFATKTR
iwd_in_bg2/baf/EHGOBLIN
iwd_in_bg2/baf/GNMBDSG
iwd_in_bg2/baf/GNMBG3G
iwd_in_bg2/baf/GNMBG3GH
iwd_in_bg2/baf/GNMBG9G
iwd_in_bg2/baf/GNMBG9GH
iwd_in_bg2/baf/GNMBGSG
iwd_in_bg2/baf/GNMBGSGH
iwd_in_bg2/baf/GNMBGSS
iwd_in_bg2/baf/GNMBKSG
iwd_in_bg2/baf/GNMBKSS
iwd_in_bg2/baf/GNSUMMB
iwd_in_bg2/baf/GNTRPB1
iwd_in_bg2/baf/GNTRPB1V
iwd_in_bg2/baf/GNTRPB2
iwd_in_bg2/baf/GNTRPB2V
iwd_in_bg2/baf/GNTRPB3
iwd_in_bg2/baf/GNTRPB3V
iwd_in_bg2/baf/GNTRPB4
iwd_in_bg2/baf/GNTRPB4V
iwd_in_bg2/baf/GNTRPB5
iwd_in_bg2/baf/GNTRPB5V
iwd_in_bg2/baf/KUOSWALD
iwd_in_bg2/baf/LDKELLY
iwd_in_bg2/baf/SHGOBAS1
iwd_in_bg2/baf/SHGOBAS2
iwd_in_bg2/baf/SHGOBAS3
iwd_in_bg2/baf/SHGOBAS4
iwd_in_bg2/baf/SHGOBS3
iwd_in_bg2/baf/UDMYCO1
iwd_in_bg2/baf/UDOROG1
iwd_in_bg2/baf/UDOROG2
iwd_in_bg2/baf/UDOROGPT
iwd_in_bg2/baf/UDOROGSP
>>>>>>>>       

LAUNCH_ACTION_MACRO ~SSL-IWD~

// Movement loops using NearLocation

ACTION_FOR_EACH script IN
CAJSHA1M
CATEAM1T
D4LIBR
D4MARATK
EECYCL9
EEDAMIEN
EETOWNC1
EETOWNC2
EETOWNC3
EHACCALI
EHBARKEE
EHDAMIEN
EHEVERAR
EHGIRL1
EHGIRL2
EHHROTH
EHTOWNF1
EHTOWNF2
EHTOWNF3
EHTOWNF4
EHTOWNF6
EHTOWNM3
EHTOWNM4
EHWORKM1
EHWORKM2
ILBAR3MV
ILBAR6MV
KEBEHLDD
KECOURT2
KTKRESS
KUALDWIN
KUAMELIA
KUCONLAN
KUFERG
KUGEEZER
KUGUS
KULYSAN
KUNATE
KUOSWALD
KUTOWN1
KUTOWN2
KUTOWN3
KUTOWN6
KUTOWN7
KUTOWNF1
KUTOWNF2
KUTOWNF3
KUTOWNM1
KUWEENOG
KUWHITCO
LDBEORN
LDFENG
LDGNMR1
LDGNMR2
LDGNMR3
LWAMBE2
LWARDN
LWDIGBY
LWDOLA
LWDOOG
LWEMMRI
LWHAND1
LWHAND2
LWKIERAN
LWPURV6
LWRAWL
LWTYBL
LWWOLF
LWYNGNED
SHCUSTAN
SHDENAIN
SHGOBAS2
SHGOBAS3
SHGOBAS4
SHKAYLES
SHLARREL
SHLEHLAN
SHLETHIA
SHSEHRIY
SHVALEST
TGVERBD
VSSKLM1
VSSKLM2
VSSKLM3
VSSKLM4
VSSKLM5
VSSKLM6
WTSLAVE1
BEGIN
   COPY_EXISTING ~iwd_in_bg2/baf/%script%.baf~ ~iwd_in_bg2/baf~
   REPLACE_TEXTUALLY ~!NearSavedLocation~ ~wurble~
   REPLACE_TEXTUALLY ~NearSavedLocation(~ ~!GlobalTimerNotExpired("i#dontgetstuck","LOCALS")NearSavedLocation(~
   REPLACE_TEXTUALLY ~ReturnToSavedLocation()~ ~SetGlobalTimer("i#dontgetstuck","LOCALS",6)ReturnToSavedLocation()~
   REPLACE_TEXTUALLY ~wurble~ ~!NearSavedLocation~
END

<<<<<<<< .../scsII-inline/ssl.2da
iwd_in_bg2/baf/CAJSHA1M
iwd_in_bg2/baf/CATEAM1T
iwd_in_bg2/baf/D4LIBR
iwd_in_bg2/baf/D4MARATK
iwd_in_bg2/baf/EECYCL9
iwd_in_bg2/baf/EEDAMIEN
iwd_in_bg2/baf/EETOWNC1
iwd_in_bg2/baf/EETOWNC2
iwd_in_bg2/baf/EETOWNC3
iwd_in_bg2/baf/EHACCALI
iwd_in_bg2/baf/EHBARKEE
iwd_in_bg2/baf/EHDAMIEN
iwd_in_bg2/baf/EHEVERAR
iwd_in_bg2/baf/EHGIRL1
iwd_in_bg2/baf/EHGIRL2
iwd_in_bg2/baf/EHHROTH
iwd_in_bg2/baf/EHTOWNF1
iwd_in_bg2/baf/EHTOWNF2
iwd_in_bg2/baf/EHTOWNF3
iwd_in_bg2/baf/EHTOWNF4
iwd_in_bg2/baf/EHTOWNF6
iwd_in_bg2/baf/EHTOWNM3
iwd_in_bg2/baf/EHTOWNM4
iwd_in_bg2/baf/EHWORKM1
iwd_in_bg2/baf/EHWORKM2
iwd_in_bg2/baf/ILBAR3MV
iwd_in_bg2/baf/ILBAR6MV
iwd_in_bg2/baf/KEBEHLDD
iwd_in_bg2/baf/KECOURT2
iwd_in_bg2/baf/KTKRESS
iwd_in_bg2/baf/KUALDWIN
iwd_in_bg2/baf/KUAMELIA
iwd_in_bg2/baf/KUCONLAN
iwd_in_bg2/baf/KUFERG
iwd_in_bg2/baf/KUGEEZER
iwd_in_bg2/baf/KUGUS
iwd_in_bg2/baf/KULYSAN
iwd_in_bg2/baf/KUNATE
iwd_in_bg2/baf/KUOSWALD
iwd_in_bg2/baf/KUTOWN1
iwd_in_bg2/baf/KUTOWN2
iwd_in_bg2/baf/KUTOWN3
iwd_in_bg2/baf/KUTOWN6
iwd_in_bg2/baf/KUTOWN7
iwd_in_bg2/baf/KUTOWNF1
iwd_in_bg2/baf/KUTOWNF2
iwd_in_bg2/baf/KUTOWNF3
iwd_in_bg2/baf/KUTOWNM1
iwd_in_bg2/baf/KUWEENOG
iwd_in_bg2/baf/KUWHITCO
iwd_in_bg2/baf/LDBEORN
iwd_in_bg2/baf/LDFENG
iwd_in_bg2/baf/LDGNMR1
iwd_in_bg2/baf/LDGNMR2
iwd_in_bg2/baf/LDGNMR3
iwd_in_bg2/baf/LWAMBE2
iwd_in_bg2/baf/LWARDN
iwd_in_bg2/baf/LWDIGBY
iwd_in_bg2/baf/LWDOLA
iwd_in_bg2/baf/LWDOOG
iwd_in_bg2/baf/LWEMMRI
iwd_in_bg2/baf/LWHAND1
iwd_in_bg2/baf/LWHAND2
iwd_in_bg2/baf/LWKIERAN
iwd_in_bg2/baf/LWPURV6
iwd_in_bg2/baf/LWRAWL
iwd_in_bg2/baf/LWTYBL
iwd_in_bg2/baf/LWWOLF
iwd_in_bg2/baf/LWYNGNED
iwd_in_bg2/baf/SHCUSTAN
iwd_in_bg2/baf/SHDENAIN
iwd_in_bg2/baf/SHGOBAS2
iwd_in_bg2/baf/SHGOBAS3
iwd_in_bg2/baf/SHGOBAS4
iwd_in_bg2/baf/SHKAYLES
iwd_in_bg2/baf/SHLARREL
iwd_in_bg2/baf/SHLEHLAN
iwd_in_bg2/baf/SHLETHIA
iwd_in_bg2/baf/SHSEHRIY
iwd_in_bg2/baf/SHVALEST
iwd_in_bg2/baf/TGVERBD
iwd_in_bg2/baf/VSSKLM1
iwd_in_bg2/baf/VSSKLM2
iwd_in_bg2/baf/VSSKLM3
iwd_in_bg2/baf/VSSKLM4
iwd_in_bg2/baf/VSSKLM5
iwd_in_bg2/baf/VSSKLM6
iwd_in_bg2/baf/WTSLAVE1
>>>>>>>>

LAUNCH_ACTION_MACRO ~SSL-IWD~


COPY ~iwd_in_bg2/baf/ssl_out~ ~iwd_in_bg2/baf~

BEGIN ~run replacements on dialog files~  DESIGNATED 280


INCLUDE ~iwd_in_bg2/lib/scripting_replacements.tpa~

COPY ~iwd_in_bg2/d~ ~iwd_in_bg2/compile~
  REPLACE_TEXTUALLY ~#\([0-9]+\)~ ~@\1~
  REPLACE_TEXTUALLY ~WEIGHT @~ ~WEIGHT #~
  REPLACE_TEXTUALLY ~BitGlobal("\([^"]+\)" *, *"\([^"]+\)" *, *16777216, OR)~ ~SetGlobal("\1Bit23","\2",1)~
  REPLACE_TEXTUALLY ~ChangeStat(\([^,]+\),\([A-Z][A-Z][A-Z]\),\([0-9]+\),SET)~ ~ApplySpellRES("cd\2s\3",\1)~
  // fix some syntax errors while we're here
  REPLACE_TEXTUALLY %IF ~SetGlobal(% %IF ~Global(% // Accalia's SetGlobal trigger
  REPLACE_TEXTUALLY ~CheckStat\([GL]\)T(\([A-Za-z]+\),\([A-Z]+\),\([0-9]+\))~ ~CheckStat\1T(\2,\4,\3)~ // dirty llew's bad CHR checks
  REPLACE_TEXTUALLY ~Globa\(l[LG]?T?\)("?\([^",]+\)"? *, *"?\([^",]+\)"? *, *\([0-9]+\))~ ~Globa\1("\2","\3",\4)~  // globals without quotes
  REPLACE_TEXTUALLY ~NumTimesTalkedGT(~ ~NumTimesTalkedToGT(~
  REPLACE_TEXTUALLY ~GiveItemCreate("\([^"]+\)",\([^),]+\))~ ~GiveItemCreate("\1",\2,0,0,0)~
  REPLACE_TEXTUALLY ~Protagonist~ ~LastTalkedToBy~
  LAUNCH_PATCH_MACRO ~scripting_replacements~


BEGIN ~run replacements on script files~  DESIGNATED 290


INCLUDE ~iwd_in_bg2/lib/scripting_replacements.tpa~

COPY ~iwd_in_bg2/baf~ ~iwd_in_bg2/compile~
  LAUNCH_PATCH_MACRO ~scripting_replacements~

BEGIN ~compile dialog and script files~   DESIGNATED 300

<<<<<<<< musics.ids
9
0 DAY
1 NIGHT
2 COMBAT_WIN
3 COMBAT_NORMAL
4 COMBAT_LOSE
5 MISC0
6 MISC1
7 MISC2
8 MISC3
9 MISC4
>>>>>>>>

COPY ~musics.ids~ ~override~

COPY
    ~iwd_in_bg2/rules/dir.ids~      ~override~ // for face
    ~iwd_in_bg2/rules/specific.ids~ ~override~
    ~iwd_in_bg2/rules/state.ids~    ~override~
    ~iwd_in_bg2/files/seq.ids~ ~override~

COPY_EXISTING ~action.ids~ ~override~
  REPLACE_TEXTUALLY ~Face(I:Direction\*)~ ~Face(I:Direction*dir)~
  REPLACE_TEXTUALLY ~StaticSequence(O:Object\*,I:Sequence\*)~ ~StaticSequence(O:Object*,I:Sequence*seq)~
  REPLACE_TEXTUALLY ~StartMusic(I:Slot\*,I:Flags\*MFLAGS)~ ~StartMusic(I:Slot*MUSICS,I:Flags*MFLAGS)~
  BUT_ONLY_IF_IT_CHANGES

CLEAR_IDS_MAP

// one small ad hoc change: shift UNDEAD to SPECTRAL_UNDEAD

COPY 
   ~iwd_in_bg2/compile/dugrdatk.baf~ ~iwd_in_bg2/compile~
   ~iwd_in_bg2/compile/gnundead.baf~ ~iwd_in_bg2/compile~
           REPLACE_TEXTUALLY ~UNDEAD~ ~SPECTRAL_UNDEAD~

COPY_EXISTING ~dplayer.bcs~ ~iwd_in_bg2/workspace~
COPY_EXISTING ~dplayer2.bcs~ ~iwd_in_bg2/workspace~
COPY_EXISTING ~dplayer3.bcs~ ~iwd_in_bg2/workspace~

COMPILE ~iwd_in_bg2/compile~

OUTER_FOR (i=1;i<10;i=i+1) BEGIN
   COPY ~iwd_in_bg2/files/cdhp1.spl~ ~override/cdhp%i%.spl~
   WRITE_LONG 0x9e ~i~
END


ACTION_FOR_EACH ~total~ IN ~25~ ~500~ ~3000~ BEGIN
   COPY ~iwd_in_bg2/files/cdhp1.spl~ ~override/cdhp%total%.spl~
   WRITE_LONG 0x9e ~%total%~
END


COPY ~iwd_in_bg2/workspace/dplayer.bcs~ ~override~
COPY ~iwd_in_bg2/workspace/dplayer2.bcs~ ~override~
COPY ~iwd_in_bg2/workspace/dplayer3.bcs~ ~override~


BEGIN ~David's tailored scripting replacements: ChangeCurrentScript~    DESIGNATED 310




// here are the fully automated conversions
<<<<<<<< awkward

>>>>>>>>


<<<<<<<< change_script_automate
BBCLOUD CLASS
BCATKGOB GENERAL
BCATKSKL GENERAL
BCBTLLC1 DEFAULT
BCBTLLC2 DEFAULT
BCESCORT DEFAULT
BCFOLGOB DEFAULT
BCFOLSKL DEFAULT
BCANGBTL RACE
BCGUARD RACE
BCSKLFGT RACE
BCTEAM1 CLASS
BCTEAM3 CLASS
CAJSHA1M CLASS
CATEAM1T SPECIFICS
CYDUELHA RACE
CYDUELMV DEFAULT
CYDUELWY RACE
D4ALB GENERAL
DULURADR CLASS
DULURCRI CLASS
DULURHAR CLASS
DULURHLD CLASS
DULURHOB CLASS
DULURMST RACE
DULURSHE CLASS
DULURSPN CLASS
DULURWRP CLASS
EECYCL4 GENERAL
EEEVETPL DEFAULT
EESQLMOB OVERRIDE
EFARENMY SPECIFICS
EFATKC   RACE
EFATKH   RACE
EFATKS00 RACE
EFATKS25 RACE
EFATKS50 RACE
EFATKS75 RACE
EFATKSA RACE
EFATKT  RACE
EFBGAZE CLASS
EFDELEAS SPECIFICS
EFJGAZE SPECIFICS
EFXDELH OVERRIDE
EFXDELL OVERRIDE
EFXKEEPH OVERRIDE
GNUNDEAD RACE
ILGEM1 RACE
ILGEM2 RACE
ILGEM3 RACE
ILGEM4 RACE
ILGEM5 RACE
ILGEM6 RACE
ILGEML RACE
ILGEMS RACE
ILGEMW SPECIFICS
ILICEAUR SPECIFICS
ILJORNHL GENERAL
ILMKENUT SPECIFICS
KEBEHLDD SPECIFICS
KETEAM1 SPECIFICS
KPGOBCHK GENERAL
KPGOBSUP GENERAL
KUATKEFF GENERAL
KUATKFLE GENERAL
LDIDLRNG RACE
LDILAIR RACE
LDKRAMGE RACE
LDMALAT1 RACE
LDMALVON CLASS
LWALPW1 GENERAL
LWALPW2 GENERAL
LWALPW3 GENERAL
LWALPWG GENERAL
LWSHAR1 CLASS
LWSHAR2 RACE
LWSHAR3 GENERAL
NEQHRPA CLASS
SCREMOHG GENERAL
SCREMOM1 GENERAL
SCREMOM2 GENERAL
SHACFLT1 GENERAL
SHCLFLT1 RACE
SHCLFLT2 RACE
SHOFLT1 RACE
SHOFLT2 GENERAL
SHOFLT3 GENERAL
WTVERBET GENERAL
ZLAURA RACE

>>>>>>>>

COPY - change_script_automate change_script_automate
    READ_2DA_ENTRIES_NOW change_script_automate 2
    FOR (i=0;i<~change_script_automate~;i=i+1) BEGIN
       READ_2DA_ENTRY_FORMER change_script_automate i 0 ~bcsfile~
       READ_2DA_ENTRY_FORMER change_script_automate i 1 ~slotname~
       INNER_ACTION BEGIN
          COPY_EXISTING ~%bcsfile%.bcs~ ~override~
             DECOMPILE_BCS_TO_BAF
             REPLACE_TEXTUALLY ~SetGlobal("ChangeCurrentScript_\(.*\)","LOCALS",1)~ ~ChangeAIScript("\1",%slotname%)~
             COMPILE_BAF_TO_BCS
          BUT_ONLY
       END
    END
BUT_ONLY

// these are script movements to keep the slots consistent

COPY_EXISTING ~ar9200.are~ ~override~
   WRITE_ASCII  0x174 ~~ #8
   WRITE_ASCII 0x17c ~BCTEAM1~ #8
   WRITE_ASCII  0x284 ~~ #8
   WRITE_ASCII 0x28c ~BCTEAM1~ #8
   WRITE_ASCII  0x394 ~~ #8
   WRITE_ASCII 0x39c ~BCTEAM1~ #8
BUT_ONLY

COPY_EXISTING ~ar9201.are~ ~override~
   WRITE_ASCII 0x16ac ~EFINVDEL~ #8
   WRITE_ASCII 0x16bc ~BCTEAM1~ #8
   WRITE_ASCII 0x16c4 ~~ #8
   WRITE_ASCII 0x16cc ~~ #8
   WRITE_ASCII 0x19dc ~EFINVDEL~ #8
   WRITE_ASCII 0x19ec ~BCTEAM1~ #8
   WRITE_ASCII 0x19f4 ~~ #8
   WRITE_ASCII 0x19fc ~~ #8
BUT_ONLY

COPY_EXISTING ~undeadlt.cre~ ~override~
    WRITE_ASCII 0x250 ~~ #8
    WRITE_ASCII 0x258 ~gnundead~ #8

ACTION_FOR_EACH beetle IN beetbomb gisbomb rndbomb BEGIN
   COPY_EXISTING ~%beetle%.cre~ ~override~
     WRITE_ASCII 0x250 ~BBCLOUD~ #8
     WRITE_ASCII 0x258 ~~ #8
END

// These scripts are trap/area scripts where the ChangeCurrent Script just deactivates the script by setting it to ""


<<<<<<<< void_script_extend.baf
IF
  Global("I#_void_script","GLOBAL",1)
THEN
  RESPONSE #100
   NoAction()
END
>>>>>>>>

ACTION_FOR_EACH ~script~ IN
~ar9201~ ~d4doorg~ ~d4doort~ ~d4geldor~
~d5door~ ~d5yxudor~ ~ldbdgopn~

BEGIN

COPY_EXISTING ~%script%.bcs~ ~override~
 DECOMPILE_BCS_TO_BAF
 REPLACE_TEXTUALLY ~SetGlobal("ChangeCurrentScript_","LOCALS",1)~ ~SetGlobal("I#_void_script_%SOURCE_RES%","GLOBAL",1)~ // script doesn't exist
 COMPILE_BAF_TO_BCS
BUT_ONLY

EXTEND_TOP ~%script%.bcs~ ~void_script_extend.baf~

END

// additional Cam fixes for VOID_SCRIPT

// fix over-zealous script voiding, pt 2/3
COPY_EXISTING ~d4doorg.bcs~  ~override~
              ~d4doort.bcs~  ~override~
  DECOMPILE_BCS_TO_BAF
    REPLACE_TEXTUALLY ~!Global("YUANTI_INFERNO","GLOBAL",0)~ ~False()~
  COMPILE_BAF_TO_BCS
  BUT_ONLY

// fix over-zealous script voiding, pt 3/3
EXTEND_TOP ~ar4004.bcs~ ~iwd_in_bg2/ice_tutu_fix/baf/ar4004.baf~

// end of additional Cam fixes

// Do some by hand

COMPILE ~iwd_in_bg2/files/ChangeCurrentScript~

// efdel*

<<<<<<<< skippable_block.baf
        IF
	True()
THEN
	RESPONSE #100
		SetGlobal("ChangeCurrentScript_","LOCALS",1)
END
>>>>>>>>

<<<<<<<<  blank_block.baf
>>>>>>>>

ACTION_FOR_EACH ~bcsfile~ IN
~efdeldef~ ~efdelhrd~ ~efdelins~ ~efdelnor~ BEGIN
   COPY_EXISTING ~%bcsfile%.bcs~ ~override~
          REPLACE_BCS_BLOCK ~skippable_block.baf~ ~blank_block.baf~
   BUT_ONLY
END

//efpik*

<<<<<<<< skippable_block_2.baf
IF
	Allegiance(Myself,ENEMY)
THEN
	RESPONSE #100
		SetGlobal("ChangeCurrentScript_","LOCALS",1)
END
>>>>>>>>

COPY_EXISTING
   ~efpikhst.bcs~ ~override~
   ~efpikwrn.bcs~ ~override~
       REPLACE_BCS_BLOCK ~skippable_block_2.baf~ ~blank_block.baf~

// ar6010

COPY_EXISTING ~ar6010.bcs~ ~override~
 DECOMPILE_BCS_TO_BAF
 REPLACE_TEXTUALLY ~SetGlobal("ChangeCurrentScript_AR6010N","LOCALS",1)~ ~NoAction()~ // script doesn't exist
 COMPILE_BAF_TO_BCS
BUT_ONLY

//eebelw*

OUTER_FOR (i=1;i<=6;i=i+1) BEGIN
   COPY_EXISTING ~eebelw%i%.bcs~ ~override~
     DECOMPILE_BCS_TO_BAF
     REPLACE_TEXTUALLY ~TimerExpired(25)~ ~Global("I#EEBEL","GLOBAL",%i%)TimerExpired(25)~
     COMPILE_BAF_TO_BCS
   BUT_ONLY
   EXTEND_TOP ~eebelwa.bcs~ ~override/eebelw%i%.bcs~
END

COPY_EXISTING ~eebelwa.bcs~ ~override~
   DECOMPILE_BCS_TO_BAF
   FOR (i=1;i<=6;i=i+1) BEGIN
    PATCH_PRINT ~SetGlobal("ChangeCurrentScript_eeBelW%i%","LOCALS",1)~
      REPLACE_TEXTUALLY CASE_INSENSITIVE ~SetGlobal("ChangeCurrentScript_eeBelW%i%","LOCALS",1)~ ~SetGlobal("I#EEBEL","GLOBAL",%i%)~
   END
   COMPILE_BAF_TO_BCS

COPY_EXISTING ~ar9801.are~ ~override~
    WRITE_ASCII 0x3254 ~CAJPLEAD~     // this way, all the EFAT family use the GENERAL slot
    WRITE_ASCII 0x3264 ~EFATKS00~

//necchest

COPY_EXISTING ~necchest.bcs~ ~override~
   DECOMPILE_BCS_TO_BAF
   REPLACE_TEXTUALLY ~SetGlobal("ChangeCurrentScript_~ ~SetGlobal("#necchest_~
   REPLACE_TEXTUALLY ~"LOCALS"~ ~"GLOBAL"~
   COMPILE_BAF_TO_BCS

ACTION_FOR_EACH ~trapscript~ IN
~gnt2001~ ~gnt2002~ ~gnt2016~ ~gnt2017~
~gnt2018~ ~gnt2019~ ~gnt2020~ ~gnt2024~
~gnt2805~ BEGIN
   COPY_EXISTING ~%trapscript%.bcs~ ~iwd_in_bg2/workspace/nec_add.baf~
       DECOMPILE_BCS_TO_BAF
       REPLACE_TEXTUALLY ~Entered(\[PC\])~ ~Global("#necchest_%trapscript%","GLOBAL",1)Entered([PC])~
       REPLACE_TEXTUALLY ~Opened(\[PC\])~ ~Global("#necchest_%trapscript%","GLOBAL",1)Opened([PC])~
   BUT_ONLY
   EXTEND_TOP ~necchest.bcs~ ~iwd_in_bg2/workspace/nec_add.baf~
END

// Cam's section

// scripts that target wrong slot, but used by multiple creatures in different slots
// in this case, use a LOCALS to nullify the script
COPY_EXISTING ~bbcloud.bcs~  ~override~
              ~bcteam1.bcs~  ~override~
              ~efdeleas.bcs~ ~override~
  DECOMPILE_BCS_TO_BAF
    REPLACE_TEXTUALLY ~ChangeAIScript("",[A-Z]+)~ ~SetGlobal("#deactivate_script_%SOURCE_RES%","LOCALS",1)~
    REPLACE_TEXTUALLY ~^IF~ ~IF !Global("#deactivate_script_%SOURCE_RES%","LOCALS",1)~
  COMPILE_BAF_TO_BCS
  BUT_ONLY

// scripts that target wrong slot, but used by multiple creatures in different slots
// in this case, use a LOCALS to nullify the script
COPY_EXISTING ~efdeldef.bcs~ ~override~                                                                                                        
              ~efdelhrd.bcs~ ~override~
              ~efdelins.bcs~ ~override~
              ~efdelnor.bcs~ ~override~
  DECOMPILE_BCS_TO_BAF
    REPLACE_TEXTUALLY ~ChangeAIScript("",[A-Z]+)~ ~SetGlobal("#deactivate_script_%SOURCE_RES%","LOCALS",1)~
    REPLACE_TEXTUALLY ~^IF~ ~IF !Global("#deactivate_script_%SOURCE_RES%","LOCALS",1)~
    APPEND_FILE ~iwd_in_bg2/ice_tutu_fix/baf/efdeldef.baf~
    EVALUATE_BUFFER
  COMPILE_BAF_TO_BCS
  BUT_ONLY



BEGIN ~David's tailored scripting replacements: HelpEX~    DESIGNATED 320

<<<<<<<< HelpEX_table
cvorcel  orc
d2beetg  beetle
d2beets1 beetle
d2beetw1 beetle
d2lizg   lizardman
d2lizw1  lizardman
d2spidg  spider
d2trolg  troll
d2trols1 troll
d2trolw1 troll
d2trolw2 troll
d2trolw3 troll
d5yuang  yuanti
d5yuanp4 yuanti
ehapsel  human
ehbeetle beetle
ehchurin human
eherevai human
ehgoblin goblin
ehhero1  human
ehjhonen human
eholdjed human
ehtownf1 human
ehtownf2 human
ehtownf3 human
ehtownf4 human
ehtownf5 human
ehtownf6 human
ehtownf7 human
ehtownm_ human
ehtownm3 human
ehworkm2 human
ldbeorn  svirfneblin
lddgnom1 svirfneblin
ldelem1  elemental
ldfgnt1  giant
ldgnmg   svirfneblin
ldgnmr1  svirfneblin
ldgnmr2  svirfneblin
ldgnmr3  svirfneblin
ldgnmw   svirfneblin
ldguello svirfneblin
ldsala2  salamander
shgobs2  goblin
shgobs3  goblin
udettin1 ettin
udorog1  orc
vsbeett1 beetle
vssklm1  skeleton
vssklm2  skeleton
vssklm3  skeleton
vssklm4  skeleton
vssklm5  skeleton
vssklm6  skeleton
>>>>>>>>

COPY - HelpEX_table HelpEX_table
   READ_2DA_ENTRIES_NOW HelpEX_data 2
   FOR (i=0;i<~HelpEX_data~;i=i+1) BEGIN
      READ_2DA_ENTRY_FORMER ~HelpEX_data~ ~i~ 0 ~script~
      READ_2DA_ENTRY_FORMER ~HelpEX_data~ ~i~ 1 ~race~
      INNER_ACTION BEGIN
         COPY_EXISTING ~%script%.bcs~ ~override~
             DECOMPILE_BCS_TO_BAF
             REPLACE_TEXTUALLY ~Help(\[0\.0\.GNOME\])~ ~Help([0.0.%race%])~
             COMPILE_BAF_TO_BCS
         BUT_ONLY
      END
   END


   // and now the generic ones

COPY_EXISTING_REGEXP GLOB ~gnm.*\.bcs~ ~override~
    DECOMPILE_BCS_TO_BAF
    REPLACE_TEXTUALLY ~Help(\[0\.0\.GNOME\])~ ~Help([ENEMY])~
    COMPILE_BAF_TO_BCS
BUT_ONLY

// while we're here, we'll fix some erroneous GNOME refs which should be to SVIRFNEBLIN

ACTION_FOR_EACH ~svirf~ IN ~ldbeorn~ ~lddgnom1~ ~ldgnmr1~ ~ldgnmr2~ ~ldgnmr3~ ~ldgnmw~ ~ldgnmg~ ~ldguello~
BEGIN
   COPY_EXISTING ~%svirf%.bcs~ ~override~
      DECOMPILE_BCS_TO_BAF
      REPLACE_TEXTUALLY ~GNOME~ ~SVIRFNEBLIN~
      COMPILE_BAF_TO_BCS
END


BEGIN ~David's tailored scripting replacements: SavedLocation (part 1)~       DESIGNATED 330

// fix some errors in the ordering
// (actually, whether they're errors is a moot point; we need them swapped over)

ACTION_FOR_EACH ~script~ IN
~d2trolg~ ~d3skelg~ ~d3wigtg~ ~d3zombg~ ~eherevai~
~ehbeetle~ ~ehgoblin~ ~ehhildre~ ~ehinvdwf~ ~ehpomab~
~ehquimby~ ~ehsquirl~  ~ktwgtim1~ ~shshdsd1~ ~tgacold~
~wttrprun~ ~shshdwz1~
BEGIN
   COPY_EXISTING ~%script%.bcs~ ~override~
     DECOMPILE_BCS_TO_BAF
     REPLACE_TEXTUALLY ~!Range("SAVED_LOCATION"~ ~SQWERDLE~
     REPLACE_TEXTUALLY ~Range("SAVED_LOCATION"~ ~!Range("SAVED_LOCATION"~
     REPLACE_TEXTUALLY ~SQWERDLE~ ~Range("SAVED_LOCATION"~
     COMPILE_BAF_TO_BCS
END

<<<<<<<< saved_replace_old.baf
IF
  !Range("SAVED_LOCATION",THERANGE)
THEN
  RESPONSE #100
      SetGlobal("ReturnToSavedLocation","LOCALS",1)
END
>>>>>>>>

<<<<<<<< saved_replace_old2.baf
IF
  ActionListEmpty()
  !Range("SAVED_LOCATION",THERANGE)
THEN
  RESPONSE #100
      SetGlobal("ReturnToSavedLocation","LOCALS",1)
END
>>>>>>>>




<<<<<<<< saved_replace_new.baf
IF
  !GlobalTimerNotExpired("#return_to_loc","LOCALS")
THEN
  RESPONSE #100
      MoveToSavedLocationn("#saved_loc","LOCALS")
      SetGlobalTimer("#return_to_loc","LOCALS","THERANGE")
END
>>>>>>>>

<<<<<<<< saved_replace_top.baf
IF
  !Global("#save_loc_init","LOCALS",1)
THEN
  RESPONSE #100
    SetGlobal("#save_loc_init","LOCALS",1)
    SaveObjectLocation("LOCALS","#saved_loc",Myself)
    Continue()
END
>>>>>>>>


  ACTION_FOR_EACH ~range~ IN ~0~ ~1~ ~2~ ~5~ ~7~ ~10~ ~12~ ~13~ ~15~ ~24~ ~36~ ~60~ ~96~ ~108~ ~120~ ~156~ ~180~ BEGIN
      ACTION_IF ~range~=0 THEN BEGIN
         OUTER_SET ~new_range~=6
      END ELSE BEGIN
         OUTER_SET ~new_range~=~range~
      END
      ACTION_BASH_FOR ~iwd_in_bg2/baf~ ~.*\.baf~ BEGIN
         COPY_EXISTING ~%BASH_FOR_RES%.bcs~ ~iwd_in_bg2/workspace/temp.baf~
            DECOMPILE_BCS_TO_BAF
         ACTION_IF FILE_CONTAINS_EVALUATED (~iwd_in_bg2/workspace/temp.baf~ ~Range("SAVED_LOCATION",%range%)~) THEN BEGIN
             ACTION_IF !VARIABLE_IS_SET $initialise_saved_loc(EVALUATE_BUFFER ~%BASH_FOR_RES%~) THEN BEGIN
                 EXTEND_TOP ~%BASH_FOR_RES%.bcs~ ~saved_replace_top.baf~
                 OUTER_SPRINT $initialise_saved_loc(EVALUATE_BUFFER ~%BASH_FOR_RES%~) ~~
             END
             COPY ~saved_replace_old.baf~ ~iwd_in_bg2/workspace/saved_replace_old.baf~
                  ~saved_replace_old2.baf~ ~iwd_in_bg2/workspace/saved_replace_old2.baf~
                  REPLACE_TEXTUALLY ~THERANGE~ ~%range%~
             COPY ~saved_replace_new.baf~ ~iwd_in_bg2/workspace/saved_replace_new.baf~
                  REPLACE_TEXTUALLY ~THERANGE~ ~%new_range%~
             COPY_EXISTING ~%BASH_FOR_RES%.bcs~ ~override~
                REPLACE_BCS_BLOCK ~iwd_in_bg2/workspace/saved_replace_old.baf~ ~iwd_in_bg2/workspace/saved_replace_new.baf~
                REPLACE_BCS_BLOCK ~iwd_in_bg2/workspace/saved_replace_old2.baf~ ~iwd_in_bg2/workspace/saved_replace_new.baf~
         END
      END
  END

// special cases

<<<<<<<< saved_replace_old.baf
IF
  ActionListEmpty()
  !Range("SAVED_LOCATION",0)
THEN
  RESPONSE #100
      SetGlobal("ReturnToSavedLocation","LOCALS",1)
END
>>>>>>>>

<<<<<<<< saved_replace_new.baf
IF
  ActionListEmpty()
THEN
  RESPONSE #100
      MoveToSavedLocationn("#saved_loc","LOCALS")
END
>>>>>>>>


      COPY ~saved_replace_old.baf~ ~iwd_in_bg2/workspace/saved_replace_old.baf~
      COPY ~saved_replace_new.baf~ ~iwd_in_bg2/workspace/saved_replace_new.baf~
      ACTION_BASH_FOR ~iwd_in_bg2/baf~ ~.*\.baf~ BEGIN
         COPY_EXISTING ~%BASH_FOR_RES%.bcs~ ~iwd_in_bg2/workspace/temp.baf~
            DECOMPILE_BCS_TO_BAF
         ACTION_IF FILE_CONTAINS_EVALUATED (~iwd_in_bg2/workspace/temp.baf~ ~Range("SAVED_LOCATION",0)~) THEN BEGIN
             COPY_EXISTING ~%BASH_FOR_RES%.bcs~ ~override~
                REPLACE_BCS_BLOCK ~iwd_in_bg2/workspace/saved_replace_old.baf~ ~iwd_in_bg2/workspace/saved_replace_new.baf~
         END
      END



BEGIN ~more script conv~  DESIGNATED 340


ACTION_FOR_EACH script IN
ehaccali ehbarkee ehdamien ehhroth ehtownf1 ehtownf4 ehtownf6 ehtownm4
ehworkm1 ehworkm2 ktkress kualdwin kuamelia kuferg kugeezer
kugus kulysan kuoswald kutown1 kutown3 kutown6 kutown7 kutownf1
kutownf2 kutownf3 kutownm1 kuweenog kuwhitco shcustan shdenain
shkayles shlarrel vssklm1 vssklm2 vssklm3 vssklm4 vssklm5 vssklm6
wtgorg wtguard ldfleez1 lwprvatk shgobas1 shgobs1 shgobs2 shgobs3 vslysan
idyngned shshdwz1
BEGIN
   COPY_EXISTING ~%script%.bcs~ ~override~
      DECOMPILE_BCS_TO_BAF
          REPLACE_TEXTUALLY ~!Range("SAVED_LOCATION",[^)]+)~ ~~
          REPLACE_TEXTUALLY ~Range("SAVED_LOCATION",[^)]+)~ ~~
          REPLACE_TEXTUALLY ~SetGlobal("ReturnToSavedLocation","LOCALS",1)~ ~MoveToSavedLocationn("#saved_loc","LOCALS")~
      COMPILE_BAF_TO_BCS
END


// these ones need a top section too

<<<<<<<< saved_replace_top.baf
IF
  !Global("#save_loc_init","LOCALS",1)
THEN
  RESPONSE #100
    SetGlobal("#save_loc_init","LOCALS",1)
    SaveObjectLocation("LOCALS","#saved_loc",Myself)
    Continue()
END
>>>>>>>>

ACTION_FOR_EACH script IN
idislfix
kedncrf2 kedncrf4 kedncrf6 kedncrf7 kedncrm6
kpgobchk ldbeorn ldfeng
BEGIN
   COPY_EXISTING ~%script%.bcs~ ~override~
      DECOMPILE_BCS_TO_BAF
          REPLACE_TEXTUALLY ~SetGlobal("ReturnToSavedLocation","LOCALS",1)~ ~MoveToSavedLocationn("#saved_loc","LOCALS")~
      COMPILE_BAF_TO_BCS
      EXTEND_TOP ~%script%.bcs~ ~saved_replace_top.baf~
END




// these ones seem to have a pointless block

<<<<<<<< strip_this.baf
IF
	!Global("YXUN_ATTACK","MYAREA",0)
	ActionListEmpty()
	!Range("SAVED_LOCATION",0)
THEN
	RESPONSE #100
		SetGlobal("ReturnToSavedLocation","LOCALS",1)
END
>>>>>>>>

<<<<<<<< blank.baf
>>>>>>>>

ACTION_FOR_EACH script IN d5yuang d5yuanp1 d5yuanp2 d5yuanp3 d5yuanp4 BEGIN
   COPY_EXISTING ~%script%.bcs~ ~override~
      REPLACE_BCS_BLOCK ~strip_this.baf~ ~blank.baf~
END

<<<<<<<< swap_from_this.baf
IF
	Global("CREATURE_STATE_VARBit3","LOCALS",1)
	ActionListEmpty()
	!Range("SAVED_LOCATION",60)
THEN
	RESPONSE #100
		SetGlobal("ReturnToSavedLocation","LOCALS",1)
END
>>>>>>>>

<<<<<<<< swap_to_this.baf
IF
	Global("CREATURE_STATE_VARBit3","LOCALS",1)
	ActionListEmpty()
	!GlobalTimerNotExpired("#return_to_loc","LOCALS")
THEN
	RESPONSE #100
                 MoveToSavedLocationn("#saved_loc","LOCALS")
		 SetGlobalTimer("#return_to_loc","LOCALS",60)
END
>>>>>>>>

ACTION_FOR_EACH script IN ehboy1 ehboy2 ehgirl1 ehgirl2 BEGIN
   COPY_EXISTING ~%script%.bcs~ ~override~
      REPLACE_BCS_BLOCK ~swap_from_this.baf~ ~swap_to_this.baf~
END

<<<<<<<< swap_from_this.baf
IF
	Global("MOVEMENT_LIST_1_LOC","LOCALS",0)
	!Range("SAVED_LOCATION",2)
	ActionListEmpty()
	!GlobalTimerNotExpired("MOVEMENT_LIST_1_TIMER","LOCALS")
THEN
	RESPONSE #100
		SetGlobalTimer("i#dontgetstuck","LOCALS",6)
		SetGlobal("ReturnToSavedLocation","LOCALS",1)
END
>>>>>>>>
<<<<<<<<   swap_from_this2.baf
IF
	Global("CREATURE_STATE_VARBit3","LOCALS",1)
	ActionListEmpty()
	!Range("SAVED_LOCATION",60)
THEN
	RESPONSE #100
		SetGlobalTimer("i#dontgetstuck","LOCALS",6)
		SetGlobal("ReturnToSavedLocation","LOCALS",1)
END
>>>>>>>>

<<<<<<<< swap_to_this.baf
IF
	Global("MOVEMENT_LIST_1_LOC","LOCALS",0)
	!GlobalTimerNotExpired("#return_to_loc2","LOCALS")
	ActionListEmpty()
	!GlobalTimerNotExpired("MOVEMENT_LIST_1_TIMER","LOCALS")
THEN
	RESPONSE #100
                 MoveToSavedLocationn("#saved_loc","LOCALS")
		 SetGlobalTimer("#return_to_loc2","LOCALS",3)
END
>>>>>>>>

<<<<<<<< swap_to_this2.baf
IF
	Global("CREATURE_STATE_VARBit3","LOCALS",1)
	!GlobalTimerNotExpired("#return_to_loc2","LOCALS")
	ActionListEmpty()
THEN
	RESPONSE #100
                 MoveToSavedLocationn("#saved_loc","LOCALS")
		 SetGlobalTimer("#return_to_loc2","LOCALS",3)
END
>>>>>>>>




ACTION_FOR_EACH script IN ehgirl1 ehgirl2 BEGIN
   COPY_EXISTING ~%script%.bcs~ ~override~
      REPLACE_BCS_BLOCK ~swap_from_this.baf~ ~swap_to_this.baf~
      REPLACE_BCS_BLOCK ~swap_from_this2.baf~ ~swap_to_this2.baf~
END

<<<<<<<< swap_from_this.baf
IF
	ActionListEmpty()
	!Range("SAVED_LOCATION",0)
THEN
	RESPONSE #100
		SetGlobalTimer("i#dontgetstuck","LOCALS",6)
		SetGlobal("ReturnToSavedLocation","LOCALS",1)
END
>>>>>>>>

<<<<<<<< swap_to_this.baf
IF
	ActionListEmpty()
THEN
	RESPONSE #100
                 MoveToSavedLocationn("#saved_loc","LOCALS")
END
>>>>>>>>

COPY_EXISTING ~d4libr.bcs~ ~override~
   REPLACE_BCS_BLOCK ~swap_from_this.baf~ ~swap_to_this.baf~

<<<<<<<< swap_from_this.baf
IF
	True()
	!Range("SAVED_LOCATION",0)
THEN
	RESPONSE #100
		SetGlobal("ReturnToSavedLocation","LOCALS",1)
END
>>>>>>>> 

<<<<<<<< swap_to_this.baf
IF
  !GlobalTimerNotExpired("#move_to_saved_loc","LOCALS")
THEN
    RESPONSE #100
             SetGlobalTimer("#move_to_saved_loc","LOCALS",6)
                 MoveToSavedLocationn("#saved_loc","LOCALS")
END
>>>>>>>>

COPY_EXISTING ~lddgnom2.bcs~ ~override~
   REPLACE_BCS_BLOCK ~swap_from_this.baf~ ~swap_to_this.baf~


<<<<<<<< swap_from_this.baf
        IF
	!See(NearestEnemyOf(Myself))
	ActionListEmpty()
	!Range("SAVED_LOCATION",0)
THEN
	RESPONSE #100
		SetGlobal("ReturnToSavedLocation","LOCALS",1)
END
>>>>>>>>

<<<<<<<< swap_to_this.baf
IF
	!See(NearestEnemyOf(Myself))
	ActionListEmpty()
  !GlobalTimerNotExpired("#move_to_saved_loc","LOCALS")
THEN
    RESPONSE #100
             SetGlobalTimer("#move_to_saved_loc","LOCALS",6)
                 MoveToSavedLocationn("#saved_loc","LOCALS")
END
>>>>>>>>

COPY_EXISTING ~bcrtnsav.bcs~ ~override~
   REPLACE_BCS_BLOCK ~swap_from_this.baf~ ~swap_to_this.baf~


COPY_EXISTING ~d5hitort.bcs~ ~override~
    DECOMPILE_BCS_TO_BAF
    REPLACE_TEXTUALLY ~!Range("SAVED_LOCATION",120)~ ~!GlobalTimerNotExpired("#return_to_loc","LOCALS")~
    REPLACE_TEXTUALLY ~SetGlobal("ReturnToSavedLocation","LOCALS",1)~ ~MoveToSavedLocationn("#saved_loc","LOCALS")SetGlobalTimer("#return_to_loc","LOCALS",120)~
    COMPILE_BAF_TO_BCS

COPY_EXISTING ~ldfloz1.bcs~ ~override~
    DECOMPILE_BCS_TO_BAF
    REPLACE_TEXTUALLY ~!Range("SAVED_LOCATION",48)~ ~!GlobalTimerNotExpired("#return_to_loc","LOCALS")~
    REPLACE_TEXTUALLY ~SetGlobal("ReturnToSavedLocation","LOCALS",1)~ ~MoveToSavedLocationn("#saved_loc","LOCALS")SetGlobalTimer("#return_to_loc","LOCALS",48)~
    COMPILE_BAF_TO_BCS

// I'm not 100% confident this is correct - ReturnToSavedLocationDelete occurs only in this one script

COPY_EXISTING ~lwwmovd1.bcs~ ~override~
   DECOMPILE_BCS_TO_BAF
   REPLACE_TEXTUALLY ~SetGlobal("ReturnToSavedLocationDelete","LOCALS",1)~ ~MoveToPoint([2260.1207])Face(NW)~
   REPLACE_TEXTUALLY ~SetGlobal("SetSavedLocationPointX","LOCALS",2260)~ ~~
   REPLACE_TEXTUALLY ~SetGlobal("SetSavedLocationPointY","LOCALS",1207)~ ~~
   COMPILE_BAF_TO_BCS

COPY_EXISTING 
~shgobrn2.bcs~ ~override~
~shgobrun.bcs~ ~override~
~shorcas1.bcs~ ~override~
   DECOMPILE_BCS_TO_BAF
   REPLACE_TEXTUALLY ~SetGlobal("SetSavedLocationPointX","LOCALS",1274)~ ~SaveLocation("LOCALS","#saved_loc",[1274.478])~
   REPLACE_TEXTUALLY ~SetGlobal("SetSavedLocationPointX","LOCALS",973)~ ~SaveLocation("LOCALS","#saved_loc",[973.1141])~
   REPLACE_TEXTUALLY ~SetGlobal("SetSavedLocationPointX","LOCALS",782)~ ~SaveLocation("LOCALS","#saved_loc",[782.694])~
   REPLACE_TEXTUALLY ~SetGlobal("SetSavedLocationPointY","LOCALS",\([0-9]+\))~ ~~
   REPLACE_TEXTUALLY ~SetGlobal("ReturnToSavedLocation","LOCALS",1)~ ~MoveToSavedLocationn("#saved_loc","LOCALS")~
   COMPILE_BAF_TO_BCS

COPY_EXISTING 
  ~shlehlan.bcs~ ~override~
  ~shlethia.bcs~ ~override~
  ~shsehriy.bcs~ ~override~
   DECOMPILE_BCS_TO_BAF
   REPLACE_TEXTUALLY ~!Range("SAVED_LOCATION",2)~ ~!GlobalTimerNotExpired("#return_to_loc2","LOCALS")~
   REPLACE_TEXTUALLY ~Range("SAVED_LOCATION",1)~ ~~
   REPLACE_TEXTUALLY ~SetGlobal("ReturnToSavedLocation","LOCALS",1)~
      ~MoveToSavedLocationn("#saved_loc","LOCALS")SetGlobalTimer("#return_to_loc","LOCALS",3)SetGlobal("#back_at_loc","LOCALS",1)~
   REPLACE_TEXTUALLY ~SetGlobal("MOVEMENT_DEST","LOCALS",\([1-5]\))~ ~SetGlobal("MOVEMENT_DEST","LOCALS",\1)SetGlobal("#back_at_loc","LOCALS",0)~
   REPLACE_TEXTUALLY ~SetGlobal("MOVEMENT_DEST","LOCALS",0)~ ~SQWERDLE~
   REPLACE_TEXTUALLY ~Global("MOVEMENT_DEST","LOCALS",0)~ ~Global("MOVEMENT_DEST","LOCALS",0)Global("#back_at_loc","LOCALS",1)~
   REPLACE_TEXTUALLY ~SQWERDLE~ ~SetGlobal("MOVEMENT_DEST","LOCALS",0)~
   COMPILE_BAF_TO_BCS


ACTION_FOR_EACH script IN
2002beet d2trolg  d3skelg d3wigtg d3zombg ehbeetle eherevai
ehgoblin ehhildre  ehinvdwf ehpomab ehquimby ehsquirl
kebehfol ktwgtim1  ldbeorn ldfeng shshdsd1 tgacold  wttrprun
BEGIN
   COPY_EXISTING ~%script%.bcs~ ~override~
       DECOMPILE_BCS_TO_BAF
       REPLACE_TEXTUALLY ~!Range("SAVED_LOCATION",\([0-9]+\))~ ~~
       REPLACE_TEXTUALLY ~Range("SAVED_LOCATION",\([0-9]+\))~ ~~
       COMPILE_BAF_TO_BCS
END

ACTION_FOR_EACH script IN
cajsum1 cajsum2  ldfleez1
BEGIN
   COPY_EXISTING ~%script%.bcs~ ~override~
       DECOMPILE_BCS_TO_BAF
       REPLACE_TEXTUALLY ~Range("SAVED_LOCATION",\([0-9]+\))~ ~GlobalTimerNotExpired("#return_to_loc","LOCALS")~
       COMPILE_BAF_TO_BCS
END


COPY_EXISTING
    ~shgobrun.bcs~ ~override~
    ~shgobrn2.bcs~ ~override~
      DECOMPILE_BCS_TO_BAF
      REPLACE_TEXTUALLY ~MoveToSavedLocationn("#saved_loc","LOCALS")~ ~MoveToSavedLocationn("#saved_loc","LOCALS") SetGlobal("AREA_VARBit2","MYAREA",1)~
      REPLACE_TEXTUALLY ~Range("SAVED_LOCATION",0)~ ~False()~
      COMPILE_BAF_TO_BCS

///// Do SetSavedLocation

ACTION_FOR_EACH script IN
bcclgate bchjol0 bcogatec bcogatej eeevect0
kebehldd ldfeng tgacolg tgacolw1
tgacolw2 tgverbg tgverbp1 tgverbs1 tgverbw1
BEGIN
   COPY_EXISTING ~%script%.bcs~ ~override~
     DECOMPILE_BCS_TO_BAF
     REPLACE_TEXTUALLY ~SetGlobal("SetSavedLocation","LOCALS",1)~ ~SaveObjectLocation("LOCALS","#saved_loc",Myself)~
     COMPILE_BAF_TO_BCS
END


//// Do IsWeaponRanged


COPY_EXISTING
~gnmbksg.bcs~ ~override~
~gnmbkss.bcs~ ~override~
~lwemmrh.bcs~ ~override~
~shkayles.bcs~ ~override~
    DECOMPILE_BCS_TO_BAF
    REPLACE_TEXTUALLY ~Global("IsWeaponRanged","LOCALS",1)~ ~~
    COMPILE_BAF_TO_BCS

 COPY_EXISTING
~ldkramg2.bcs~ ~override~
    DECOMPILE_BCS_TO_BAF
    REPLACE_TEXTUALLY ~Global("IsWeaponRanged","LOCALS",1)~ ~HasItem("msword",Myself)~
    COMPILE_BAF_TO_BCS



// Do NearLocation



 COMPILE ~iwd_in_bg2/files/dulurwrp.baf~

 // I think we can get away with these...
 
 COPY_EXISTING 
 ~ldmalat1.bcs~ ~override~
 ~ehdamien.bcs~ ~override~
 ~ilentgol.bcs~ ~override~
   DECOMPILE_BCS_TO_BAF
   REPLACE_TEXTUALLY ~!Global("NearLocation","LOCALS",0)~ ~~
   COMPILE_BAF_TO_BCS

COPY_EXISTING ~cyrbeet.bcs~ ~override~
   DECOMPILE_BCS_TO_BAF
   REPLACE_TEXTUALLY ~!Global("NearLocation","LOCALS",0)~ ~ActionListEmpty()~
   COMPILE_BAF_TO_BCS


COPY_EXISTING ~ilsahhp1.bcs~ ~override~
   DECOMPILE_BCS_TO_BAF
   REPLACE_TEXTUALLY ~!Global("NearLocation","LOCALS",0)~ ~!Global("#faced_gem","LOCALS",1)~
   REPLACE_TEXTUALLY ~FaceObject("GEM")~ ~SetGlobal("#faced_gem","LOCALS",1)FaceObject("GEM")~
   COMPILE_BAF_TO_BCS

COPY_EXISTING ~lwwarew.bcs~ ~override~
   DECOMPILE_BCS_TO_BAF
   REPLACE_TEXTUALLY ~MoveToPoint(\[3812.1448\])~ ~MoveToPoint([3812.1448])SetGlobal("#arrived","LOCALS",1)~
   REPLACE_TEXTUALLY ~Global("NearLocation","LOCALS",0)~ ~Global("#arrived","LOCALS",1)~
   COMPILE_BAF_TO_BCS

BEGIN ~Script converter: the last remnants~

COPY_EXISTING ~ar9700.bcs~ ~override~
    DECOMPILE_BCS_TO_BAF
    REPLACE_TEXTUALLY ~StaticSequence("9700MS2",SEQ_ATTACK)~ ~StaticSequence("9700MS2",SEQ_ATTACK)SetGlobal("#_9700MS2_SEQ_ATTACK","MYAREA",1)~
    REPLACE_TEXTUALLY ~StaticSequence("9700MS1",SEQ_CAST)~ ~StaticSequence("9700MS1",SEQ_CAST)SetGlobal("#_9700MS1_SEQ_CAST","MYAREA",1)~
    COMPILE_BAF_TO_BCS

COPY_EXISTING ~ar9714.bcs~ ~override~
    DECOMPILE_BCS_TO_BAF
    REPLACE_TEXTUALLY ~StaticSequence("9700MS2",SEQ_ATTACK)~ ~StaticSequence("9700MS2",SEQ_ATTACK)SetGlobal("#_9700MS2_SEQ_ATTACK","MYAREA",1)~
    REPLACE_TEXTUALLY ~StaticSequence("9714MS3",SEQ_AWAKE)~ ~StaticSequence("9714MS3",SEQ_AWAKE)SetGlobal("#_9714MS3_SEQ_AWAKE","MYAREA",1)~
    COMPILE_BAF_TO_BCS

    //... and I'll stop here - I'm not 100% sure this is correct


COMPILE ~iwd_in_bg2/files/cacont1.baf~

OUTER_SPRINT $gem(~cacont2~) ~dgem02~
OUTER_SPRINT $gem(~cacont3~) ~dgem09~
OUTER_SPRINT $gem(~cacont4~) ~dgem05~
OUTER_SPRINT $gem(~cacont5~) ~dgem04~

ACTION_FOR_EACH script IN
cacont2 cacont3 cacont4 cacont5 BEGIN
   COPY ~iwd_in_bg2/files/cacont1.baf~ ~override/%script%.bcs~
   REPLACE_TEXTUALLY ~dgem08~ ~GOOD_GEM~
   SPRINT ~temp~ $gem(~%script%~)
   REPLACE_TEXTUALLY ~%temp%~ ~dgemo08~
   REPLACE_TEXTUALLY ~GOOD_GEM~ ~%temp%~
   COMPILE_BAF_TO_BCS
END

// ad hoc stuff

// ranged dialog that gets missed by the converter


COPY_EXISTING
          ~dudopenc.bcs~ ~override~
          ~ehhrotht.bcs~ ~override~
          ~eepomabt.bcs~ ~override~
          ~eepoqct1.bcs~ ~override~
          ~ildrgdlg.bcs~ ~override~
          ~kuardtlk.bcs~ ~override~
          ~nehrpcut.bcs~ ~override~
   DECOMPILE_BCS_TO_BAF
   REPLACE_TEXTUALLY ~Dialogu?e?(~ ~StartDialogueNoSet(~
   REPLACE_TEXTUALLY ~SetGlobal("SetDialogueRange","LOCALS",[0-9]+)~ ~~
   COMPILE_BAF_TO_BCS


   ////////////////////////////////////////////////
   ////////////////////////////////////////////////



BEGIN ~script replacements needed for other reasons~    DESIGNATED 350

/// Chapters

COPY_EXISTING ~ar1006.bcs~ ~override~
   DECOMPILE_BCS_TO_BAF
   REPLACE_TEXTUALLY ~IncrementChapter("CHPTXT1")~ ~IncrementChapter("CHPTXT0")SetGlobal("Chapter","GLOBAL",1)~
   COMPILE_BAF_TO_BCS

COPY_EXISTING ~ar2100.bcs~ ~override~
   DECOMPILE_BCS_TO_BAF
   REPLACE_TEXTUALLY ~Global("Chapter","GLOBAL",0)~ ~Global("#chapter_1_text","GLOBAL",0)~
   REPLACE_TEXTUALLY ~IncrementChapter("")~ ~SetGlobal("Chapter","GLOBAL",0)IncrementChapter("CHPTXT1")SetGlobal("Chapter","GLOBAL",1)SetGlobal("#chapter_1_text","GLOBAL",1)~
   COMPILE_BAF_TO_BCS

COPY_EXISTING ~ar4000.bcs~ ~override~
   DECOMPILE_BCS_TO_BAF
   REPLACE_TEXTUALLY ~IncrementChapter("")~ ~IncrementChapter("CHPTXT2")~
   COMPILE_BAF_TO_BCS

COPY_EXISTING ~ar5000.bcs~ ~override~
   DECOMPILE_BCS_TO_BAF
   REPLACE_TEXTUALLY ~IncrementChapter("")~ ~IncrementChapter("CHPTXT3")~
   COMPILE_BAF_TO_BCS

COPY_EXISTING ~ar6000.bcs~ ~override~
   DECOMPILE_BCS_TO_BAF
   REPLACE_TEXTUALLY ~IncrementChapter("")~ ~IncrementChapter("CHPTXT4")~
   COMPILE_BAF_TO_BCS

COPY_EXISTING ~ar7005.bcs~ ~override~
   DECOMPILE_BCS_TO_BAF
   REPLACE_TEXTUALLY ~IncrementChapter("")~ ~IncrementChapter("CHPTXT5")~
   COMPILE_BAF_TO_BCS

COPY_EXISTING ~ar8001.bcs~ ~override~
   DECOMPILE_BCS_TO_BAF
   REPLACE_TEXTUALLY ~IncrementChapter("")~ ~IncrementChapter("CHPTXT6")~
   COMPILE_BAF_TO_BCS

// Cam's tweaks to Difficulty

// correct difficulty triggers
COPY_EXISTING ~efatksa.bcs~ ~override~
              ~efdela.bcs~  ~override~
  DECOMPILE_BCS_TO_BAF
    REPLACE_TEXTUALLY ~DifficultyLT(NORMAL)~ ~Difficulty(EASY)~
    REPLACE_TEXTUALLY ~DifficultyLT(HARD)~ ~Difficulty(NORMAL)~
    REPLACE_TEXTUALLY ~DifficultyLT(HARDEST)~ ~Difficulty(HARD)~
  COMPILE_BAF_TO_BCS
  BUT_ONLY

// correct difficulty triggers
COPY_EXISTING ~efdeldef.bcs~ ~override~
              ~efdelhrd.bcs~ ~override~
  DECOMPILE_BCS_TO_BAF
    REPLACE_TEXTUALLY ~DifficultyLT(HARDEST)~ ~DifficultyLT(HARD)~
  COMPILE_BAF_TO_BCS
  BUT_ONLY

// correct difficulty triggers
COPY_EXISTING ~efdeleas.bcs~ ~override~
  DECOMPILE_BCS_TO_BAF
    REPLACE_TEXTUALLY ~Difficulty(~ ~DifficultyLT(~
  COMPILE_BAF_TO_BCS
  BUT_ONLY

// correct difficulty triggers
COPY_EXISTING ~efdelins.bcs~ ~override~
  DECOMPILE_BCS_TO_BAF
    REPLACE_TEXTUALLY ~DifficultyGT(EASIEST)~ ~DifficultyLT(HARDEST)~
  COMPILE_BAF_TO_BCS
  BUT_ONLY

// correct difficulty triggers
COPY_EXISTING ~efdelnor.bcs~ ~override~
  DECOMPILE_BCS_TO_BAF
    REPLACE_TEXTUALLY ~DifficultyLT(HARD)~ ~DifficultyLT(NORMAL)~
  COMPILE_BAF_TO_BCS
  BUT_ONLY




BEGIN ~Sort out Pomab's battle~           DESIGNATED 360

// create the pomab clones

COPY_EXISTING ~eepomabs.bcs~ ~override~
    DECOMPILE_BCS_TO_BAF
    REPLACE_TEXTUALLY ~ForceSpell(Myself,0)~ ~SetGlobal("i#pomab","MYAREA",1)~
    REPLACE_TEXTUALLY ~Wait(2)~ ~Wait(2) DestroySelf()~
    COMPILE_BAF_TO_BCS

OUTER_FOR (i=1;i<=5;i=i+1) BEGIN
  COPY_EXISTING ~pomimg.cre~ ~override/pomimg%i%.cre~
       WRITE_ASCII 0x280 ~pomimg%i%~ #32
END

// modify the fake-pomab scripts so they don't vanish if Pomab's hit (we do this at area level)

COPY_EXISTING ~eepomabf.bcs~ ~override~
    DECOMPILE_BCS_TO_BAF
    REPLACE_TEXTUALLY ~OR(2)~ ~~
    REPLACE_TEXTUALLY ~!Global("KILL_FAKE_POMAB","GLOBAL",0)~ ~~
    COMPILE_BAF_TO_BCS


<<<<<<<< pomab_area_add.baf
IF
  Global("i#pomab","AR1103",1)
THEN
    RESPONSE #30
         SetGlobal("i#pomab","AR1103",2)
         CreateCreature("pomimg",[461.536],0)
         CreateCreature("pomimg",[451.536],0)
         CreateCreature("pomimg",[460.539],0)
         CreateCreature("pomimg",[460.533],0)
         CreateCreature("pomimg",[452.539],0)
         CreateCreature("eepomab",[452.533],0)
    RESPONSE #30
         SetGlobal("i#pomab","AR1103",2)
         CreateCreature("pomimg1",[461.536],0)
         CreateCreature("pomimg2",[451.536],0)
         CreateCreature("pomimg3",[460.539],0)
         CreateCreature("pomimg4",[460.533],0)
         CreateCreature("eepomab",[452.539],0)
         CreateCreature("pomimg5",[452.533],0)
    RESPONSE #30
         SetGlobal("i#pomab","AR1103",2)
         CreateCreature("pomimg1",[461.536],0)
         CreateCreature("pomimg2",[451.536],0)
         CreateCreature("pomimg3",[460.539],0)
         CreateCreature("eepomab",[460.533],0)
         CreateCreature("pomimg4",[452.539],0)
         CreateCreature("pomimg5",[452.533],0)
    RESPONSE #30
         SetGlobal("i#pomab","AR1103",2)
         CreateCreature("pomimg1",[461.536],0)
         CreateCreature("pomimg2",[451.536],0)
         CreateCreature("eepomab",[460.539],0)
         CreateCreature("pomimg3",[460.533],0)
         CreateCreature("pomimg4",[452.539],0)
         CreateCreature("pomimg5",[452.533],0)
    RESPONSE #30
         SetGlobal("i#pomab","AR1103",2)
         CreateCreature("pomimg1",[461.536],0)
         CreateCreature("eepomab",[451.536],0)
         CreateCreature("pomimg2",[460.539],0)
         CreateCreature("pomimg3",[460.533],0)
         CreateCreature("pomimg4",[452.539],0)
         CreateCreature("pomimg5",[452.533],0)
    RESPONSE #30
         SetGlobal("i#pomab","AR1103",2)
         CreateCreature("eepomab",[461.536],0)
         CreateCreature("pomimg1",[451.536],0)
         CreateCreature("pomimg2",[460.539],0)
         CreateCreature("pomimg3",[460.533],0)
         CreateCreature("pomimg4",[452.539],0)
         CreateCreature("pomimg5",[452.533],0)
END

IF
  !Global("KILL_FAKE_POMAB","GLOBAL",0)
  Global("SPRITE_IS_DEADFAKE_POMAB","GLOBAL",0)
THEN
  RESPONSE #100
       SetGlobal("KILL_FAKE_POMAB","GLOBAL",0)
       IncrementGlobal("SPRITE_IS_DEADFAKE_POMAB","GLOBAL",1)
       ActionOverride("pomimg1",DestroySelf())
END

IF
  !Global("KILL_FAKE_POMAB","GLOBAL",0)
  Global("SPRITE_IS_DEADFAKE_POMAB","GLOBAL",1)
THEN
  RESPONSE #100
       SetGlobal("KILL_FAKE_POMAB","GLOBAL",0)
       IncrementGlobal("SPRITE_IS_DEADFAKE_POMAB","GLOBAL",1)
       ActionOverride("pomimg2",DestroySelf())
END

IF
  !Global("KILL_FAKE_POMAB","GLOBAL",0)
  Global("SPRITE_IS_DEADFAKE_POMAB","GLOBAL",2)
THEN 
  RESPONSE #100
       SetGlobal("KILL_FAKE_POMAB","GLOBAL",0)
       IncrementGlobal("SPRITE_IS_DEADFAKE_POMAB","GLOBAL",1)
       ActionOverride("pomimg3",DestroySelf())
END

IF
  !Global("KILL_FAKE_POMAB","GLOBAL",0)
  Global("SPRITE_IS_DEADFAKE_POMAB","GLOBAL",3)
THEN 
  RESPONSE #100
       SetGlobal("KILL_FAKE_POMAB","GLOBAL",0)
       IncrementGlobal("SPRITE_IS_DEADFAKE_POMAB","GLOBAL",1)
       ActionOverride("pomimg4",DestroySelf())
END

IF
  !Global("KILL_FAKE_POMAB","GLOBAL",0)
  Global("SPRITE_IS_DEADFAKE_POMAB","GLOBAL",4)
THEN 
  RESPONSE #100
       SetGlobal("KILL_FAKE_POMAB","GLOBAL",0)
       IncrementGlobal("SPRITE_IS_DEADFAKE_POMAB","GLOBAL",1)
       ActionOverride("pomimg5",DestroySelf())
END
>>>>>>>>

EXTEND_TOP ~ar1103.bcs~ ~pomab_area_add.baf~


BEGIN ~Equip() ~


COPY_EXISTING ~aport.itm~ ~override~
   WRITE_SHORT 0x1c 1


COPY_EXISTING
   ~bcscut1a.bcs~ ~override~
   ~bcscut1d.bcs~ ~override~
   ~eecrnent.bcs~ ~override~
   DECOMPILE_BCS_TO_BAF
   REPLACE_TEXTUALLY ~EquipItem("APORT")~ ~FillSlot(SLOT_AMULET)~
   COMPILE_BAF_TO_BCS


COPY_EXISTING 
  ~cperris0.bcs~ ~override~
  ~cpgeddi0.bcs~ ~override~
  ~cpgiles0.bcs~ ~override~
  ~cpzierk0.bcs~ ~override~
  ~dudclose.bcs~ ~override~
  ~dulpoof.bcs~ ~override~
  ~dulurbye.bcs~ ~override~
  ~kefade1.bcs~ ~override~
  ~kesdance.bcs~ ~override~
   DECOMPILE_BCS_TO_BAF
   REPLACE_TEXTUALLY ~EquipItem("CIFADE")~ ~FillSlot(SLOT_RING_RIGHT)~
   COMPILE_BAF_TO_BCS


COPY_EXISTING ~eepomsen.bcs~ ~override~
   DECOMPILE_BCS_TO_BAF
   REPLACE_TEXTUALLY ~EquipItem("MINHPAM")~ ~FillSlot(SLOT_AMULET)~
   COMPILE_BAF_TO_BCS


COPY_EXISTING ~eftrolg.bcs~ ~override~
   DECOMPILE_BCS_TO_BAF
   REPLACE_TEXTUALLY ~EquipItem("REG1HP2")~ ~DestroyItem("TROLLDE") FillSlot(SLOT_RING_LEFT)~
   REPLACE_TEXTUALLY ~EquipItem("TROLLDE")~ ~DestroyItem("REG1HP2") FillSlot(SLOT_RING_RIGHT)~
   COMPILE_BAF_TO_BCS

COPY_EXISTING
~ildrgded.bcs~ ~override~
~ilgemvew.bcs~ ~override~
   DECOMPILE_BCS_TO_BAF
   REPLACE_TEXTUALLY ~EquipItem("RING91")~ ~FillSlot(SLOT_RING_RIGHT)~
   COMPILE_BAF_TO_BCS

COPY_EXISTING
~lwalpkil.bcs~ ~override~
   DECOMPILE_BCS_TO_BAF
   REPLACE_TEXTUALLY ~EquipItem("LWRING")~ ~FillSlot(SLOT_RING_RIGHT)~
   COMPILE_BAF_TO_BCS


COPY_EXISTING ~ldmalvon.bcs~ ~override~
   DECOMPILE_BCS_TO_BAF
   REPLACE_TEXTUALLY ~EquipItem("RINGMAL")~ ~GiveItemCreate("RINGMAL",Myself,1,0,0)FillSlot(SLOT_RING_LEFT)~
   REPLACE_TEXTUALLY ~EquipItem("MINHP1")~ ~FillSlot(SLOT_RING_RIGHT)~
   COMPILE_BAF_TO_BCS

COPY_EXISTING ~suman.itm~ ~override~
   WRITE_SHORT 0x1c 1

COPY_EXISTING ~ldpoqpal.bcs~ ~override~
   DECOMPILE_BCS_TO_BAF
   REPLACE_TEXTUALLY ~EquipItem("SUMAN")~ ~FillSlot(SLOT_AMULET)~
   COMPILE_BAF_TO_BCS

COPY_EXISTING ~trans2.itm~ ~override~
   WRITE_SHORT 0x1c 1

COPY_EXISTING ~shfade1.bcs~ ~override~
   DECOMPILE_BCS_TO_BAF
   REPLACE_TEXTUALLY ~EquipItem("TRANS2")~ ~FillSlot(SLOT_AMULET)~
   COMPILE_BAF_TO_BCS

COPY_EXISTING ~shgstfde.bcs~ ~override~
              ~shtalfan.bcs~ ~override~
              ~shtavpat.bcs~ ~override~
   DECOMPILE_BCS_TO_BAF
   REPLACE_TEXTUALLY ~EquipItem("RINGTOM")~ ~FillSlot(SLOT_RING_RIGHT)~
   COMPILE_BAF_TO_BCS



///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///     Remaining tasks
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////// Creatures that should start hidden /////////////

BEGIN ~Creatures that should start hidden~ DESIGNATED 370
COPY_EXISTING ~mage01.itm~ ~override/i#hide.itm~

<<<<<<<< i#hideme.baf
IF
  OnCreation()
  Global("#ihideinitial","LOCALS",0)
THEN
    RESPONSE #100
             SetGlobal("#ihideinitial","LOCALS",1)
             SetGlobal("#iamhidden","LOCALS",1)
             Deactivate(Myself)
END

IF
  OnCreation()
  Global("#iamhidden","LOCALS",1)
  IsActive(Myself)
THEN
    RESPONSE #100
             Deactivate(Myself)
END
>>>>>>>>


<<<<<<<< i#showme.baf
IF
  IsActive(Myself)
  HasItem("i#hide",Myself)
THEN
    RESPONSE #100
       DestroyItem("i#hide")
       Continue()
END
>>>>>>>>

<<<<<<<< i#hostme.baf
IF
  OnCreation()
  Global("#ihideinitial","LOCALS",0)
THEN
    RESPONSE #100
             SetGlobal("#ihideinitial","LOCALS",1)
             SetGlobal("#iamhidden","LOCALS",1)
             Deactivate(Myself)
END

IF
  OnCreation()
  Global("#iamhidden","LOCALS",1)
  IsActive(Myself)
THEN
    RESPONSE #100
             Deactivate(Myself)
END

IF
  IsActive(Myself)
  !Global("#hostme","LOCALS",1)
THEN
    RESPONSE #100
       SetGlobal("#hostme","LOCALS",1)
       Enemy()
       Continue()
END
>>>>>>>>

COMPILE ~i#hideme.baf~
COMPILE ~i#showme.baf~
COMPILE ~i#hostme.baf~

ACTION_FOR_EACH ~cre~ IN   // all creatures with 0x248 empty
hjolldrh wvirginn salamanf hroth1 vaarglan mercwar1 mercwar2
keanimph fleezum2 uhlk8009 alpheusd invissal invistrl lddthief
arundel1 sheemish udspider eecorpse damien2 eecyc1 kaorog
kaoroge katown1 katown2 katown3 kaarund vsshad1 vsyetii
yuanmag bird squirel2 bronsen fengla2 flozem2 krakmag
malavon ilair invstlk psentry emmrchh purvish werewlf alpheus
pshar mercthf hobarth ambereh haileeh seercut bbspir wspir
wvirgin remorhh dlsgem djinni  trhobrt trharld trcriek tradran trshelh
trsph1 trsph2 trsph3 trsph4 trsph5 trsph6 trsph7 trsph8 trsph9
ckinvst beholdh erris geddian giles zierkki everard2
BEGIN
   COPY_EXISTING ~%cre%.cre~ ~override~
       PATCH_IF BYTE_AT 0x270=255 BEGIN
            WRITE_BYTE 0x270 128
            WRITE_ASCII 0x248 ~i#hostme~ #8
       END ELSE BEGIN
            WRITE_ASCII 0x248 ~i#hideme~ #8
       END
       SET ~byte~=BYTE_AT 0x22 BOR 0b00001000
       WRITE_BYTE 0x22 ~byte~
END


COPY_EXISTING ~ckspgrdh.cre~ ~override~
   SET ~byte~=BYTE_AT 0x22 BOR 0b00001000
   WRITE_BYTE 0x22 ~byte~
   WRITE_ASCII 0x268 ~i#hideme~ #8
   
ACTION_FOR_EACH ~cre~ IN
rakshinv eesquirl
BEGIN
   COPY_EXISTING ~%cre%.cre~ ~override~
       SET ~byte~=BYTE_AT 0x22 BOR 0b00001000
       WRITE_BYTE 0x22 ~byte~
       WRITE_ASCII 0x268 ~i#hideme~ #8
END


EXTEND_TOP ~keraksha.bcs~ ~i#hostme.baf~


COPY_EXISTING ~eepeqtlk.bcs~ ~override~
   DECOMPILE_BCS_TO_BAF
   REPLACE_TEXTUALLY 
     ~MultiPlayerSync()~
     ~MultiPlayerSync()
      Deactivate("cornugon_1")
      Deactivate("cornugon_2")~
   COMPILE_BAF_TO_BCS

COPY_EXISTING ~ar6006.are~ ~override~
    WRITE_ASCII 0x27c ~~ #8
    WRITE_ASCII 0x284 ~EFDELDEF~
    WRITE_ASCII 0x7cc ~~ #8
    WRITE_ASCII 0x7d4 ~EFDELDEF~

ACTION_FOR_EACH crefile IN
everard2 kaarund vaarglan purvish
erris geddian giles zierkki  BEGIN
   OUTER_SPRINT $hidden_cre_are(~%crefile%~) ~~
END

ACTION_BASH_FOR ~iwd_in_bg2\are~ ~.*\.are~ BEGIN
   COPY_EXISTING ~%BASH_FOR_RES%.are~ ~override~
           READ_LONG 0x54 ~act_off~
           READ_SHORT 0x58 ~act_num~
           FOR (i=0;i<~act_num~;i=i+1) BEGIN
              READ_ASCII ~act_off~+0x110* ~i~ + 0x80 ~crefile~
              TO_LOWER ~crefile~
              PATCH_IF VARIABLE_IS_SET $hidden_cre_are(EVALUATE_BUFFER  ~%crefile%~) BEGIN
                 WRITE_ASCII ~act_off~+0x110* ~i~ + 0x50 ~i#hideme~
              END
           END
   BUT_ONLY
END




//////////////Death variables/////////////////////////////////


BEGIN ~Deal with DVs~ DESIGNATED 380

// firstly, generate a list of all CRE files which have secondary and/or tertiary DVs. (We ignore KILL_INNOCENT for these purposes)

COPY - ~iwd_in_bg2/lib/dv_sec.2da~ ~iwd_in_bg2/lib~
   READ_2DA_ENTRIES_NOW ~dv_grid_sec~ 1
   FOR (i=0;i<~%dv_grid_sec%~;i=i+1) BEGIN
      READ_2DA_ENTRY_FORMER ~dv_grid_sec~ i 0 ~crefile~
      READ_2DA_ENTRY_FORMER ~dv_grid_sec~ i 1 ~secondary~
      TO_UPPER ~crefile~
      TO_UPPER ~secondary~
      PATCH_IF ~%secondary%~ STRING_COMPARE_CASE ~KILL_INNOCENT~ BEGIN
          INNER_PATCH_SAVE ~secondary~ ~%secondary%~ BEGIN
                           REPLACE_TEXTUALLY ~\([^"]+\)_DEAD~ ~SPRITE_IS_DEAD\1~
          END
         SPRINT $DV_secondary(~%crefile%~) ~%secondary%~
      END

   END

COPY - ~iwd_in_bg2/lib/dv_ter.2da~ ~iwd_in_bg2/lib~
   READ_2DA_ENTRIES_NOW ~dv_grid_ter~ 1
   FOR (i=0;i<~%dv_grid_ter%~;i=i+1) BEGIN
      READ_2DA_ENTRY_FORMER ~dv_grid_ter~ i 0 ~crefile~
      READ_2DA_ENTRY_FORMER ~dv_grid_ter~ i 1 ~tertiary~
      TO_UPPER ~crefile~
      TO_UPPER ~tertiary~
      PATCH_IF ~%tertiary%~ STRING_COMPARE_CASE ~KILL_INNOCENT~ BEGIN
          INNER_PATCH_SAVE ~tertiary~ ~%tertiary%~ BEGIN
                           REPLACE_TEXTUALLY ~\([^"]+\)_DEAD~ ~SPRITE_IS_DEAD\1~
          END
         SPRINT $DV_tertiary(~%crefile%~) ~%tertiary%~
      END

   END

// deal with DVs assigned by area file

// handle a few that are too long

COPY_EXISTING ~ar4002.are~ ~override~
   REPLACE_TEXTUALLY ~Lizard Man Shaman KID 2~ ~LzdManShamanKID2~ (23)
   REPLACE_TEXTUALLY ~Lizard Man Shaman KID 3~ ~LzdManShamanKID3~ (23)
COPY_EXISTING ~ar8010.are~ ~override~
   REPLACE_TEXTUALLY ~Malavon's Simulacrum~ ~MalavonSimulacrum~ (20)


ACTION_BASH_FOR ~iwd_in_bg2/are~ ~.*\.are~ BEGIN
    COPY_EXISTING ~%BASH_FOR_RES%.are~ ~override~
         GET_OFFSET_ARRAY cre_array 0x54 4 0x58 2 0 0 0x110
         PHP_EACH cre_array AS int => cre_off BEGIN
              SET ~byte~=BYTE_AT (0x28 + cre_off) BOR 0b00001000   // set the "override script name" flag
              WRITE_BYTE 0x28 + ~cre_off~ ~byte~
              READ_ASCII 0x80 + ~cre_off~ ~cre_name~
              TO_UPPER ~cre_name~
              PATCH_IF VARIABLE_IS_SET $DV_secondary(EVALUATE_BUFFER ~%cre_name%~) BEGIN
                     SPRINT ~dvsecondary~ $DV_secondary(EVALUATE_BUFFER ~%cre_name%~)
                     READ_ASCII cre_off ~scriptname~ (0x20) NULL
                     SPRINT ~areaname~ ~%BASH_FOR_RES%~
                     INNER_PATCH_SAVE ~scriptname~ ~%scriptname%~ BEGIN
                        REPLACE_TEXTUALLY ~ ~ ~~
                     END
                    WRITE_ASCIIE cre_off ~%scriptname%~ #32
                     SPRINT $are_dv_array_secondary(~%scriptname%~ ~%areaname%~) ~%dvsecondary%~
              END
              PATCH_IF VARIABLE_IS_SET $DV_tertiary(EVALUATE_BUFFER ~%cre_name%~) BEGIN
                     SPRINT ~dvtertiary~ $DV_tertiary(EVALUATE_BUFFER ~%cre_name%~)
                     READ_ASCII cre_off ~scriptname~ (0x20) NULL
                     SPRINT ~areaname~ ~%BASH_FOR_RES%~
                     INNER_PATCH_SAVE ~scriptname~ ~%scriptname%~ BEGIN
                        REPLACE_TEXTUALLY ~ ~ ~~
                     END
                      WRITE_ASCIIE cre_off ~%scriptname%~ #32
                     SPRINT $are_dv_array_tertiary(~%scriptname%~ ~%areaname%~) ~%dvtertiary%~
              END

         END
    BUT_ONLY
END

// add blocks to BALDUR.BCS and BALDUR25.BCS to update secondary and tertiary DVs

<<<<<<<< dv_update.baf
IF
  !Global("%secondarydv%","GLOBAL",1)
  Global("SPRITE_IS_DEAD%primarydv%","GLOBAL",1)
THEN
    RESPONSE #100
        SetGlobal("%secondarydv%","GLOBAL",1)
        Continue()
END
>>>>>>>>

<<<<<<<< dv_update_ter.baf
IF
  GlobalsGT("SPRITE_IS_DEAD%primarydv%","I#DV_%primarydv%")
THEN
    RESPONSE #100
        IncrementGlobal("I#DV_%primarydv%","GLOBAL",1)
        IncrementGlobal("%tertiarydv%","GLOBAL",1)
        Continue()
END
>>>>>>>>

COPY_EXISTING_REGEXP GLOB ~.*\.cre~ ~override~
      SPRINT ~file~ ~%SOURCE_RES%~
      TO_UPPER ~file~
      PATCH_IF VARIABLE_IS_SET $DV_secondary(EVALUATE_BUFFER ~%file%~) BEGIN
         READ_ASCII 0x280 ~primarydv~ (18) NULL
         TO_UPPER ~primarydv~
         PATCH_IF !VARIABLE_IS_SET $DV_done_this(EVALUATE_BUFFER ~%primarydv%~) THEN BEGIN
          SPRINT $DV_done_this(EVALUATE_BUFFER ~%primarydv%~) ~~
          SPRINT ~secondarydv~ $DV_secondary(EVALUATE_BUFFER ~%file%~)
          PATCH_IF ~%secondarydv%~ STRING_COMPARE_CASE ~SPRITE_IS_DEAD%primarydv%~ BEGIN
               INNER_ACTION BEGIN
               EXTEND_TOP ~baldur.bcs~ ~dv_update.baf~ EVALUATE_BUFFER
               EXTEND_TOP ~baldur25.bcs~ ~dv_update.baf~ EVALUATE_BUFFER
               END
          END
         END
      END
      PATCH_IF VARIABLE_IS_SET $DV_tertiary(EVALUATE_BUFFER ~%file%~) BEGIN
         READ_ASCII 0x280 ~primarydv~ (18) NULL
         TO_UPPER ~primarydv~
         PATCH_IF !VARIABLE_IS_SET $DV_done_this(EVALUATE_BUFFER ~%primarydv%~) THEN BEGIN
          SPRINT $DV_done_this(EVALUATE_BUFFER ~%primarydv%~) ~~
          SPRINT ~tertiarydv~ $DV_tertiary(EVALUATE_BUFFER ~%file%~)
          PATCH_IF ~%tertiarydv%~ STRING_COMPARE_CASE ~SPRITE_IS_DEAD%primarydv%~ BEGIN
               INNER_ACTION BEGIN
               EXTEND_TOP ~baldur.bcs~ ~dv_update_ter.baf~ EVALUATE_BUFFER
               EXTEND_TOP ~baldur25.bcs~ ~dv_update_ter.baf~ EVALUATE_BUFFER
               END
          END
         END
      END

BUT_ONLY

ACTION_PHP_EACH are_dv_array_secondary AS string => secondarydv BEGIN
          OUTER_SPRINT ~primarydv~ ~%string_0%~
          OUTER_SPRINT ~area~ ~%string_1%~
          ACTION_IF ~%secondarydv%~ STRING_COMPARE_CASE ~SPRITE_IS_DEAD%primarydv%~ BEGIN
               EXTEND_TOP ~%area%.bcs~ ~dv_update.baf~ EVALUATE_BUFFER
          END
END

ACTION_PHP_EACH are_dv_array_tertiary AS string => tertiarydv BEGIN
          OUTER_SPRINT ~primarydv~ ~%string_0%~
          OUTER_SPRINT ~area~ ~%string_1%~
          ACTION_IF ~%tertiarydv%~ STRING_COMPARE_CASE ~SPRITE_IS_DEAD%primarydv%~ BEGIN
               EXTEND_TOP ~%area%.bcs~ ~dv_update_ter.baf~ EVALUATE_BUFFER
          END
END


// deal with Kill_Innocent. This is *almost* dealt with by just setting these creatures' class to INNOCENT. There's one fiddly exception:
// Vexing Thoughts wants to know if you've killed any innocents. We handle this by noting that all Innocents have one of 5 secondary DVs

COPY - ~iwd_in_bg2/lib/innocents.2da~ ~iwd_in_bg2/lib~
   READ_2DA_ENTRIES_NOW ~innocents~ 1
   FOR (i=0;i<~%innocents%~;i=i+1) BEGIN
        READ_2DA_ENTRY_FORMER ~innocents~ ~i~ 0 ~crefile~
        INNER_ACTION BEGIN
           COPY_EXISTING ~%crefile%.cre~ ~override~
               WRITE_BYTE 0x273 155 // class: innocent
        END
   END


<<<<<<<< innocents_killed.baf
IF
  !Global("Kill_innocent","GLOBAL",1)
  OR(5)
     GlobalGT("sprite_is_deadtownie","GLOBAL",0)
     GlobalGT("sprite_is_deadhobart","GLOBAL",0)
     GlobalGT("sprite_is_deadharald","GLOBAL",0)
     GlobalGT("lonelywood_alarm","GLOBAL",0)
     GlobalGT("sprite_is_deadambere","GLOBAL",0)
THEN
   RESPONSE #100
      SetGlobal("Kill_innocent","GLOBAL",1)
      Continue()
END
>>>>>>>>

EXTEND_TOP ~baldur.bcs~ ~innocents_killed.baf~
EXTEND_TOP ~baldur25.bcs~ ~innocents_killed.baf~

////////////// INI files /////////////////////////////





BEGIN ~Convert INI files~    DESIGNATED 385

// fix a bug in ar3000.ini

COPY ~iwd_in_bg2/rules/ar3000.ini~ ~iwd_in_bg2/rules~
    REPLACE_TEXTUALLY ~\[Shadow1\]~ ~WERBLE~
    REPLACE_TEXTUALLY ~\[Shad~ ~[lShad~
    REPLACE_TEXTUALLY ~WERBLE~ ~[Shadow1]~

// fix a bug in ar8001.ini

COPY ~iwd_in_bg2/rules/ar8001.ini~ ~iwd_in_bg2/rules~
    REPLACE_TEXTUALLY ~thief_\([0-9]+\)~ ~[255.0.0.0.2\1]~

// fix a bug in ar6001.ini

COPY ~iwd_in_bg2/rules/ar6001.ini~ ~iwd_in_bg2/rules~
REPLACE_TEXTUALLY ~= 0.0.0.0.156\]~ ~= [0.0.0.0.156]~


INCLUDE ~iwd_in_bg2/lib/convert_ini.tpa~

ACTION_BASH_FOR ~iwd_in_bg2/rules~ ~ar.*\.ini~ BEGIN
  OUTER_SPRINT ~inifile~ ~%BASH_FOR_RES%~
  LAUNCH_ACTION_MACRO ~parse_ini~
END


/////////////  Random loot ///////////////////////

BEGIN ~handle randomised items~ DESIGNATED 390 DEPRECATED ~Now done via ToBEx~

///////////////  CRE file biffing /////////////////////////////////

BEGIN ~BIFF non-core cre files~ DESIGNATED 400 DEPRECATED ~Now done later~





//////////// hit points at first level //////////////

BEGIN ~HP at 1st level~  DESIGNATED 410

/////////////////////////////////////////////////////////////////////////////////////////////
// Sort out starting hit points in AR1006



COPY_EXISTING ~kit.ids~ ~override~
   REPLACE_TEXTUALLY ~0x0000 BARBARIAN~ ~0x40000000 BARBARIAN~

<<<<<<<< ar1006.baf
IF
	!Global("SPRITE_IS_DEADTOWNIE","GLOBAL",1)
	Global("SPRITE_IS_DEADHrothgar","GLOBAL",1)
THEN
	RESPONSE #100
		SetGlobal("SPRITE_IS_DEADTOWNIE","GLOBAL",1)
		Continue()
END

IF
	!Global("SPRITE_IS_DEADTOWNIE","GLOBAL",1)
	Global("SPRITE_IS_DEADHildrethHighhammer","GLOBAL",1)
THEN
	RESPONSE #100
		SetGlobal("SPRITE_IS_DEADTOWNIE","GLOBAL",1)
		Continue()
END

IF
	!Global("SPRITE_IS_DEADTOWNIE","GLOBAL",1)
	Global("SPRITE_IS_DEADTownsperson","GLOBAL",1)
THEN
	RESPONSE #100
		SetGlobal("SPRITE_IS_DEADTOWNIE","GLOBAL",1)
		Continue()
END

IF
	Global("CHAPTER_BREAK_0","GLOBAL",0)
THEN
	RESPONSE #100
		IncrementChapter("CHPTXT0")
		SetGlobal("Chapter","GLOBAL",1)
		MultiPlayerSync()
		StartCutSceneMode()
		ClearAllActions()
		MultiPlayerSync()
		StartCutScene("EHHROTHT")
		SetGlobal("CHAPTER_BREAK_0","GLOBAL",1)
END

IF
	Global("MURDER_ALARM","GLOBAL",0)
	!Global("SPRITE_IS_DEADEVERARD","GLOBAL",0)
THEN
	RESPONSE #100
		SetGlobal("MURDER_ALARM","GLOBAL",1)
		Continue()
END

IF
	Global("MURDER_ALARM","GLOBAL",0)
	!Global("SPRITE_IS_DEADPOMAB","GLOBAL",0)
THEN
	RESPONSE #100
		SetGlobal("MURDER_ALARM","GLOBAL",1)
		Continue()
END

IF
	Global("MURDER_ALARM","GLOBAL",0)
	!Global("AREA_HOSTILE","MYAREA",0)
THEN
	RESPONSE #100
		SetGlobal("MURDER_ALARM","GLOBAL",1)
		Continue()
END

IF
	Global("AREA_HOSTILE","MYAREA",0)
	!Global("MURDER_ALARM","GLOBAL",0)
THEN
	RESPONSE #100
		SetGlobal("AREA_HOSTILE","MYAREA",1)
		Continue()
END

IF
	!Global("SPRITE_IS_DEADTOWNIE","GLOBAL",0)
THEN
	RESPONSE #100
		SetGlobal("TOWNIE_HOSTILE","MYAREA",0)
		SetGlobal("SPRITE_IS_DEADTOWNIE","GLOBAL",0)
		Continue()
END

IF
	!Global("RETURN_TO_LONELYWOOD","GLOBAL",0)
THEN
	RESPONSE #100
		StartCutSceneMode()
		StartCutScene("keRtrnLW")
		SetGlobal("RETURN_TO_LONELYWOOD","GLOBAL",0)
END

IF
	OnCreation()
THEN
	RESPONSE #100
		NoAction()
		Continue()
END


>>>>>>>>

COMPILE ~ar1006.baf~

<<<<<<<< ar1006add.baf

IF
	Global("J#HPStart%player%","GLOBAL",0)
	XPLT(Player%player%,2)
THEN
	RESPONSE #100
		ApplySpellRES("J#HP01",Player%player%) // No such index
		ApplySpellRES("jpremove",Player%player%) // No such index
		SetGlobal("J#HPStart%player%","GLOBAL",1)
		Continue()
END

IF
	Kit(Player%player%,BARBARIAN)
	Global("JPReduceHP%player%","GLOBAL",0)
	XPLT(Player%player%,2)
THEN
	RESPONSE #100
		ApplySpellRES("J#hp11",Player%player%) // No such index
		SetGlobal("JPReduceHP%player%","GLOBAL",1)
		Continue()
END

IF
	!Kit(Player%player%,BARBARIAN)
	!Class(Player%player%,MONK)
	OR(3)
	     Class(Player%player%,FIGHTER)
	     Class(Player%player%,RANGER)
	     Class(Player%player%,PALADIN)
	Global("JPReduceHP%player%","GLOBAL",0)
	XPLT(Player%player%,2)
THEN
	RESPONSE #100
		ApplySpellRES("J#hp9",Player%player%) // No such index
		SetGlobal("JPReduceHP%player%","GLOBAL",1)
		Continue()
END

IF
	OR(3)
	     Class(Player%player%,FIGHTER_CLERIC)
	     Class(Player%player%,CLERIC_RANGER)
	     Class(Player%player%,FIGHTER_DRUID)
	Global("JPReduceHP%player%","GLOBAL",0)
	XPLT(Player%player%,2)
THEN
	RESPONSE #100
		ApplySpellRES("J#hp8",Player%player%) // No such index
		SetGlobal("JPReduceHP%player%","GLOBAL",1)
		Continue()
END

IF
        OR(4)
            Class(Player%player%,FIGHTER_THIEF)
            Class(Player%player%,CLERIC)
            Class(Player%player%,DRUID)
            Class(Player%player%,MONK)
	Global("JPReduceHP%player%","GLOBAL",0)
	XPLT(Player%player%,2)
THEN
	RESPONSE #100
		ApplySpellRES("J#hp7",Player%player%) // No such index
		SetGlobal("JPReduceHP%player%","GLOBAL",1)
		Continue()
END

IF
	OR(3)
	     Class(Player%player%,FIGHTER_MAGE)
	     Class(Player%player%,CLERIC_THIEF)
	     Class(Player%player%,FIGHTER_MAGE_CLERIC)
	Global("JPReduceHP%player%","GLOBAL",0)
	XPLT(Player%player%,2)
THEN
	RESPONSE #100
		ApplySpellRES("J#hp6",Player%player%) // No such index
		SetGlobal("JPReduceHP%player%","GLOBAL",1)
		Continue()
END

IF
	OR(4)
	     Class(Player%player%,FIGHTER_MAGE_THIEF)
	     Class(Player%player%,CLERIC_MAGE)
	     Class(Player%player%,THIEF)
	     Class(Player%player%,BARD)
	Global("JPReduceHP%player%","GLOBAL",0)
	XPLT(Player%player%,2)
THEN
	RESPONSE #100
		ApplySpellRES("J#hp5",Player%player%) // No such index
		SetGlobal("JPReduceHP%player%","GLOBAL",1)
		Continue()
END

IF
	Class(Player%player%,MAGE_THIEF)
	Global("JPReduceHP%player%","GLOBAL",0)
	XPLT(Player%player%,2)
THEN
	RESPONSE #100
		ApplySpellRES("J#hp4",Player%player%) // No such index
		SetGlobal("JPReduceHP%player%","GLOBAL",1)
		Continue()
END

IF
	OR(2)
	     Class(Player%player%,MAGE)
	     Class(Player%player%,SORCERER)
	Global("JPReduceHP%player%","GLOBAL",0)
	XPLT(Player%player%,2)
THEN
	RESPONSE #100
		ApplySpellRES("J#hp3",Player%player%) // No such index
		SetGlobal("JPReduceHP%player%","GLOBAL",1)
		Continue()
END

IF
   Global("JPConMod%player%","GLOBAL",0)
   CheckStatGT(Player%player%,14,CON)
   XPLT(Player%player%,2)
THEN
    RESPONSE #100
             SetGlobal("JPConMod%player%","GLOBAL",1)
	     ApplySpellRES("J#hp1",Player%player%) // No such index
             Continue()
END

IF
   Global("JPConMod%player%","GLOBAL",0)
   CheckStatGT(Player%player%,15,CON)
   XPLT(Player%player%,2)
THEN
    RESPONSE #100
             SetGlobal("JPConMod%player%","GLOBAL",1)
	     ApplySpellRES("J#hp1",Player%player%) // No such index
             Continue()
END

IF
   Global("JPConMod%player%","GLOBAL",0)
   CheckStat(Player%player%,17,CON)
   !Class(Player%player%,MONK)
   OR(3)
         Class(Player%player%,FIGHTER_ALL)
         Class(Player%player%,RANGER_ALL)
         Class(Player%player%,PALADIN_ALL)
   XPLT(Player%player%,2)
THEN
    RESPONSE #100
             SetGlobal("JPConMod%player%","GLOBAL",1)
             ApplySpellRES("J#hp1",Player%player%) // No such index
             Continue()
END

IF
   Global("JPConMod%player%","GLOBAL",0)
   CheckStat(Player%player%,18,CON)
   !Class(Player%player%,MONK)
   OR(3)
         Class(Player%player%,FIGHTER_ALL)
         Class(Player%player%,RANGER_ALL)
         Class(Player%player%,PALADIN_ALL)
   XPLT(Player%player%,2)
THEN
    RESPONSE #100
             SetGlobal("JPConMod%player%","GLOBAL",1)
	     ApplySpellRES("J#hp2",Player%player%) // No such index
             Continue()
END

IF
   Global("JPConMod%player%","GLOBAL",0)
   CheckStat(Player%player%,19,CON)
   !Class(Player%player%,MONK)
   OR(3)
         Class(Player%player%,FIGHTER_ALL)
         Class(Player%player%,RANGER_ALL)
         Class(Player%player%,PALADIN_ALL)
   XPLT(Player%player%,2)
THEN
    RESPONSE #100
             SetGlobal("JPConMod%player%","GLOBAL",1)
	     ApplySpellRES("J#hp3",Player%player%) // No such index
             Continue()
END

>>>>>>>>

OUTER_FOR (i=1;i<=6;i=i+1) BEGIN
   OUTER_SET ~player~=~i~
   COPY ~ar1006add.baf~ ~iwd_in_bg2/workspace~ EVALUATE_BUFFER
   EXTEND_TOP ~ar1006.bcs~ ~iwd_in_bg2/workspace/ar1006add.baf~
END

<<<<<<<< ar1006_top.baf
IF
	!Global("#Hobart_initialise","GLOBAL",1)
THEN
	RESPONSE #100
		SetGlobal("#Hobart_initialise","GLOBAL",1)
		SetGlobal("9101_SPAWN_HOBART","GLOBAL",1)
		Continue()
END

IF
	!Global("AR1006_visited","GLOBAL",1)
THEN
	RESPONSE #100
		SetGlobal("AR1006_visited","GLOBAL",1)
		Continue()
END
>>>>>>>>

EXTEND_TOP ~ar1006.bcs~ ~ar1006_top.baf~

/////////////////////////////////////////////////////////////////////////////////////////////


ACTION_BASH_FOR ~iwd_in_bg2/files~ ~j#hp.*\.spl~ BEGIN
   COPY ~iwd_in_bg2/files/%BASH_FOR_RES%.spl~ ~override~
END


COPY ~iwd_in_bg2/files/jpremove.spl~ ~override~

////////////// make sure spells end up in spell slots; other spell tweaks

BEGIN ~put spells in spell slots~   DESIGNATED 420

COPY_EXISTING_REGEXP 
  ~spwi[0-9][0-4][0-9]\.spl~ ~override~
   READ_LONG 0x64 ~ab_off~
   READ_SHORT 0x68 ~ab_num~
   FOR (i=0;i<~ab_num~;i=i+1) BEGIN
      WRITE_SHORT 0x2 + 0x28*~i~+~ab_off~ 2
      READ_SHORT 0xe + 0x28*~i~+~ab_off~ ~range~
      PATCH_IF ~range~=0 BEGIN
          WRITE_SHORT 0xe + 0x28*~i~+~ab_off~ 90
      END
   END
BUT_ONLY

////////////// Thieves should be able to use light crossbows ////////////

BEGIN ~Thieves use light crossbows~    DESIGNATED 430

 // string fix is done in collected piece later

ACTION_FOR_EACH ~xbow~ IN dlxbow hqlxbow lxbowbm ulxbw2a ulxbw3a ulxbw3b ulxbw5a xbow04 xbow05 xbow06 xxbow06 BEGIN
   COPY_EXISTING ~%xbow%.itm~ ~override~
       READ_BYTE 0x20 ~useable~
       SET ~useable~=~%useable%~ BAND ~0b10111111~
       WRITE_BYTE 0x20 ~useable~
   BUT_ONLY
END



BEGIN ~No spells can be 10th level~   DESIGNATED 440

COPY_EXISTING_REGEXP GLOB ~.*\.spl~ ~override~
     READ_LONG 0x34 ~level~
     PATCH_IF ~level~=10 BEGIN
        WRITE_LONG 0x34 0
     END
BUT_ONLY

BEGIN ~sort out projectile animations~  DESIGNATED 450

ACTION_BASH_FOR ~iwd_in_bg2/itm~ ~.*\.itm~ BEGIN
   ACTION_IF FILE_EXISTS_IN_GAME ~%BASH_FOR_RES%.itm~ BEGIN
      COPY_EXISTING ~%BASH_FOR_RES%.itm~ ~override~
          READ_LONG 0x64 ~ab_off~
          READ_SHORT 0x68 ~ab_num~
          FOR (i=0;i<~ab_num~;i=i+1) BEGIN
              READ_BYTE ~ab_off~ + 0x38*i ~type~
              PATCH_IF (~type~=2 OR ~type~=1) BEGIN
                  READ_SHORT 0x2c+~ab_off~ + 0x38*i ~ani1~
                  READ_SHORT 0x2e+~ab_off~ + 0x38*i ~ani2~
                  READ_SHORT 0x30+~ab_off~ + 0x38*i ~ani3~
                  READ_SHORT 0x10+~ab_off~ + 0x38*i ~launcher~
                  PATCH_IF (~ani1~=0 AND ~ani2~=0 AND ~ani3~=0 AND ~launcher~=0) BEGIN
                     WRITE_SHORT 0x2c+~ab_off~ + 0x38*i 100
                  END
              END
          END
      BUT_ONLY
   END
END

BEGIN ~scripting microtweak: Apsel~   DESIGNATED 460

COPY_EXISTING ~dapsel.dlg~ ~override~
    DECOMPILE_DLG_TO_D
    REPLACE_TEXTUALLY CASE_INSENSITIVE ~ _quest~ ~_quest~
    COMPILE_D_TO_DLG
BUT_ONLY

BEGIN ~Make certain transitions NPC-friendly~   DESIGNATED 470

ACTION_FOR_EACH ~area~ IN 
~ar1006~ // Hrothgar exit in original CS
~ar1200~ // orc sentry outside Easthaven
~ar2003~ // ogre in Kuldahar Pass
~ar2112~ // Arundel
~ar2111~ // Lysan in the bar
BEGIN
   COPY_EXISTING ~%area%.are~ ~override~
        READ_SHORT 0x5a ~trans_num~
        READ_LONG 0x5c ~trans_off~
        FOR (i=0;i<~trans_num~;i=i+1) BEGIN
           READ_SHORT 0x20 + ~trans_off~ + 0xc4 * ~i~ ~type~
           PATCH_IF ~type~=2 BEGIN
              READ_BYTE 0x61 + ~trans_off~ + 0xc4 * ~i~ ~flagbyte~
              SET ~flagbyte~ = ~%flagbyte%~ BAND ~0b11111101~
              WRITE_BYTE 0x61 + ~trans_off~ + 0xc4 * ~i~ ~flagbyte~
           END
        END
   BUT_ONLY
END

BEGIN ~Add XP entries~  DESIGNATED 480


OUTER_SPRINT ~negstring~ ~~
OUTER_FOR (i=0;i<40;i=i+1) BEGIN
   OUTER_SPRINT ~negstring~ ~%negstring%~^~ -1~
END

COPY - ~iwd_in_bg2/rules/exptable.2da~ ~override~
    READ_2DA_ENTRIES_NOW exptable 2
    FOR (i=1;i<exptable;i=i+1) BEGIN
        READ_2DA_ENTRY_FORMER exptable i 0 ~label~
        READ_2DA_ENTRY_FORMER exptable i 1 ~reward~
        SET ~reward~=~reward~ / 6
        SET ~reward~ = ~reward~ / 5
        SET ~reward~ = ~reward~ * 5
        SPRINT ~newstring~ ~%label%~ ^ ~ cmt ~ ^ ~%reward%~ ^ ~%negstring%~
        INNER_ACTION BEGIN
            APPEND ~xplist.2da~ ~%newstring%~
        END
    END

BEGIN ~Misc bugfixes~ DESIGNATED 490

COPY_EXISTING ~dorcchie.dlg~ ~override~
   DECOMPILE_DLG_TO_D
   REPLACE_TEXTUALLY CASE_INSENSITIVE ~Map_Group_1_Hostile~ ~Map_Group_Hostile1~
   COMPILE_D_TO_DLG
   
   COPY_EXISTING ~ghereg.cre~ ~override~
              READ_LONG 0xac ~sound~
              WRITE_LONG 0x10c ~sound~

COPY_EXISTING 
     ~orcwaxe.cre~ ~override~
     ~orcwbow.cre~ ~override~
     ~orcsham.cre~ ~override~
     ~orcewaxe.cre~ ~override~
     ~orcewbow.cre~ ~override~
     ~orc2004.cre~ ~override~
     ~orca2004.cre~ ~override~
           WRITE_BYTE 0x271 1

COPY_EXISTING
     ~ax1h04.itm~ ~override~
     ~ax1h05.itm~ ~override~
         WRITE_BYTE 0x98 1

COPY_EXISTING ~doldjed.dlg~ ~override~
   DECOMPILE_DLG_TO_D
   REPLACE_TEXTUALLY CASE_INSENSITIVE ~everard_freed~ ~freed_everard~
   COMPILE_D_TO_DLG

// Iron golems in AR1105 start nonhostile

<<<<<<<< eeirngoladd.baf
IF
  !Allegiance(Myself,ENEMY)
THEN
    RESPONSE #100
             Enemy()
             Continue()
END
>>>>>>>>

EXTEND_TOP ~eeirngol.bcs~ ~eeirngoladd.baf~

// Belhifet needs to be given caster levels to avoid casting at level 1

COPY_EXISTING ~belhif.cre~ ~override~
    WRITE_BYTE 0x273 17

BEGIN ~Reveal Areas on Map~    DESIGNATED 500

EXTEND_TOP ~baldur25.bcs~ ~iwd_in_bg2/files/area_reveal.baf~
EXTEND_TOP ~baldur.bcs~ ~iwd_in_bg2/files/area_reveal.baf~

<<<<<<<< ar2000add.baf
IF
  !Global("i#revealkuldahar","MYAREA",1)
THEN
    RESPONSE #100
        SetGlobal("i#revealkuldahar","MYAREA",1)
        RevealAreaOnMap("AR2100")
        Continue()
END
>>>>>>>>

EXTEND_TOP ~ar2000.bcs~ ~ar2000add.baf~

BEGIN ~Handle HoW transition~   DESIGNATED 510

COPY_EXISTING ~kuexpdor.bcs~ ~override~
       DECOMPILE_BCS_TO_BAF
       REPLACE_TEXTUALLY ~Global("EXPANSION_DOOR","GLOBAL",1)~ ~Global("EXPANSION_DOOR","GLOBAL",0)~
       COMPILE_BAF_TO_BCS

COPY_EXISTING ~ar9100.bcs~ ~override~
       DECOMPILE_BCS_TO_BAF
       REPLACE_TEXTUALLY ~HOWSEER~ ~INTRO~
       COMPILE_BAF_TO_BCS



/*COPY_EXISTING ~kutolw.bcs~ ~override~
       DECOMPILE_BCS_TO_BAF
       REPLACE_TEXTUALLY ~Deactivate(Myself)~ ~Deactivate(Myself)HideGUI()Wait(1)FadeToColor([0.0],0)Wait(1)ClearAllActions()StartMovie("INTRO")UnhideGUI()~
       COMPILE_BAF_TO_BCS
*/


<<<<<<<< ar9100add.baf
IF
  !NumInPartyGT(1)
  !Global("#HOW_INIT","GLOBAL",1)
THEN
   RESPONSE #100
        ActionOverride(Player1,JumpToPoint([1021.2519]))
        MoveViewPoint([1021.2519],INSTANT)
        SetGlobal("#HOW_INIT","GLOBAL",1)
        Continue()
END

IF
  !Global("#HOW_INIT","GLOBAL",1)
THEN
    RESPONSE #100
             SetGlobal("#HOW_INIT","GLOBAL",1)
             Continue()
END
>>>>>>>>

EXTEND_TOP ~ar9100.bcs~ ~ar9100add.baf~

COPY_EXISTING ~ar9100.bcs~ ~override~
   DECOMPILE_BCS_TO_BAF
   REPLACE_TEXTUALLY CASE_INSENSITIVE ~StartMovie("INTRO")~ ~MoveViewPoint([1021.2519],INSTANT)StartMovie("INTRO")~
   COMPILE_BAF_TO_BCS




BEGIN ~Containers~  DESIGNATED 520

ACTION_BASH_FOR ~iwd_in_bg2/sto~ ~.*\.sto~ BEGIN
   COPY_EXISTING ~%BASH_FOR_RES%.sto~ ~override~
      READ_LONG 0x8 ~type~
      PATCH_IF ~type~=4 BEGIN
         WRITE_LONG 0x8 5
      END
   BUT_ONLY
END

BEGIN ~Turn off the "conversable" flag~   DESIGNATED 530

/*ACTION_FOR_EACH ~scroll~ IN
TORN  TALE4  TALE3  TALE2  TALE1 SCRNOTE
PORTRAIT  NOTEKRI   NOTEKER   LIST   DVER
CONTRACT   CLETTER
BEGIN             */
ACTION_BASH_FOR ~iwd_in_bg2/itm~ ~.*\.itm~ BEGIN
  ACTION_IF FILE_EXISTS_IN_GAME ~%BASH_FOR_RES%.itm~ BEGIN
     COPY_EXISTING ~%BASH_FOR_RES%.itm~ ~override~
        READ_BYTE 0x19 ~byte~
        SET ~byte~=~%byte%~ BAND 0b11110111
        WRITE_BYTE 0x19 ~byte~
     BUT_ONLY
  END
END

BEGIN ~give elves immunity to Raise Dead~  DESIGNATED 540

COPY ~iwd_in_bg2/files/#elfrais.spl~ ~override~
COPY ~iwd_in_bg2/files/#elfrais.eff~ ~override~

<<<<<<<< no_elf_raise.baf
IF
  !GlobalTimerNotExpired("#no_elf_raise","GLOBAL")
THEN
  RESPONSE #100
     SetGlobalTimer("#no_elf_raise","GLOBAL",600)
     ApplySpellRES("#elfrais",Player2)
     ApplySpellRES("#elfrais",Player3)
     ApplySpellRES("#elfrais",Player4)
     ApplySpellRES("#elfrais",Player5)
     ApplySpellRES("#elfrais",Player6)
     Continue()
END
>>>>>>>>

EXTEND_TOP ~baldur.bcs~ ~no_elf_raise.baf~
EXTEND_TOP ~baldur25.bcs~ ~no_elf_raise.baf~

BEGIN ~Item microtweak: Raise Dead scrolls ought to be target: dead~    DESIGNATED 550

COPY_EXISTING
    ~scrl63.itm~ ~override~
    ~sppr504c.itm~ ~override~
    ~sppr712c.itm~ ~override~
       WRITE_SHORT 0x7e 3
       
       
BEGIN ~Resting in towns~ DESIGNATED 560

COPY_EXISTING ~ar0900.are~ ~override~
        READ_LONG 0xc0 ~rest_off~
        READ_ASCII ~rest_off~ ~restdata~ (0xe4)
BUT_ONLY

COPY_EXISTING 
    ~ar1000.are~ ~override~
    ~ar2100.are~ ~override~
    ~ar9100.are~ ~override~
       READ_LONG 0xc0 ~rest_off~
       WRITE_ASCIIE ~rest_off~ ~%restdata%~



COPY_EXISTING ~geezer.cre~ ~override~
    READ_LONG 0x8 ~name~
BUT_ONLY

COPY_EXISTING ~amnlegs.cre~ ~override~
    WRITE_LONG 0x8 ~name~
    WRITE_LONG 0xc ~name~
    WRITE_ASCII 0x2cc ~#nosleep~
    WRITE_SHORT 0x28 51456
    WRITE_LONG 0xa4 ~-1~
    WRITE_LONG 0xa4 ~-1~
    WRITE_LONG 0x10c ~-1~
    WRITE_LONG 0x110 ~-1~
    WRITE_LONG 0x114 ~-1~
    


BEGIN ~Decompress NARR files~ DESIGNATED 600

AT_NOW ~iwd_in_bg2/IWD_in_BG2_audio.bat~  // music-plus-voiceover WAVs

MAKE_BIFF ~i#narr~ BEGIN ~iwd_in_bg2/biff/narr_files~ ~.*\.wav~ END



BEGIN ~Extended night fix~ DESIGNATED 610  // code by Mike1072

COPY_EXISTING ~ar3000.are~ ~override~
              ~ar9500.are~ ~override~
    READ_SHORT  0x48 flags
    WRITE_SHORT 0x48 (flags BAND 0b10111111)
BUT_ONLY

BEGIN ~add hardcoded variables~ DESIGNATED 620

/// area_visited

<<<<<<<< areavisited.baf
IF
     !Global("%area_code%_visited","GLOBAL",1)
THEN
    RESPONSE #100
             SetGlobal("%area_code%_visited","GLOBAL",1)
             Continue()
END
>>>>>>>>

ACTION_BASH_FOR ~iwd_in_bg2/are~ ~.*\.are~ BEGIN
  ACTION_IF FILE_EXISTS_IN_GAME ~%BASH_FOR_RES%.bcs~ BEGIN
     OUTER_SPRINT ~area_code~ ~%BASH_FOR_RES%~
     EXTEND_TOP ~%BASH_FOR_RES%.bcs~ ~areavisited.baf~ EVALUATE_BUFFER
  END ELSE BEGIN
     PRINT ~%BASH_FOR_RES% has no area script~
  END
END

BEGIN ~handle the SPAWN item, which is supposed to play a graphic~   DESIGNATED 630

COPY_EXISTING ~spawn.itm~ ~override/#spawn.itm~   // shift ABILITY to EFFECT
    DELETE_BYTES 0x72 0x38
    WRITE_SHORT 0x68 0
    WRITE_SHORT 0x70 1
    WRITE_LONG 0x6a 0x72

ACTION_FOR_EACH crefile IN
~#9701_1~ ~#9701_2~ ~#9701_3~ CORCAT CYANIMP1 CYANIMP2 CYANIMP3
CYEARTHE CYFIREE CYICEG CYIRONG CYMYCON CYSHAMB CYWATERE
DJINNI ERRIS GEDDIAN GILES KEANIMPH MUSJELLY ZIERKKI
BEGIN
   ACTION_IF FILE_EXISTS_IN_GAME ~%crefile%.cre~ BEGIN
      COPY_EXISTING ~%crefile%.cre~ ~override~
           ADD_CRE_ITEM ~#spawn~ #0 #0 #0 ~NONE~ ~BELT BOOTS RING~
   END
END

BEGIN ~fix some animations~ DESIGNATED 640

// sequencing

<<<<<<<< area_anim_sync
AR6013 6013MS1
AR1105 1105MS1
AR5103 5103MS1
AR5103 5103MS2
>>>>>>>>

COPY - ~area_anim_sync~ ~override~
   READ_2DA_ENTRIES_NOW ~sync_hash~ 0
   FOR (i=0;i<~sync_hash~;i=i+1) BEGIN
      READ_2DA_ENTRY_FORMER ~sync_hash~ ~i~ 0 ~area~
      READ_2DA_ENTRY_FORMER ~sync_hash~ ~i~ 1 ~anim~
      INNER_ACTION BEGIN
         COPY_EXISTING ~%area%.are~ ~override~
            READ_LONG 0xac ~anim_num~
            READ_LONG 0xb0 ~anim_off~
            FOR (j=0;j<~anim_num~;j=j+1) BEGIN
               READ_ASCII ~anim_off~+~j~*0x4c ~anim_name~
               PATCH_IF ~%anim_name%~ STRING_EQUAL_CASE ~%anim%~ BEGIN
                  READ_BYTE 0x34+~anim_off~+  ~j~*0x4c ~byte~
                  SET ~byte~=~byte~ BOR 0b00010000
                  WRITE_BYTE 0x34+~anim_off~+  ~j~*0x4c ~byte~
               END
            END
         BUT_ONLY
      END
   END

// visibility

ACTION_BASH_FOR ~iwd_in_bg2\are~ ~.*\are~ BEGIN
         COPY_EXISTING ~%BASH_FOR_RES%.are~ ~override~
            READ_LONG 0xac ~anim_num~
            READ_LONG 0xb0 ~anim_off~
            FOR (j=0;j<~anim_num~;j=j+1) BEGIN
               READ_BYTE 0x34+~anim_off~+  ~j~*0x4c ~byte~
               SET ~byte~=~byte~ BOR 0b01000000
               WRITE_BYTE 0x34+~anim_off~+  ~j~*0x4c ~byte~
            END
         BUT_ONLY
END



/* this code makes *specific* animations visible, but it looks like so prevalent an issue that we'd better do it everywhere

<<<<<<<< area_anim_visible
AR5103 5103MS1
AR5103 5103MS2
AR5103 5103MS3
AR5103 5103MS4
AR5103 5103MS5
AR1104 1104MS1
>>>>>>>>

COPY - ~area_anim_visible~ ~override~
   READ_2DA_ENTRIES_NOW ~visible_hash~ 0
   FOR (i=0;i<~visible_hash~;i=i+1) BEGIN
      READ_2DA_ENTRY_FORMER ~visible_hash~ ~i~ 0 ~area~
      READ_2DA_ENTRY_FORMER ~visible_hash~ ~i~ 1 ~anim~
      INNER_ACTION BEGIN
         COPY_EXISTING ~%area%.are~ ~override~
            READ_LONG 0xac ~anim_num~
            READ_LONG 0xb0 ~anim_off~
            FOR (j=0;j<~anim_num~;j=j+1) BEGIN
               READ_ASCII ~anim_off~+~j~*0x4c ~anim_name~
               PATCH_IF ~%anim_name%~ STRING_EQUAL_CASE ~%anim%~ BEGIN
                  READ_BYTE 0x34+~anim_off~+  ~j~*0x4c ~byte~
                  SET ~byte~=~byte~ BOR 0b01000000
                  WRITE_BYTE 0x34+~anim_off~+  ~j~*0x4c ~byte~
               END
            END
         BUT_ONLY
      END
   END

*/
// clone portal animations in the endgame area
// (so we can turn them on, then off, all without messing with synchronisation

// as much for logical clarity as anything else, we'll do this in full generality
//
// this code assumes only Songs and Rest Encounters are later in the order than Animations

<<<<<<<< area_anim_clone
Area_file      Old_anim_name     Old_anim_num     New_anim_name      Anim_clone_name    Anim_clone_num    Active_old     Active_clone
AR1105         1105MS1           0                1105MS10           1105MS14           4                 1              0
AR1105         1105MS1           1                1105MS11           1105MS15           5                 1              0
AR1105         1105MS1           2                1105MS12           1105MS16           6                 1              0
AR1105         1105MS1           3                1105MS13           1105MS17           7                 1              0
>>>>>>>>

COPY ~area_anim_clone~ ~override~
      READ_2DA_ENTRIES_NOW ~area_anim_clone~ 0
      FOR (i=1;i<~area_anim_clone~;i=i+1) BEGIN
         READ_2DA_ENTRY_FORMER ~area_anim_clone~ ~i~ 0 ~areafile~
         READ_2DA_ENTRY_FORMER ~area_anim_clone~ ~i~ 1 ~oldname~
         READ_2DA_ENTRY_FORMER ~area_anim_clone~ ~i~ 2 ~oldnum~
         READ_2DA_ENTRY_FORMER ~area_anim_clone~ ~i~ 3 ~newname~
         READ_2DA_ENTRY_FORMER ~area_anim_clone~ ~i~ 4 ~clonename~
         READ_2DA_ENTRY_FORMER ~area_anim_clone~ ~i~ 5 ~clonenum~
         READ_2DA_ENTRY_FORMER ~area_anim_clone~ ~i~ 6 ~oldactive~
         READ_2DA_ENTRY_FORMER ~area_anim_clone~ ~i~ 7 ~cloneactive~
         INNER_ACTION BEGIN
            COPY_EXISTING ~%areafile%.are~ ~override~
                READ_LONG 0xac ~anim_num~
                READ_LONG 0xb0 ~anim_off~
                SET ~offset_delta~=0
                FOR (j=0;j<~anim_num~;j=j+1) BEGIN
                   READ_ASCII 0x4c*~j~+~anim_off~ ~name~
                   READ_SHORT 0x30+0x4c*~j~+~anim_off~ ~num~
                   PATCH_IF ~%name%~ STRING_EQUAL_CASE ~%oldname%~ AND ~num~=~oldnum~ BEGIN
                      READ_ASCII 0x4c*~j~+~anim_off~ ~template~ (0x4c)          // clone animation
                      INSERT_BYTES 0x4c*~anim_num~ + ~anim_off~ 0x4c
                      WRITE_ASCIIE  0x4c*~anim_num~ + ~anim_off~ ~%template%~
                      WRITE_ASCIIE 0x4c*~j~+~anim_off~ ~%newname%~             // rename old animation
                      READ_BYTE 0x34+ 0x4c*~j~+~anim_off~ ~byte~               // set old animation active status
                      PATCH_IF ~oldactive~=0 BEGIN
                          SET ~byte~=~byte~ BAND 0b11111110
                      END ELSE BEGIN
                          SET ~byte~=~byte~ BOR 0b00000001
                      END
                      WRITE_BYTE 0x34+ 0x4c*~j~+~anim_off~ ~byte~
                      READ_BYTE 0x34+ 0x4c*~anim_num~+~anim_off~ ~byte~               // set old animation active status
                      PATCH_IF ~cloneactive~=0 BEGIN
                          SET ~byte~=~byte~ BAND 0b11111110
                      END ELSE BEGIN
                          SET ~byte~=~byte~ BOR 0b00000001
                      END
                      WRITE_BYTE 0x34+ 0x4c*~anim_num~+~anim_off~ ~byte~
                      WRITE_ASCIIE 0x4c*~anim_num~+~anim_off~ ~%clonename%~    // name cloned animation
                      WRITE_SHORT 0x30+ 0x4c*~anim_num~+~anim_off~ ~clonenum~  // renumber cloned animation
                      SET ~anim_num~=~anim_num~+1                              // tidy up offset data
                      SET ~offset_delta~=~offset_delta~+0x4c
                   END
                END
                WRITE_LONG 0xac ~anim_num~                                 // sort out new offsets etc
                READ_LONG 0xbc ~song_off~
                SET ~song_off~=~song_off~+~offset_delta~
                WRITE_LONG 0xbc ~song_off~
                READ_LONG 0xc0 ~rest_off~
                SET ~rest_off~=~rest_off~+~offset_delta~
                WRITE_LONG 0xc0 ~rest_off~
            BUT_ONLY
         END
      END
BUT_ONLY


BEGIN ~Deal with the fact that in IWD, doors block transitions, but in BG2 they don't~ DESIGNATED 650

// entrance to Kresselack's tomb

COPY_EXISTING ~ktlever1.bcs~ ~override~
   DECOMPILE_BCS_TO_BAF
   REPLACE_TEXTUALLY ~OpenDoor(\"3502HIDE\")~ ~OpenDoor("3502HIDE")TriggerActivation("To3503",TRUE)~
   REPLACE_TEXTUALLY ~CloseDoor(\"3502HIDE\")~ ~CloseDoor("3502HIDE")TriggerActivation("To3503",FALSE)~
   COMPILE_BAF_TO_BCS

<<<<<<<< ar3502add.baf
IF
  !Global("#Initialise_door","MYAREA",1)
THEN
    RESPONSE #100
             SetGlobal("#Initialise_door","MYAREA",1)
             TriggerActivation("To3503",FALSE)
             Continue()
END
>>>>>>>>

EXTEND_TOP ~ar3502.bcs~ ~ar3502add.baf~

// dwarven puzzle

<<<<<<<< ar6010add.baf
IF
  Global("#Initialise_stairs","MYAREA",0)
THEN
    RESPONSE #100
             SetGlobal("#Initialise_stairs","MYAREA",1)
             TriggerActivation("To6011",FALSE)
             Continue()
END

IF 
   Global("PUZZLE_STAIRS_OPEN","GLOBAL",1)
   !Global("#Initialise_stairs","MYAREA",2)
THEN
    RESPONSE #100
             SetGlobal("#Initialise_stairs","MYAREA",2)
             TriggerActivation("To6011",TRUE)
             Continue()
END
>>>>>>>>

EXTEND_TOP ~ar6010.bcs~ ~ar6010add.baf~


// Malavon's lair

COPY_EXISTING ~ar8010.bcs~ ~override~
    DECOMPILE_BCS_TO_BAF
    REPLACE_TEXTUALLY  ~CloseDoor("AR8010HIDEME")~  ~CloseDoor("AR8010HIDEME")TriggerActivation("To8009",FALSE)~
    REPLACE_TEXTUALLY  ~OpenDoor("AR8010HIDEME")~  ~OpenDoor("AR8010HIDEME")TriggerActivation("To8009",TRUE)~
    COMPILE_BAF_TO_BCS
    
// Entrance to Pocquelin

<<<<<<<< ar8012add.baf
IF
  !Global("#door_initialise","MYAREA",1)
THEN
    RESPONSE #100
             SetGlobal("#door_initialise","MYAREA",1)
             TriggerActivation("To8013",FALSE)
             Continue()
END
>>>>>>>>

EXTEND_TOP ~ar8012.bcs~ ~ar8012add.baf~

COPY_EXISTING ~ldbdgopn.bcs~ ~override~ 
       DECOMPILE_BCS_TO_BAF
       REPLACE_TEXTUALLY ~OpenDoor(Myself)~ ~OpenDoor(Myself)TriggerActivation("To8013",TRUE)~
       COMPILE_BAF_TO_BCS

// Luremaster's Keep towers

COPY_EXISTING ~ar9702.bcs~ ~override~
       DECOMPILE_BCS_TO_BAF
       REPLACE_TEXTUALLY ~OpenState("AR9702_HIDE_DOOR1",TRUE)~ ~OR(2)OpenState("AR9702_HIDE_DOOR1",TRUE)Global("#AR9702_DOOR","AR9702",0)~
       REPLACE_TEXTUALLY ~CloseDoor("AR9702_HIDE_DOOR1")~ ~CloseDoor("AR9702_HIDE_DOOR1") TriggerActivation("To9701",FALSE)SetGlobal("#AR9702_DOOR","AR9702",1)~
       REPLACE_TEXTUALLY ~OpenDoor("AR9702_HIDE_DOOR1")~ ~OpenDoor("AR9702_HIDE_DOOR1") TriggerActivation("To9701",TRUE)~
       COMPILE_BAF_TO_BCS

COPY_EXISTING ~ar9704.bcs~ ~override~
       DECOMPILE_BCS_TO_BAF
       REPLACE_TEXTUALLY ~OpenState("AR9704_HIDE_DOOR1",TRUE)~ ~OR(2)OpenState("AR9704_HIDE_DOOR1",TRUE)Global("#AR9704_DOOR","AR9704",0)~
       REPLACE_TEXTUALLY ~CloseDoor("AR9704_HIDE_DOOR1")~ ~CloseDoor("AR9704_HIDE_DOOR1") TriggerActivation("To9703",FALSE)SetGlobal("#AR9704_DOOR","AR9704",1)~
       REPLACE_TEXTUALLY ~OpenDoor("AR9704_HIDE_DOOR1")~ ~OpenDoor("AR9704_HIDE_DOOR1") TriggerActivation("To9703",TRUE)~
       COMPILE_BAF_TO_BCS

COPY_EXISTING ~ar9706.bcs~ ~override~
       DECOMPILE_BCS_TO_BAF
       REPLACE_TEXTUALLY ~OpenState("AR9706_HIDE_DOOR1",TRUE)~ ~OR(2)OpenState("AR9706_HIDE_DOOR1",TRUE)Global("#AR9706_DOOR","AR9706",0)~
       REPLACE_TEXTUALLY ~CloseDoor("AR9706_HIDE_DOOR1")~ ~CloseDoor("AR9706_HIDE_DOOR1") TriggerActivation("To9705",FALSE)SetGlobal("#AR9706_DOOR","AR9706",1)~
       REPLACE_TEXTUALLY ~OpenDoor("AR9706_HIDE_DOOR1")~ ~OpenDoor("AR9706_HIDE_DOOR1") TriggerActivation("To9705",TRUE)~
       COMPILE_BAF_TO_BCS

COPY_EXISTING ~ar9708.bcs~ ~override~
       DECOMPILE_BCS_TO_BAF
       REPLACE_TEXTUALLY ~OpenState("AR9708_HIDE_DOOR1",TRUE)~ ~OR(2)OpenState("AR9708_HIDE_DOOR1",TRUE)Global("#AR9708_DOOR","AR9708",0)~
       REPLACE_TEXTUALLY ~CloseDoor("AR9708_HIDE_DOOR1")~ ~CloseDoor("AR9708_HIDE_DOOR1") TriggerActivation("To9707",FALSE)SetGlobal("#AR9708_DOOR","AR9708",1)~
       REPLACE_TEXTUALLY ~OpenDoor("AR9708_HIDE_DOOR1")~ ~OpenDoor("AR9708_HIDE_DOOR1") TriggerActivation("To9707",TRUE)~
       COMPILE_BAF_TO_BCS

// Luremaster's keep: temple of Helm

<<<<<<<< ar9713add.baf
IF
  !Global("#door_initialise","MYAREA",1)
THEN
    RESPONSE #100
             SetGlobal("#door_initialise","MYAREA",1)
             TriggerActivation("To9714",FALSE)
             Continue()
END
>>>>>>>>

COPY_EXISTING ~chcont1.bcs~ ~override~
   DECOMPILE_AND_PATCH BEGIN
         REPLACE_TEXTUALLY ~OpenDoor("AR9713_DOOR1")~ ~OpenDoor("AR9713_DOOR1") TriggerActivation("To9714",TRUE)~
   END

// Portal from jackal maze

COPY_EXISTING ~cahided.bcs~ ~override~
       DECOMPILE_BCS_TO_BAF
       REPLACE_TEXTUALLY  ~OpenDoor(Myself)~ ~OpenDoor(Myself)TriggerActivation("To9711",TRUE)~
       REPLACE_TEXTUALLY  ~CloseDoor(Myself)~ ~CloseDoor(Myself)TriggerActivation("To9711",FALSE)~
       COMPILE_BAF_TO_BCS
       
// door to tempus temple
COPY_EXISTING ~eetpldor.bcs~ ~override~
  DECOMPILE_BCS_TO_BAF
    REPLACE_TEXTUALLY ~OpenDoor(Myself)~ ~OpenDoor(Myself) TriggerActivation("To1101",TRUE)~
  COMPILE_BAF_TO_BCS
  BUT_ONLY

COPY_EXISTING ~ar1100.bcs~ ~override~
  DECOMPILE_BCS_TO_BAF
    REPLACE_TEXTUALLY ~SetGlobal("AR1100_INITIALIZED","GLOBAL",1)~ ~SetGlobal("AR1100_INITIALIZED","GLOBAL",1) TriggerActivation("To1101",FALSE)~
  COMPILE_BAF_TO_BCS
  BUT_ONLY



BEGIN ~Sort out issues with Activate vs Sound Activate~ DESIGNATED 660

COPY ~iwd_in_bg2\lib\activate_sound.2da~ ~override~
     READ_2DA_ENTRIES_NOW ~activate_sound~ 0
     FOR (i=1;i<~activate_sound~;i=i+1) BEGIN
        READ_2DA_ENTRY_FORMER ~activate_sound~ ~i~ 0 ~bcsfile~
        READ_2DA_ENTRY_FORMER ~activate_sound~ ~i~ 1 ~ambname~
        SPRINT ~deactivate_from~ ~Deactivate("%ambname%")~
        SPRINT ~deactivate_to~ ~SoundActivate("%ambname%",FALSE)~
        SPRINT ~activate_from~ ~Activate("%ambname%")~
        SPRINT ~activate_to~ ~SoundActivate("%ambname%",TRUE)~
        INNER_ACTION BEGIN
           COPY_EXISTING ~%bcsfile%.bcs~ ~override~
              DECOMPILE_BCS_TO_BAF
              REPLACE_TEXTUALLY CASE_INSENSITIVE ~%deactivate_from%~ ~%deactivate_to%~
              REPLACE_TEXTUALLY CASE_INSENSITIVE ~%activate_from%~ ~%activate_to%~
              COMPILE_BAF_TO_BCS
           BUT_ONLY
        END
     END
BUT_ONLY

BEGIN ~Sort out manual fixes to animations~ DESIGNATED 670

// endgame

COPY_EXISTING ~eepoqct1.bcs~ ~override~
   DECOMPILE_BCS_TO_BAF
   REPLACE_TEXTUALLY CASE_INSENSITIVE
      ~SoundActivate("GATEWAY",TRUE)~
      ~SoundActivate("GATEWAY",TRUE)
       AmbientActivate("1105MS10",FALSE)
       AmbientActivate("1105MS11",FALSE)
       AmbientActivate("1105MS12",FALSE)
       AmbientActivate("1105MS13",FALSE)
       AmbientActivate("1105MS14",TRUE)
       AmbientActivate("1105MS15",TRUE)
       AmbientActivate("1105MS16",TRUE)
       AmbientActivate("1105MS17",TRUE)~
   COMPILE_BAF_TO_BCS

COPY_EXISTING ~eeendct4.bcs~ ~override~
   DECOMPILE_BCS_TO_BAF
   REPLACE_TEXTUALLY CASE_INSENSITIVE
      ~ActionOverride("EVERARD",ForceSpellPoint(\[603.414\],INNATE_EVERARDS_PORTAL_CLOSING))~
      ~ActionOverride("EVERARD",ForceSpellPoint([603.414],INNATE_EVERARDS_PORTAL_CLOSING))
       ActionOverride("EVERARD",DestroySelf())~

   REPLACE_TEXTUALLY CASE_INSENSITIVE
      ~SoundActivate("GATEWAY",FALSE)~
      ~SoundActivate("GATEWAY",FALSE)
       AmbientActivate("1105MS14",FALSE)
       AmbientActivate("1105MS15",FALSE)
       AmbientActivate("1105MS16",FALSE)
       AmbientActivate("1105MS17",FALSE)
       AmbientActivate("1105MS10",TRUE)
       AmbientActivate("1105MS11",TRUE)
       AmbientActivate("1105MS12",TRUE)
       AmbientActivate("1105MS13",TRUE)~
   COMPILE_BAF_TO_BCS

BEGIN ~Fake hard-coded area-transition change with dwarven forge~ DESIGNATED 680


INCLUDE ~iwd_in_bg2\lib\clone_exit_macros.tph~

// exits from area 6005

OUTER_SPRINT ~areafile~ ~AR6005~
OUTER_SPRINT ~exitname~ ~To6004a~
OUTER_SPRINT ~newname~ ~To6013a~
OUTER_SPRINT ~newdest~ ~AR6013~
LAUNCH_ACTION_MACRO ~clone_exit~

OUTER_SPRINT ~areafile~ ~AR6005~
OUTER_SPRINT ~exitname~ ~To6004b~
OUTER_SPRINT ~newname~ ~To6013b~
OUTER_SPRINT ~newdest~ ~AR6013~
LAUNCH_ACTION_MACRO ~clone_exit~

OUTER_SPRINT ~areafile~ ~AR6005~
OUTER_SPRINT ~exitname~ ~To6004c~
OUTER_SPRINT ~newname~ ~To6013c~
OUTER_SPRINT ~newdest~ ~AR6013~
LAUNCH_ACTION_MACRO ~clone_exit~

// exit from machinery room

OUTER_SPRINT ~areafile~ ~AR6011~
OUTER_SPRINT ~exitname~ ~To6004~
OUTER_SPRINT ~newname~ ~To6013~
OUTER_SPRINT ~newdest~ ~AR6013~
LAUNCH_ACTION_MACRO ~clone_exit~

<<<<<<<< ar6005add.baf
IF
  Global("FORGE_ON","GLOBAL",0)
  Global("#forge_exit","MYAREA",0)
THEN
    RESPONSE #100
         SetGlobal("#forge_exit","MYAREA",1)
         TriggerActivation("To6013a",FALSE)
         TriggerActivation("To6013b",FALSE)
         TriggerActivation("To6013c",FALSE)
         Continue()
END

IF
  Global("FORGE_ON","GLOBAL",1)
  Global("#forge_exit","MYAREA",1)
THEN
    RESPONSE #100
             SetGlobal("#forge_exit","MYAREA",0)
         TriggerActivation("To6013a",TRUE)
         TriggerActivation("To6013b",TRUE)
         TriggerActivation("To6013c",TRUE)
         TriggerActivation("To6004a",FALSE)
         TriggerActivation("To6004b",FALSE)
         TriggerActivation("To6004c",FALSE)
         Continue()
END
>>>>>>>>

EXTEND_TOP ~ar6005.bcs~ ~ar6005add.baf~

<<<<<<<< ar6011add.baf
IF
  Global("FORGE_ON","GLOBAL",0)
  Global("#forge_exit","MYAREA",0)
THEN
    RESPONSE #100
         SetGlobal("#forge_exit","MYAREA",1)
         TriggerActivation("To6013",FALSE)
         Continue()
END

IF
  Global("FORGE_ON","GLOBAL",1)
  Global("#forge_exit","MYAREA",1)
THEN
    RESPONSE #100
             SetGlobal("#forge_exit","MYAREA",0)
         TriggerActivation("To6013",TRUE)
         TriggerActivation("To6004",FALSE)
         Continue()
END
>>>>>>>>

EXTEND_TOP ~ar6011.bcs~ ~ar6011add.baf~

BEGIN ~Avoid traps that create creatures from crashing the game~ DESIGNATED 690

ACTION_FOR_EACH trapscript IN GNT1704 GNT2004 GNT2018 GNT2019 BEGIN
   COPY_EXISTING ~%trapscript%.bcs~ ~override~
      DECOMPILE_BCS_TO_BAF
      REPLACE_TEXTUALLY ~ReallyForceSpell(LastTrigger,\([^)]+\))~ ~ActionOverride(LastTrigger,ReallyForceSpell(Myself,\1))~
//    REPLACE_TEXTUALLY ~ReallyForceSpell(LastTrigger,\([^)]+\))~ ~SetGlobal("\1","LOCALS",1)~
      COMPILE_BAF_TO_BCS

END

BEGIN ~sort out tooltip.2da~ DESIGNATED 700

COPY - ~iwd_in_bg2/rules/tooltip.2da~ ~iwd_in_bg2/rules~
   COUNT_2DA_ROWS 4 ~rowcount~
   FOR (i=0;i<~rowcount~;i=i+1) BEGIN
      READ_2DA_ENTRY ~i~ 0 4 ~item~
      READ_2DA_ENTRY ~i~ 1 4 ~entry1~
      READ_2DA_ENTRY ~i~ 2 4 ~entry2~
      READ_2DA_ENTRY ~i~ 3 4 ~entry3~
      PATCH_IF ~entry1~>=0 BEGIN
          SET ~entry1~=~entry1~+~iwd_offset~
      END
      PATCH_IF ~entry2~>=0 BEGIN
          SET ~entry2~=~entry2~+~iwd_offset~
      END
      PATCH_IF ~entry3~>=0 BEGIN
          SET ~entry3~=~entry3~+~iwd_offset~
      END
      SPRINT ~output~ ~%item% %entry1% %entry2% %entry3%~
      INNER_ACTION BEGIN
         APPEND ~tooltip.2da~ ~%output%~
      END
   END

BEGIN ~Put rest button on main screen~ DESIGNATED 710 

ACTION_FOR_EACH ~chufile~ IN guiw guiw08 guiw10 guiw12 guiw16 guiw20 BEGIN
  COPY_EXISTING ~%chufile%.chu~ ~override~
   READ_SHORT 0x81a ~height~
   SET ~height~=~height~-50
   WRITE_SHORT 0x91a ~height~
   WRITE_SHORT 0x918 4
END

BEGIN ~Evasion~ DESIGNATED 720

OUTER_SET ~iwd_offset~=74100

INCLUDE ~iwd_in_bg2/lib/parse_spell_map.tpa~
INCLUDE ~iwd_in_bg2/lib/nythrun_evasion.tph~

// IWD spells not including secondary spells already
ACTION_FOR_EACH file IN
   sppr302  // call lightning
   sppr304  // glyph of warding
   sppr324  // holy smite
   sppr325  // unholy blight
   sppr411  // produce fire
   sppr422  // thorn spray
   sppr503  // flame strike
   sppr799  // infernal conveyance
   spwi103  // burning hands
   spwi105  // color spray
   spwi220  // snowball swarm
   spwi304 //fireball
   spwi308  // lightning bolt
   spwi313   // skull trap
   spwi318   // icelance
   spwi319   // lance of disruption
   spwi404   // ice storm
   spwi504    // cone of cold
   spwi519   // sunfire
   spwi603   // chain lightning
   spwi706   // prismatic spray
   spwi707   // Malavon's rage
   spwi805   // ADHW
BEGIN
  OUTER_INNER_PATCH ~~ BEGIN
      TO_LOWER ~file~
  END
  OUTER_SPRINT ~bg2file~ $spell_map(~%file%~)
  LAF evasion_shells
    STR_VAR spell = EVAL ~%bg2file%~
  END
END

// IWD secondary-type spells

ACTION_FOR_EACH ~file~ IN 
~#bonecir~
~sppr603d~
~#whirlwb~
BEGIN
  LAF evasion_shells
    STR_VAR spell = EVAL ~%file%~
  END
END

// BG2-only spells

ACTION_FOR_EACH ~file~ IN
drgrbrht // green dragon breath hit
  spcryo01 // elemental prince of evil incompletely implemented cold
  spdr601  // avenger chain lightning
  spin539  // FLAMING_SKULL_BOLT
  spin564  // SKULL_EXPLODE
  spin579  // POWER_AMP
  spin595  // YELLOW_DRAGON_BREATH
  spin596  // BROWN_DRAGON_BREATH
  spin597  // BLUE_DRAGON_BREATH
  spin691  // BLACK_DRAGON_BREATH
  spin693  // RED_DRAGON_HIT
  spin819  // LAVA_BURST
  spin833  // SILVER_DRAGON_BREATH_COLD
  spin885  // KAMIKAZE_EXPLOSION
  spin936  // MEPHIT_ICE_SHARD
  spin939  // MEPHIT_FLAME_JET
  spin956  // HELL_HOUND_FLAME
  spin979  // GOLEM_GASCLOUD
  spin989  // BEHOLDER_LIGHTNING_BOLT
  sppr725d // CLERIC_GLOBE_OF_BLADES
  sppr984  // TRAP_CHROMATIC_ORB
  sppr985  // TRAP_FLAMESTRIKE
  sppr987  // TRAP_CALL_LIGHTNING
  spwi001  // TRAP_FIREBALL
  spwi002  // Trap Lightning Bolt
  spwi008  // TRAP_ARROW_BITING
  spwi017  // TRAP_MINOR_LIGHTNING_BOLT
  spwi015  // Trap Frost
  spwi712  // WIZARD_DELAYED_BLAST_FIREBALL
  spwi922  // WIZARD_DRAGONS_BREATH
  BEGIN
  LAF evasion_shells
    STR_VAR spell = EVAL ~%file%~
  END


END

BEGIN ~wipe death movie~ DESIGNATED 730

<<<<<<<<deathand.mve
BLANK
>>>>>>>>

COPY ~deathand.mve~ ~iwd_in_bg2/workspace~

MAKE_BIFF ~i#death~ BEGIN ~iwd_in_bg2/workspace~ ~deathand\.mve~ END


BEGIN ~Set HoW start items~ DESIGNATED 750

COPY ~iwd_in_bg2/files/25STWEAP.2da~ ~override~

BEGIN ~Clear out BG2 sample characters~ DESIGNATED 760

ACTION_BASH_FOR ~characters~ ~.*~ BEGIN
   MOVE ~characters/%BASH_FOR_FILE%~ ~iwd_in_bg2\workspace~
END

BEGIN ~Sort out floating-text strings (shouldn't appear in textbox when creatures aren't visible~ DESIGNATED 770


<<<<<<<<  float_text.2da
2000M2 	        !GlobalTimerNotExpired("#localtimer","LOCALS")         x
2001ATTA        Allegiance(Myself,ENEMY)                               x
2002BEET        Global("Internal0","LOCALS",0)                         SetGlobal("Internal0","LOCALS",0)
4001LK          !Global("CREATURE_STATE_VARBit9","LOCALS",1)           x
4001LPT1        Global("5001_Alert_1","AR5001",0)                      x
4001T1AS        Global("Internal0","LOCALS",0)                         SetGlobal("Internal0","LOCALS",0)
4001T2AS        Global("Internal0","LOCALS",0)                         SetGlobal("Internal0","LOCALS",0)
4001TL7         !See(NearestEnemyOf(Myself))                           x
4001TLAS        Global("Internal0","LOCALS",0)                         SetGlobal("Internal0","LOCALS",0)
4001V10         Global("LKingDead","GLOBAL",0)                         x
4001V11         Global("LKingDead","GLOBAL",0)                         x
4001V12         Global("LKingDead","GLOBAL",0)                         x
4001V13         Global("LKingDead","GLOBAL",0)                         x
4001V4          Global("LKingDead","GLOBAL",0)                         x
4001V5          Global("LKingDead","GLOBAL",0)                         x
4001V6          Global("LKingDead","GLOBAL",0)                         x
4001V7          Global("LKingDead","GLOBAL",0)                         x
4001V8          Global("LKingDead","GLOBAL",0)                         x
4001V9          Global("LKingDead","GLOBAL",0)                         x
BAMEBD          !GlobalTimerNotExpired("#localtimer","LOCALS")         x
BAVEX1          Global("ATK_PHASE","LOCALS",0)                         x
BAVEX2          Global("ATK_PHASE","LOCALS",0)                         x
BAVEX3          Global("ATK_PHASE","LOCALS",0)                         x
BAVEX3          Global("FLOATED_MESSAGE","LOCALS",0)                   x
BAWFLT1         IsActive(Myself)                                       x
CATEAM1         !GlobalTimerNotExpired("#localtimer","LOCALS")         x
CATEAM1T        !GlobalTimerNotExpired("#localtimer","LOCALS")         x
D5HIBAP         Global("BAPTISM_PHASE","LOCALS",0)                     SetGlobal("BAPTISM_PHASE","LOCALS",0)
D5HIBAP         Global("BAPTISM_PHASE","LOCALS",1)                     IncrementGlobal("BAPTISM_PHASE","LOCALS",1)
D5HITORT        Allegiance(Myself,ENEMY)                               !Allegiance(Myself,ENEMY)
D5HITORT        !Allegiance(Myself,ENEMY)                              x
EECYCL4         Global("SAY_LINE","LOCALS",0)                          SetGlobal("SAY_LINE","LOCALS",0)
EECYCL4         Global("SAY_LINE","LOCALS",1)                          SetGlobal("SAY_LINE","LOCALS",1)
EEGRISEL        !GlobalTimerNotExpired("#localtimer","LOCALS")         x
EEOLDJED        GlobalTimerExpired("JED_FLOAT_TIMER","LOCALS")         x
EETOWNC1        See("MOMMY")                                           x
EETOWNC2        See("MOMMY")                                           x
EETOWNC3        See("MOMMY")                                           x
EHBOY1          !GlobalTimerNotExpired("#localtimer","LOCALS")         x
EHBOY2          !GlobalTimerNotExpired("#localtimer","LOCALS")         x
EHGIRL1         !GlobalTimerNotExpired("#localtimer","LOCALS")         x
EHGIRL2         Global("MOVEMENT_LIST_1_LOC","LOCALS",6)         SetGlobal("MOVEMENT_LIST_1_LOC","LOCALS",6)
EHJHONEN        GlobalLT("SIREN_QUEST","GLOBAL",3)                     x
GNBZKWAR        !GlobalTimerNotExpired("#localtimer","LOCALS")         x
JEFFKATT        !GlobalTimerNotExpired("#localtimer","LOCALS")         x
KECOOK1         Allegiance(Myself,ENEMY)                               x
KECOURT1        !Allegiance(Myself,ENEMY)                              x
KECOURT2        !Allegiance(Myself,ENEMY)                              x
KEGUARD1        !Allegiance(Myself,ENEMY)                              x
KPGHEREG        !GlobalTimerNotExpired("#localtimer","LOCALS")         x
KPGOBCHK        !GlobalTimerNotExpired("#localtimer","LOCALS")         x
KPGOBSUP        !GlobalTimerNotExpired("#localtimer","LOCALS")          x
KTSHDEL1        Global("AREA_GROUP_VARBit5","MYAREA",1)                x
LDADSON         !GlobalTimerNotExpired("#localtimer","LOCALS")         x
LDBAT           !GlobalTimerNotExpired("ARROW_TIMER","MYAREA")         x
LDCOOK          Allegiance(Myself,ENEMY)                               x
LDFGNTG         !Global("CREATURE_STATE_VARBit9","LOCALS",1)           x
LDFLEEZ1        !GlobalTimerNotExpired("#localtimer","LOCALS")         x
LDFLOZ1         !Global("CREATURE_STATE_VARBit9","LOCALS",1)           x
LDHARK          !GlobalTimerNotExpired("#localtimer","LOCALS")         x
LDKELLY         !Global("CREATURE_STATE_VARBit9","LOCALS",1)           x
LDMARKTH        !Global("CREATURE_STATE_VARBit9","LOCALS",1)           x
LDPERD          !GlobalTimerNotExpired("#localtimer","LOCALS")         x
LDPOQUE1        Global("POQUELIN_HOSTILE","GLOBAL",0)                  x
LDREBSAL        !Global("CREATURE_STATE_VARBit9","LOCALS",1)           x
LDSALA1         !GlobalTimerNotExpired("#localtimer","LOCALS")         x
LDSALA2         !Global("CREATURE_STATE_VARBit9","LOCALS",1)           x
LDSETH          !Global("CREATURE_STATE_VARBit9","LOCALS",1)           x
LDSIMMAL        !Global("CREATURE_STATE_VARBit9","LOCALS",1)           x
LWAMBE2         !GlobalTimerNotExpired("#localtimer","LOCALS")         x
LWARDN          !GlobalTimerNotExpired("#localtimer","LOCALS")         x
LWDIGBY         !GlobalTimerNotExpired("#localtimer","LOCALS")         x
LWDOLA          !GlobalTimerNotExpired("#localtimer","LOCALS")         x
LWHAILI         !GlobalTimerNotExpired("#localtimer","LOCALS")         x
LWHAILO         !GlobalTimerNotExpired("#localtimer","LOCALS")         x
LWHAND1         !GlobalTimerNotExpired("#localtimer","LOCALS")         x
LWHAND2         !GlobalTimerNotExpired("#localtimer","LOCALS")         x
LWKIERAN        !GlobalTimerNotExpired("#localtimer","LOCALS")         x
LWMURD          !GlobalTimerNotExpired("#localtimer","LOCALS")         x
LWRAWL          !GlobalTimerNotExpired("#localtimer","LOCALS")         x
LWSLEEP         !GlobalTimerNotExpired("#localtimer","LOCALS")         x
LWTYBL          !GlobalTimerNotExpired("#localtimer","LOCALS")         x
LWYNGNED        !GlobalTimerNotExpired("#localtimer","LOCALS")         x
SCTIERF1        !GlobalTimerNotExpired("#localtimer","LOCALS")         x
SEADRAN         Global("SPAWN_DJINNI","GLOBAL",0)                      x
SHACFLT1        !GlobalTimerNotExpired("#localtimer","LOCALS")         x
SHCLFLT1        !GlobalTimerNotExpired("#localtimer","LOCALS")         x
SHCLFLT2        !GlobalTimerNotExpired("#localtimer","LOCALS")         x
SHELFC1         !Global("CREATURE_STATE_VARBit9","LOCALS",1)           x
SHELFG1         !Global("CREATURE_STATE_VARBit9","LOCALS",1)           x
SHELFPS1        !Global("CREATURE_STATE_VARBit9","LOCALS",1)           x
SHFLOAT1        !Global("CREATURE_STATE_VARBit9","LOCALS",1)           x
SHFLOAT2        !Global("CREATURE_STATE_VARBit9","LOCALS",1)           x
SHGAFLT         !Global("CREATURE_STATE_VARBit10","LOCALS",1)          x
SHGOBS2         !Global("AREA_VARBit3","MYAREA",1)                     x
SHLEHLAN        !GlobalTimerNotExpired("#localtimer","LOCALS")         x
SHOFLT1         !GlobalTimerNotExpired("#localtimer","LOCALS")         x
SHOFLT2         !GlobalTimerNotExpired("#localtimer","LOCALS")         x
SHOFLT3         !GlobalTimerNotExpired("#localtimer","LOCALS")         x
SHSEHRIY        !GlobalTimerNotExpired("#localtimer","LOCALS")         x
SHTALFAN        !GlobalTimerNotExpired("#localtimer","LOCALS")         x
SHTAVPAT        !GlobalTimerNotExpired("#localtimer","LOCALS")         x
TGVERBD         Global("ATTACK_TIMER_SET","GLOBAL",1)                  SetGlobal("ATTACK_TIMER_SET","GLOBAL",1)
VSSHDS3         !IsActive(Myself)                                      x
WTSLVRUN        !GlobalTimerNotExpired("#localtimer","LOCALS")         x
WTTRPRUN        !Global("CREATURE_STATE_VARBit9","LOCALS",1)           x
>>>>>>>>

COPY - ~float_text.2da~ ~override~
      READ_2DA_ENTRIES_NOW ~float_data~ 0
      FOR (i=0;i<~float_data~;i=i+1) BEGIN
         READ_2DA_ENTRY_FORMER ~float_data~ ~i~ 0 ~script~
         READ_2DA_ENTRY_FORMER ~float_data~ ~i~ 1 ~replace~
         READ_2DA_ENTRY_FORMER ~float_data~ ~i~ 2 ~dontreplace~
         INNER_ACTION BEGIN
            COPY_EXISTING ~%script%.bcs~ ~override~
                 DECOMPILE_BCS_TO_BAF
                 PATCH_IF !(~%dontreplace%~ STRING_EQUAL ~x~) BEGIN
                                  REPLACE_TEXTUALLY CASE_INSENSITIVE ~%dontreplace%~ ~wurble~
                 END
                 REPLACE_TEXTUALLY CASE_INSENSITIVE ~%replace%~ ~%replace% Detect([PC])~
                 PATCH_IF !(~%dontreplace%~ STRING_EQUAL ~x~) BEGIN
                                  REPLACE_TEXTUALLY CASE_INSENSITIVE ~wurble~ ~%dontreplace%~
                 END
                COMPILE_BAF_TO_BCS
            BUT_ONLY
         END

      END

BUT_ONLY

BEGIN ~ensure correct "rest outside" graphic is played when outside~  DESIGNATED 780

ACTION_FOR_EACH ~area~ IN
ar1200 ar2000 ar2001 ar3000 ar3600
ar4000 ar5000 ar6000 ar7000 ar7005
ar9300 ar9500 ar9600 ar9700
BEGIN
  COPY_EXISTING ~%area%.are~ ~override~
     READ_BYTE 0x48 ~byte~
     SET ~byte~=~byte~ BAND 0b11011111
     WRITE_BYTE 0x48 ~byte~
END

BEGIN ~shops buy/sell shields~ DESIGNATED 790

ACTION_BASH_FOR ~iwd_in_bg2/sto~ ~.*\.sto~ BEGIN
   COPY_EXISTING ~%BASH_FOR_RES%.sto~ ~override~
      READ_LONG 0x2c ~purchase_off~
      READ_LONG 0x30 ~purchase_num~
           FOR (i=0;i<~purchase_num~;i=i+1) BEGIN
              READ_LONG 0x4*~i~+~purchase_off~ ~item~
              PATCH_IF ~item~=49 BEGIN
                 WRITE_LONG 0x4*~i~+~purchase_off~ 12
              END
           END
   BUT_ONLY
END

BEGIN ~deactivate Vale of Shadows spawning, since it's hardcoded in IWD and doesn't match theoretical version~ DESIGNATED 800


<<<<<<<< novalespawn.baf
IF
  !Global("VALE_OF_SHADOWS_SPAWN","GLOBAL",2)
THEN
    RESPONSE #100
        SetGlobal("VALE_OF_SHADOWS_SPAWN","GLOBAL",2)
        Continue()
END
>>>>>>>>

EXTEND_TOP ~ar3000.bcs~ ~novalespawn.baf~

BEGIN ~Hack to stop monk flame blades from crashing the game~ DESIGNATED 810

ACTION_FOR_EACH ~script~ IN ~tgacold~ ~tgacolg~ ~tgacolw1~ ~tgacolw2~ BEGIN
   COPY_EXISTING ~%script%.bcs~ ~override~
      DECOMPILE_BCS_TO_BAF
      REPLACE_TEXTUALLY CASE_INSENSITIVE ~FLAME_BLADE~ ~SPIRITUAL_HAMMER~
      COMPILE_BAF_TO_BCS
   BUT_ONLY
END

BEGIN ~BG1-style paperdolls (courtesy 1PP)~ DESIGNATED 820

COPY ~iwd_in_bg2/files/paperdolls~ ~override~

BEGIN ~BG1-style items (courtesy 1PP)~ DESIGNATED 830

COPY ~iwd_in_bg2/files/item_bams~ ~override~

ACTION_FOR_EACH ~helmet~ IN ~helm02~ ~helm08~ ~helmblk~ BEGIN
   COPY_EXISTING ~%helmet%.itm~ ~override~
      WRITE_SHORT 0x22 0x3248
END

BEGIN ~Misc string fixes~ DESIGNATED 840

STRING_SET 32876 ~~

// fix Kilrag => Krilag typo

OUTER_INNER_PATCH ~~ BEGIN
   GET_STRREF ("%iwd_offset%" + 19558) ~oldstring~
END

OUTER_INNER_PATCH_SAVE ~newstring~ ~%oldstring%~ BEGIN
   REPLACE_TEXTUALLY ~Kilrag~ ~Krilag~

END
STRING_SET_EVALUATE ("%iwd_offset%" + 19558) ~%newstring%~

//

// changes token to recognize player talking, not just Player1
ALTER_TLK_RANGE "%iwd_offset%" ("%iwd_offset%" + 28000)
  BEGIN
    REPLACE_TEXTUALLY ~<CHARNAME>~ ~<GABBER>~
  END

// change spell-selection strings to remove superfluous references

STRING_SET 17250 @700000
STRING_SET 33381 @700001

BEGIN ~EXE modifications~ DESIGNATED 850

// isolate GUI from ToBEx changes

ACTION_FOR_EACH ~insulate~ IN guicg guirec guimg guipr BEGIN
   COPY_EXISTING ~%insulate%.chu~ ~iwd_in_bg2/workspace~
END

// install TobEx

OUTER_SPRINT ~TOBEX_MOD_DIRECTORY~ ~iwd_in_bg2~
    LOAD_TRA ~iwd_in_bg2/tobex_redist/tobex.tra~
    INCLUDE ~iwd_in_bg2/tobex_redist/tobex.tpa~

// restore insulated GUI elements

ACTION_FOR_EACH ~insulate~ IN guicg guirec guimg guipr BEGIN
   COPY ~iwd_in_bg2/workspace/%insulate%.chu~ ~override~
END




// Configure ToBEx

COPY ~TobEx_ini/TobExCore.ini~ ~TobEx_ini~
   REPLACE_TEXTUALLY ~Enable Arenas Game Type=1~ ~Enable Arenas Game Type=0~
   REPLACE_TEXTUALLY ~Scrollable Mage Spellbook=1~ ~Scrollable Mage Spellbook=0~
   REPLACE_TEXTUALLY ~Scrollable Priest Spellbook=1~ ~Scrollable Priest Spellbook=0~

COPY ~TobEx_ini/TobExTweak.ini~ ~TobEx_ini~
   REPLACE_TEXTUALLY ~Engine:Custom Shadows of Amn Starting Experience=-1~ ~Engine:Custom Shadows of Amn Starting Experience=1~
   REPLACE_TEXTUALLY ~Engine:Custom Throne of Bhaal Starting Experience=-1~ ~Engine:Custom Throne of Bhaal Starting Experience=100000~
   REPLACE_TEXTUALLY ~Engine:Disable End On Player1 Dead=0~ ~Engine:Disable End On Player1 Dead=1~
   REPLACE_TEXTUALLY ~Engine:Rest Spawns Advance Time=0~ ~Engine:Rest Spawns Advance Time=1~
   REPLACE_TEXTUALLY ~Trigger:Enable PickpocketFailed Trigger=0~ ~Trigger:Enable PickpocketFailed Trigger=1~
   REPLACE_TEXTUALLY ~Effect Opcodes:Blindness As Spell Description=0~ ~Effect Opcodes:Blindness As Spell Description=1~
   REPLACE_TEXTUALLY ~Engine:Level One Proficiency Restrictions=0~ ~Engine:Level One Proficiency Restrictions=1~



// Residual EXE hack: change HOW entry area to be  AR9100

COPY ~bgmain.exe~ ~bgmain.exe~
    SET ~i~=0x720000
    WHILE (~i~<0x730000) BEGIN
       READ_ASCII ~i~ + 0x8 ~check~ (2)
       PATCH_IF ~%check%~ STRING_EQUAL_CASE ~AR~ THEN BEGIN
          READ_ASCII ~i~ + 0x8 ~check1~ (6)
          READ_ASCII ~i~ ~check2~  (5)
          READ_ASCII  ~i~ +0x10 ~check3~(8)
          PATCH_IF (~%check1%~ STRING_EQUAL ~AR4000~ AND ~%check2%~ STRING_EQUAL ~Start~ AND ~%check3%~ STRING_EQUAL ~WorldM25~) THEN BEGIN
             WRITE_ASCII ~i~ + 0x8 ~AR9100~
             SET ~i~=0x730000
          END
       END
       SET ~i~=~i~+1
    END

// IWD edits to GUI

INCLUDE ~iwd_in_bg2/lib/tobex_gui_iwd.tpa~

BEGIN ~spell removal (new ToBEx version)~ DESIGNATED 855   // needs to be in the Easy install, as it modifies ToBEx-created files


ACTION_FOR_EACH ~magespell~ IN
106 120 123 125
220 221 223 224
301 302 307 318 319 320 321 322 324 325
403 409 415 416 417 418 419 420 421 423 424 425
505 510 511 512 513 515 517 518 519 520 522
606 607 608 609 611 613 617 618 619 620 621 622 623 624
701 702 703 704 705 707 708 710 711 712 717 718 719 720 722
802 803 804 805 807 808 809 811 813 816 817 818
902 903 904 905 907 908 909 910 911 913 914 915 916 917 918 919
BEGIN
     APPEND hidespl.2da ~SPWI%magespell% ****~
END

ACTION_FOR_EACH ~priestspell~ IN
111 113 315 318 319 409 410 412 413 415 417 505 506
513 514 515 516 601 604 609 610 611 612 613 701 703
704 706 708 711 713 718 719
BEGIN
   COPY_EXISTING ~sppr%priestspell%.spl~ ~override~
         WRITE_BYTE 0x1e 0x3f
END


BEGIN ~Sort out item randomization (new ToBEx version)~ DESIGNATED 860

OUTER_FOR (i=0;i<100;i=i+1) BEGIN
   OUTER_FOR (j=0;j<25;j=j+1) BEGIN
            OUTER_SPRINT $random_treasure_array(~%i%~ ~%j%~) ~NOITEM~
   END
END

COPY ~iwd_in_bg2/rules/rndtres.2da~ ~override~
     READ_2DA_ENTRIES_NOW random_treasure_array 3
     FOR(i=1;i<~random_treasure_array~;i=i+1) BEGIN
              SET ~length~=0
              READ_2DA_ENTRY_FORMER random_treasure_array ~%i%~ ~0~ ~temp~
              SPRINT $treasure_item_name_old(~%i%~) ~%temp%~
              PATCH_IF ~i~<10 BEGIN
                   SPRINT ~newitem~ ~rndtre0%i%~
              END ELSE BEGIN
                   SPRINT ~newitem~ ~rndtre%i%~
              END
              INNER_ACTION BEGIN
                 COPY_EXISTING ~rndtre01.itm~ ~override/%newitem%.itm~
              END
              FOR (j=1;j<20;j=j+1) BEGIN
                 READ_2DA_ENTRY_FORMER random_treasure_array ~%i%~ ~%j%~ ~item~
                 PATCH_IF ~%item%~ STRING_EQUAL_CASE ~NOITEM~ BEGIN
                    SET ~length~=~j~-1
                    SET ~j~=21
                 END ELSE BEGIN
                    SPRINT ~temp~ ~%temp% %item%~
                 END
              END
              FOR (j=~length~+1;j<20;j=j+1) BEGIN
                 SET ~index~=~j~-~length~
                 READ_2DA_ENTRY_FORMER random_treasure_array ~%i%~ ~%index%~ ~item~
                 SPRINT $random_treasure_array (~%i%~ ~%j%~) ~%item%~
                 SPRINT ~temp~ ~%temp% %item%~
              END
              SPRINT $treasure_output(~%i%~) ~%temp%~
      END

<<<<<<<< rndtreas.2da
2DA      V1.0
*
2        3        4        5        6        7        8        9        10       11       12       13       14       15       16       17       18       19       20
>>>>>>>>

COPY rndtreas.2da ~override~

OUTER_FOR (i=1;i<~random_treasure_array~;i=i+1) BEGIN
      OUTER_SPRINT ~temp~ $treasure_output(~%i%~)
      APPEND_OUTER ~override/rndtreas.2da~ ~%temp%~
END

DEFINE_PATCH_MACRO ~replace_rndtre~ BEGIN
        FOR (i=1;i<~random_treasure_array~;i=i+1) BEGIN
           SPRINT ~olditem~ $treasure_item_name_old(~%i%~)
           PATCH_IF ~i~<10 BEGIN
               SPRINT ~newitem~ ~rndtre0%i%~
           END ELSE BEGIN
               SPRINT ~newitem~ ~rndtre%i%~
           END
           REPLACE_TEXTUALLY CASE_INSENSITIVE ~%olditem%~ ~%newitem%~ (8)
        END

END


ACTION_BASH_FOR ~iwd_in_bg2/cre~ ~.*\.cre~ BEGIN
   COPY_EXISTING ~%BASH_FOR_RES%.cre~ ~override~
       LAUNCH_PATCH_MACRO ~replace_rndtre~
   BUT_ONLY
END

ACTION_BASH_FOR ~iwd_in_bg2/biff/cre_ini~ ~.*\.cre~ BEGIN
   COPY ~iwd_in_bg2/biff/cre_ini/%BASH_FOR_RES%.cre~ ~iwd_in_bg2/biff/cre_ini~
       LAUNCH_PATCH_MACRO ~replace_rndtre~
   BUT_ONLY
END

ACTION_BASH_FOR ~iwd_in_bg2/are~ ~.*\.are~ BEGIN
   COPY_EXISTING ~%BASH_FOR_RES%.are~ ~override~
       LAUNCH_PATCH_MACRO ~replace_rndtre~
   BUT_ONLY
END

//// ammo is a special case, since RNDTREAS doesn't handle multiple items

<<<<<<<<dw#ktsk1.baf
IF
  OnCreation()
THEN
  RESPONSE #120
     GiveItemCreate("arow01",Myself,8,0,0)
     FillSlot(SLOT_AMMO)
     Continue()
  RESPONSE #20
     GiveItemCreate("arow02",Myself,8,0,0)
     FillSlot(SLOT_AMMO)
     Continue()
  RESPONSE #20
     GiveItemCreate("arow08",Myself,8,0,0)
     FillSlot(SLOT_AMMO)
     Continue()
END

IF
  OnCreation()
  Global("DMWWNoChimp","GLOBAL",0)
THEN
    RESPONSE #40
             GiveItemCreate("uDart1a",Myself,5,0,0)
             Continue()
    RESPONSE #40
             GiveItemCreate("bolt01",Myself,5,0,0)
             Continue()
    RESPONSE #40
             GiveItemCreate("bull02",Myself,5,0,0)
             Continue()
    RESPONSE #40
             GiveItemCreate("arow01",Myself,5,0,0)
             Continue()
    RESPONSE #40
             GiveItemCreate("arow02",Myself,5,0,0)
             Continue()
END

IF
  OnCreation()
THEN
    RESPONSE #100
             ChangeAIScript("",OVERRIDE)
             Continue()
END
>>>>>>>>

COMPILE ~dw#ktsk1.baf~

ACTION_FOR_EACH skeleton IN ktska1 ktska2 BEGIN
   COPY_EXISTING ~%skeleton%.cre~ ~override~
       WRITE_ASCII 0x248 ~dw#ktsk1~ #8
   REMOVE_CRE_ITEM RNDTRE02
   REMOVE_CRE_ITEM RNDTRE29
END

<<<<<<<<dw#smsk1.baf
IF
  OnCreation()
THEN
  RESPONSE #120
     GiveItemCreate("arow01",Myself,15,0,0)
     FillSlot(SLOT_AMMO)
     Continue()
  RESPONSE #20
     GiveItemCreate("arow02",Myself,15,0,0)
     FillSlot(SLOT_AMMO)
     Continue()
  RESPONSE #20
     GiveItemCreate("arow08",Myself,15,0,0)
     FillSlot(SLOT_AMMO)
     Continue()
END

IF
  OnCreation()
THEN
    RESPONSE #100
             ChangeAIScript("",OVERRIDE)
             Continue()
END
>>>>>>>>

COMPILE ~dw#smsk1.baf~

ACTION_FOR_EACH skeleton IN ~ad2sklr~ ~ad3sklr~ BEGIN
   COPY_EXISTING ~%skeleton%.cre~ ~override~
      WRITE_ASCII 0x248 ~dw#smsk1~ #8
      REMOVE_CRE_ITEM RNDTRE01
END

<<<<<<<<dw#ktsk2.baf
IF
  OnCreation()
THEN
  RESPONSE #100
     GiveItemCreate("arow01",Myself,8,0,0)
     FillSlot(SLOT_AMMO)
     Continue()
  RESPONSE #40
     GiveItemCreate("arow02",Myself,8,0,0)
     FillSlot(SLOT_AMMO)
     Continue()
  RESPONSE #40
     GiveItemCreate("arow08",Myself,8,0,0)
     FillSlot(SLOT_AMMO)
     Continue()
END

IF
  OnCreation()
  Global("DMWWNoChimp","GLOBAL",0)
THEN
    RESPONSE #40
             GiveItemCreate("udart2a",Myself,5,0,0)
             Continue()
    RESPONSE #40
             GiveItemCreate("uArow2a",Myself,5,0,0)
             Continue()
    RESPONSE #20
             GiveItemCreate("arow02",Myself,5,0,0)
             Continue()
    RESPONSE #40
             GiveItemCreate("arow01",Myself,5,0,0)
             Continue()
    RESPONSE #20
             GiveItemCreate("arow08",Myself,5,0,0)
             Continue()
    RESPONSE #60
             GiveItemCreate("bolt02",Myself,5,0,0)
             Continue()
    RESPONSE #20
             GiveItemCreate("bolt03",Myself,5,0,0)
             Continue()
END

IF
  OnCreation()
THEN
    RESPONSE #100
             ChangeAIScript("",OVERRIDE)
             Continue()
END
>>>>>>>>

COMPILE ~dw#ktsk2.baf~

COPY_EXISTING ~ktska3.cre~ ~override~
   WRITE_ASCII 0x248 ~dw#ktsk2~ #8
   REMOVE_CRE_ITEM RNDTRE02
   REMOVE_CRE_ITEM RNDTRE29

<<<<<<<<dw#smsk2.baf
IF
  OnCreation()
THEN
  RESPONSE #100
     GiveItemCreate("arow01",Myself,15,0,0)
     FillSlot(SLOT_AMMO)
     Continue()
  RESPONSE #40
     GiveItemCreate("arow02",Myself,15,0,0)
     FillSlot(SLOT_AMMO)
     Continue()
  RESPONSE #40
     GiveItemCreate("arow08",Myself,15,0,0)
     FillSlot(SLOT_AMMO)
     Continue()
END

IF
  OnCreation()
THEN
    RESPONSE #100
             ChangeAIScript("",OVERRIDE)
             Continue()
END
>>>>>>>>

COMPILE ~dw#smsk2.baf~

COPY_EXISTING ~ad4sklr.cre~ ~override~
   WRITE_ASCII 0x248 ~dw#smsk2~
   REMOVE_CRE_ITEM RNDTRE02

// hardcoded hack for ammo drops in areas

COPY_EXISTING ~ar4001.are~ ~override~
    WRITE_ASCII 0x7250 ~arow01~ #8
    WRITE_ASCII 0x7264 ~bull02~ #8

COPY_EXISTING ~ar4004.are~ ~override~
    WRITE_ASCII 0x5a64 ~uArow2a~ #8

COPY_EXISTING ~ar4005.are~ ~override~
    WRITE_ASCII 0xa8d8 ~uDart3a~ #8
    WRITE_ASCII 0xa8fc ~bolt06~ #8

COPY_EXISTING ~ar6005.are~ ~override~
    WRITE_ASCII 0x4548 ~uarow4a~ #8
    WRITE_ASCII 0x4598 ~udart4a~ #8
    WRITE_ASCII 0x45e8 ~arow10~ #8
    WRITE_ASCII 0x464c ~ubull4a~ #8
    WRITE_ASCII 0x469c ~bolt03~ #8
    WRITE_ASCII 0x4714 ~bolt04~ #8





BEGIN ~Sort out movie descriptions~ DESIGNATED 870

// add IWD movies to movie list
COPY_EXISTING ~movidesc.2da~ ~override~
  SET ~newstring~=26587+~%iwd_offset%~
  REPLACE_TEXTUALLY ~74038~ ~%newstring%~ // change intro descript from ToB
  APPEND_FILE ~iwd_in_bg2/ice_tutu_fix/2da/movidesc.2da~

// remove ToB movies from the ini file

COPY ~baldur.ini~ ~baldur.ini~
   PATCH_FOR_EACH ~string~ IN
~BISLOGO=1~
~BWDRAGON=1~
~WOTC=1~
~INTRO=1~
~DEATHAND=1~
~INTRO15F=1~
~RESTDUNG=1~
~RESTINN=1~
~RESTCAMP=1~
~DAYNITE=1~
~NITEDAY=1~
~FLYTHR04=1~
~END15FPS=1~
~FLYTHR01=1~
~FLYTHR02=1~
~FLYTHR03=1~
~POCKETZZ=1~
~SARADUSH=1~
~MANAFORG=1~
~MELISSAN=1~
~ENDMVE1=1~
~ENDMVE2=1~
~ENDMVE3=1~
    BEGIN
       REPLACE_TEXTUALLY ~%string%~ ~~
    END


BEGIN ~Residual fixes in FP v5.4~ DESIGNATED 880

INCLUDE ~iwd_in_bg2/lib/fixpack_v5_residual.tp2~

BEGIN ~Fix a problem with NearLocation used by Ice Golems in AR9600~ DESIGNATED 890

COPY ~iwd_in_bg2/files/dw#cloud.cre~ ~override/#icegole.cre~
   WRITE_ASCII 0x280 ~IceGolemMarker~ (0x20)
   
<<<<<<<< ar9600add.baf
IF
  !Global("createdicegolemmarker","GLOBAL",1)
THEN
    RESPONSE #100
             SetGlobal("createdicegolemmarker","GLOBAL",1)
             CreateCreature("#icegole",[1177.595],0)
             Continue()
END
>>>>>>>>


<<<<<<<< ilentgol_old.baf
IF
	Global("GOLEM_FOLLOW_PARTY","MYAREA",1)
THEN
	RESPONSE #100
		SetGlobalTimer("GOLEM_TIMER","MYAREA",2)
		SetGlobal("GOLEM_FOLLOW_PARTY","MYAREA",2)
		StartCutscene("ILGOLWRP")
END
>>>>>>>>


<<<<<<<< ilentgol_new.baf
IF
	Global("GOLEM_FOLLOW_PARTY","MYAREA",1)
	!Detect("IceGolemMarker")
THEN
	RESPONSE #100
		SetGlobalTimer("GOLEM_TIMER","MYAREA",2)
		SetGlobal("GOLEM_FOLLOW_PARTY","MYAREA",2)
		StartCutScene("ILGOLWRP")
END
>>>>>>>>

COPY_EXISTING ~spin165.spl~ ~override~ 
   LAUNCH_PATCH_FUNCTION DELETE_SPELL_EFFECT INT_VAR opcode_to_delete=124 END

EXTEND_TOP ~ar9600.bcs~ ~ar9600add.baf~

COPY_EXISTING ~ilentgol.bcs~ ~override~
   REPLACE_BCS_BLOCK ~ilentgol_old.baf~ ~ilentgol_new.baf~

COPY_EXISTING ~ilgolenm.bcs~ ~override~
   DECOMPILE_AND_PATCH BEGIN
      REPLACE_TEXTUALLY ~AttackReevaluate(NearestEnemyOf(Myself),75)~ ~~
   END

<<<<<<<< ilgolwrp.baf

IF
	True()
THEN
	RESPONSE #100
		CutSceneId("GOLEM_1")
		ReallyForceSpell(Myself,INNATE_ICE_GOLEM_DISAPPEAR)
		Wait(1)
		JumpToPoint([1113.606])
END

IF
	True()
THEN
	RESPONSE #100
		CutSceneId("GOLEM_2")
		ReallyForceSpell(Myself,INNATE_ICE_GOLEM_DISAPPEAR)
		Wait(1)
		JumpToPoint([1239.555])
END


>>>>>>>>

COMPILE ilgolwrp.baf

BEGIN ~Make bardsongs affect whole party~ DESIGNATED 900

ACTION_FOR_EACH bardsong IN
    ~#bard1~ ~#bard2~ ~#bard3~ ~#bard4~ ~#bard5~ ~#bard6~
BEGIN
      COPY_EXISTING ~%bardsong%.spl~ ~override~
            READ_ASCII 0xae ~spellname~
      BUT_ONLY
      COPY_EXISTING ~%spellname%.spl~ ~override~
            GET_OFFSET_ARRAY ab_array 0x64 4 0x68 2 0 0 0x28
            PHP_EACH ab_array AS int => ab_off BEGIN
               GET_OFFSET_ARRAY2 eff_array ab_off ITM_V10_HEAD_EFFECTS
               PHP_EACH eff_array AS int => eff_off BEGIN
                      WRITE_BYTE 0x2+~eff_off~ 3 // target: party
               END
            END
      BUT_ONLY

END

BEGIN ~Deal with HoW endgame~ DESIGNATED 910

<<<<<<<< endgame.baf

IF
  Global("GAME_OVER","MYAREA",1)
  Global("AR1006_VISITED","GLOBAL",1)
  !Global("BELHIEFET_DEAD","GLOBAL",1)
  !Global("DMWW_LEFT_9603","GLOBAL",1)
THEN
    RESPONSE #100
          SetGlobal("DMWW_LEFT_9603","GLOBAL",1)
          StartCutScene("LUA2109")
END

IF
  Global("GAME_OVER","MYAREA",1)
  OR(2)
     !Global("AR1006_VISITED","GLOBAL",1)
     Global("BELHIEFET_DEAD","GLOBAL",1)
THEN
    RESPONSE #100
		SmallWait(2)
		StartMovie("ECREDIT")
		SmallWait(2)
		EndCredits()
END
>>>>>>>>

EXTEND_TOP ~ar9603.bcs~ ~endgame.baf~

COPY_EXISTING ~ar2109.bcs~ ~override~
   DECOMPILE_AND_PATCH BEGIN
      REPLACE_TEXTUALLY ~StartMovie("HOWDRAG")~ ~~
   END

BEGIN ~Replace too-large CLOUDBA.BAM~ DESIGNATED 920

COPY ~iwd_in_bg2/files/cloudba.bam~ ~override~

BEGIN ~Residual fixes~ DESIGNATED 930

// fix vanilla-game problem with Therik

   COPY_EXISTING ~vstherik.bcs~ ~override~
   DECOMPILE_AND_PATCH BEGIN
         REPLACE_TEXTUALLY ~NumTimesTalkedTo(0)~ ~~
         REPLACE_TEXTUALLY ~NumberOfTimesTalkedTo(0)~ ~~
   END

// Make sure Flozem drops his inventory

   COPY_EXISTING ~dflozem.dlg~ ~override~
   DECOMPILE_AND_PATCH BEGIN
      REPLACE_TEXTUALLY ~ActionOverride(Myself,DropInventory())~ ~DropInventory()Wait(1)~
   END

// sort out the inexplicable issue with the Arboretum

COPY_EXISTING ~dvalesti.dlg~ ~override~
   DECOMPILE_AND_PATCH BEGIN
      REPLACE_TEXTUALLY ~Global("Arbor_Total","GLOBAL",3)~ ~Global("Arbor_Total","GLOBAL",4)~
   END

// make the Lonelywood werewolf immune to normal weapons

COPY_EXISTING ~werewlf.cre~ ~override~
   ADD_CRE_ITEM ~immune1~ #0 #0 #0 ~NONE~ ~RRING~

// fake the hard-coded HOBART_SPAWN variable

<<<<<<<< hobart_hardcoded.baf
IF
  !Global("#Hobart_initialise","GLOBAL",1)
THEN
    RESPONSE #100
             SetGlobal("#Hobart_initialise","GLOBAL",1)
             SetGlobal("9101_SPAWN_HOBART","GLOBAL",1)
             Continue()
END
>>>>>>>>

ACTION_FOR_EACH script IN ar9100 ar1006 BEGIN
   EXTEND_TOP ~%script%.bcs~ ~hobart_hardcoded.baf~
END

// slow down the barbarian cutscene

COPY_EXISTING ~bcgotowy.bcs~ ~override~
   DECOMPILE_AND_PATCH BEGIN
      REPLACE_TEXTUALLY ~,FAST~ ~,VERY_FAST~
   END

// make sure Angaar is in the right place

<<<<<<<< ar9200_add.baf
IF
    OnCreation()
	!Global("WARRIORS_DEAD","GLOBAL",0)
	Global("#Moved_Angaar","GLOBAL",0)
THEN
	RESPONSE #100
		SetGlobal("#Moved_Angaar","GLOBAL",1)
		ActionOverride("angaar",JumpToPoint([649.410]))
		Continue()
END
>>>>>>>>

EXTEND_TOP ~ar9200.bcs~ ~ar9200_add.baf~

// work around the hard-coded replacement of "2haxe" with 2gp

COPY_EXISTING ~2haxe.itm~ ~override/i#axe.itm~

ACTION_FOR_EACH ~axewielder~ IN giantfg giantfn giantfs mincat mineld minfle BEGIN
   COPY_EXISTING ~%axewielder%.cre~ ~override~
       REPLACE_TEXTUALLY ~2haxe~ ~i#axe~
END

// Deactivated creatures can't talk or play animations; hidden ones can

<<<<<<<< mouth_add.baf
IF
	OnCreation()
THEN
	RESPONSE #100
		ApplySpellRES("dw#silin",Myself) // Invisibility
		Continue()
END
>>>>>>>>

EXTEND_TOP ~dummtalk.bcs~ ~mouth_add.baf~

// Far left exit from mead hall is impassable

// areas with wonky travel regions
COPY_EXISTING ~ar9201.are~ ~override~
  READ_LONG  0x5c "info_off"
  READ_SHORT 0x5a "info_num"
  FOR (index = 0 ; index < info_num ; index = index + 1) BEGIN
    READ_ASCII ("%info_off%" +        ("%index%" * 0xc4)) "name"
    READ_SHORT ("%info_off%" + 0x20 + ("%index%" * 0xc4)) "type"
    PATCH_IF (("%type%" = 2) AND ("%name%" STRING_COMPARE_CASE "To9200a" = 0)) BEGIN
//      WRITE_SHORT ("%info_off%" + 0x22 + ("%index%" * 0xc4)) 417 // left bounding box
      WRITE_SHORT ("%info_off%" + 0x24 + ("%index%" * 0xc4)) 700 // top bounding box
//      WRITE_SHORT ("%info_off%" + 0x26 + ("%index%" * 0xc4)) 207 // right bounding box
      WRITE_SHORT ("%info_off%" + 0x28 + ("%index%" * 0xc4)) 800 // bottom bounding box
      SET "index" = "%info_num%"
    END
  END
  BUT_ONLY

// ar9603 ice golems go hostile if you try to pass them

COPY_EXISTING ~ar9603.are~ ~override~
    GET_OFFSET_ARRAY ~cre_array~ 0x54 4 0x58 2 0 0 0x110
    PHP_EACH ~cre_array~ AS int => ~cre_off~ BEGIN
          READ_ASCII 0x80+~cre_off~ ~crename~
          PATCH_IF ~%crename%~ STRING_EQUAL_CASE ~SAGOLEM~ BEGIN
               WRITE_ASCII 0x50+~cre_off~ ~DW#IGHOS~
          END
    END
    
<<<<<<<< dw#ighos.baf
IF
  !Allegiance(Myself,ENEMY)
  Range([PC],5)
THEN
    RESPONSE #100
             Enemy()
             Continue()
END
>>>>>>>>

COMPILE ~dw#ighos.baf~

// work around awkward Olive Slime foot circles

COPY_EXISTING ~ar9718.are~ ~override~
      GET_OFFSET_ARRAY ~cre_array~ 0x54 4 0x58 2 0 0 0x110
      PHP_EACH ~cre_array~ AS int => ~cre_off~ BEGIN
         READ_ASCII ~cre_off~ ~cre_name~ (0x20) NULL
         PATCH_IF ~%cre_name%~ STRING_EQUAL_CASE ~olive slime 21~ OR ~%cre_name%~ STRING_EQUAL_CASE ~olive_slime_22~ BEGIN
            // replace with Slime Zombies, which can fit through the door
            WRITE_ASCII 0x80+~cre_off~ ~SLMZOMB~ #8
         END
         PATCH_IF ~%cre_name%~ STRING_EQUAL_CASE ~olive slime 4~ BEGIN
            // move north slightly, to avoid overlap
            WRITE_SHORT 0x22+~cre_off~ 850
            WRITE_SHORT 0x26+~cre_off~ 850
         END
         PATCH_IF ~%cre_name%~ STRING_EQUAL_CASE ~olive slime 9~ BEGIN
            // move west slightly, to avoid overlap
            WRITE_SHORT 0x20+~cre_off~ 1105
            WRITE_SHORT 0x24+~cre_off~ 1105
         END
      END
BUT_ONLY

// fix Icasaracht's combat script and cutscene

COMPILE ~iwd_in_bg2/files/ildragon.baf~
COMPILE ~iwd_in_bg2/files/ildrgdie.baf~

// remove the Attack() commands and cre file oddities that stop Bandoth using his spells

COPY_EXISTING ~bandoth.cre~ ~override~
  REMOVE_KNOWN_SPELLS
  REMOVE_MEMORIZED_SPELLS
  ADD_KNOWN_SPELL ~spwi112~ #0 ~wizard~
  ADD_MEMORIZED_SPELL ~spwi112~ #0 ~wizard~ (2)
  ADD_KNOWN_SPELL ~spwi118~ #0 ~wizard~
  ADD_MEMORIZED_SPELL ~spwi118~ #0 ~wizard~ (2)
  ADD_KNOWN_SPELL ~spwi503~ #4 ~wizard~
  ADD_MEMORIZED_SPELL ~spwi503~ #4 ~wizard~ (2)
  ADD_KNOWN_SPELL ~spwi602~ #5 ~wizard~
  ADD_MEMORIZED_SPELL ~spwi602~ #5 ~wizard~


COPY_EXISTING ~dbandoth.dlg~ ~override~
   DECOMPILE_AND_PATCH BEGIN
      REPLACE_TEXTUALLY ~Attack(LastTalkedToBy)~ ~~
   END

// fix a vanilla bug with a script-less snow troll

COPY_EXISTING ~ar7002.are~ ~override~
  WRITE_ASCII 0x8e4 wttrprun
  WRITE_ASCII 0x8f4 eftrolg

// slayer

COPY ~iwd_in_bg2/files/#rslayer.spl~ ~override~

<<<<<<<< slayer-remove.baf
IF
  !Global("#RemoveSlayerEffect","MYAREA",1)
THEN
    RESPONSE #100
             SetGlobal("#RemoveSlayerEffect","MYAREA",1)
             ApplySpellRES("#rslayer",Player1)
             Continue()
END

>>>>>>>>

EXTEND_TOP ~ar9100.bcs~ ~slayer-remove.baf~

BEGIN ~Residual fixes in FP v7.14~ DESIGNATED 940

INCLUDE ~iwd_in_bg2/lib/fixpack_v7_residual.tp2~


BEGIN ~fix weap prof strings to match BG2 system~ DESIGNATED 1000
// edits Dialog.tlk, so has to run in Easy version

// first read generic names to use in prof type lines
OUTER_PATCH ~cdfoo~ BEGIN
  GET_STRREF  2893 cdname_longsword
  GET_STRREF  6646 cdname_bastardsword
  GET_STRREF  6647 cdname_2hsword
  GET_STRREF  6704 cdname_flail
  GET_STRREF  6733 cdname_sling
  GET_STRREF  6853 cdname_morningstar
  GET_STRREF  6860 cdname_longbow
  GET_STRREF  6864 cdname_shortbow
  GET_STRREF  6919 cdname_dart
  GET_STRREF  7526 cdname_waki
  GET_STRREF  7529 cdname_ninjato
  GET_STRREF 11052 cdname_scimitar
END

// patch descriptions
COPY_EXISTING ~amaunat.itm~  ~override~
              ~bael.itm~     ~override~
              ~blckbow.itm~  ~override~
              ~blun02.itm~   ~override~
              ~blun03.itm~   ~override~
              ~blun06.itm~   ~override~
              ~blun07.itm~   ~override~
              ~bow01.itm~    ~override~
              ~bow02.itm~    ~override~
              ~bow03.itm~    ~override~
              ~bow04.itm~    ~override~
              ~bow05.itm~    ~override~
              ~bow06.itm~    ~override~
              ~bow07.itm~    ~override~
              ~bow08.itm~    ~override~
              ~bowmess.itm~  ~override~
              ~cairn.itm~    ~override~
              ~clbhand.itm~  ~override~
              ~cynicis.itm~  ~override~
              ~dart01.itm~   ~override~
              ~dart02.itm~   ~override~
              ~dart03.itm~   ~override~
              ~dart04.itm~   ~override~
              ~dartzil.itm~  ~override~
              ~erevain.itm~  ~override~
              ~flailsk.itm~  ~override~
              ~giving.itm~   ~override~
              ~handgf.itm~   ~override~
              ~hq2hswd.itm~  ~override~
              ~hqbswrd.itm~  ~override~
              ~hqcbow.itm~   ~override~
              ~hqlbow.itm~   ~override~
              ~hqlswrd.itm~  ~override~
              ~hqmstar.itm~  ~override~
              ~hqsbow.itm~   ~override~
              ~ibow03.itm~   ~override~
              ~idart01.itm~  ~override~
              ~intrces.itm~  ~override~
              ~jamison.itm~  ~override~
              ~jhoswd2.itm~  ~override~
              ~jhoswd3.itm~  ~override~
              ~kaybow.itm~   ~override~
              ~kissgf.itm~   ~override~
              ~kresssw.itm~  ~override~
              ~kreswrd.itm~  ~override~
              ~lshand.itm~   ~override~
              ~lucky.itm~    ~override~
              ~mae.itm~      ~override~
              ~mielikk.itm~  ~override~
              ~myrloch.itm~  ~override~
              ~pest.itm~     ~override~
              ~pikeman.itm~  ~override~
              ~quinn.itm~    ~override~
              ~reaver.itm~   ~override~
              ~sbowebu.itm~  ~override~
              ~scimita.itm~  ~override~
              ~serrate.itm~  ~override~
              ~slinged.itm~  ~override~
              ~slng01.itm~   ~override~
              ~slng02.itm~   ~override~
              ~storm.itm~    ~override~
              ~sw1h01.itm~   ~override~
              ~sw1h02.itm~   ~override~
              ~sw1h03.itm~   ~override~
              ~sw1h04.itm~   ~override~
              ~sw1h05.itm~   ~override~
              ~sw1h06.itm~   ~override~
              ~sw1h12.itm~   ~override~
              ~sw1h15.itm~   ~override~
              ~sw2h01.itm~   ~override~
              ~sw2h02.itm~   ~override~
              ~sw2h03.itm~   ~override~
              ~sw2h06.itm~   ~override~
              ~talongf.itm~  ~override~
              ~tomb.itm~     ~override~
              ~turodah.itm~  ~override~
              ~ubswd1a.itm~  ~override~
              ~ubswd2a.itm~  ~override~
              ~ubswd2b.itm~  ~override~
              ~ubswd3a.itm~  ~override~
              ~ubswd3b.itm~  ~override~
              ~ubswd4a.itm~  ~override~
              ~ubswd4b.itm~  ~override~
              ~ubswd4c.itm~  ~override~
              ~ubswd5a.itm~  ~override~
              ~ubswd5b.itm~  ~override~
              ~udart1a.itm~  ~override~
              ~udart2a.itm~  ~override~
              ~udart3a.itm~  ~override~
              ~udart3b.itm~  ~override~
              ~udart4a.itm~  ~override~
              ~udart5a.itm~  ~override~
              ~uflal2a.itm~  ~override~
              ~uflal2b.itm~  ~override~
              ~uflal3a.itm~  ~override~
              ~uflal4a.itm~  ~override~
              ~uflal5a.itm~  ~override~
              ~ulbow1a.itm~  ~override~
              ~ulbow2a.itm~  ~override~
              ~ulbow2b.itm~  ~override~
              ~ulbow3a.itm~  ~override~
              ~ulbow3c.itm~  ~override~
              ~ulbow4a.itm~  ~override~
              ~ulbow4b.itm~  ~override~
              ~ulbow5a.itm~  ~override~
              ~ulswd1a.itm~  ~override~
              ~ulswd2a.itm~  ~override~
              ~ulswd2b.itm~  ~override~
              ~ulswd3a.itm~  ~override~
              ~ulswd3b.itm~  ~override~
              ~ulswd3c.itm~  ~override~
              ~ulswd3d.itm~  ~override~
              ~ulswd4a.itm~  ~override~
              ~ulswd4b.itm~  ~override~
              ~ulswd5a.itm~  ~override~
              ~ulswd5b.itm~  ~override~
              ~umstr2a.itm~  ~override~
              ~umstr2b.itm~  ~override~
              ~umstr3a.itm~  ~override~
              ~umstr3b.itm~  ~override~
              ~umstr3c.itm~  ~override~
              ~umstr4a.itm~  ~override~
              ~umstr4b.itm~  ~override~
              ~umstr5a.itm~  ~override~
              ~umstr5b.itm~  ~override~
              ~utswd1a.itm~  ~override~
              ~utswd2a.itm~  ~override~
              ~utswd2b.itm~  ~override~
              ~utswd2c.itm~  ~override~
              ~utswd3a.itm~  ~override~
              ~utswd3b.itm~  ~override~
              ~utswd4a.itm~  ~override~
              ~utswd4b.itm~  ~override~
              ~utswd5a.itm~  ~override~
              ~utswd5b.itm~  ~override~
              ~valiant.itm~  ~override~
              ~zz36dgd.itm~  ~override~
              ~zz57pj.itm~   ~override~
              ~zzc8hb.itm~   ~override~
              ~zzd5woh.itm~  ~override~
              ~zzf6al.itm~   ~override~
              ~zzg7ts.itm~   ~override~
              ~zzh8gk.itm~   ~override~
              ~zzm5mh.itm~   ~override~
              ~zzz6bc.itm~   ~override~
  READ_BYTE 0x31 "prof"  ELSE 0
  READ_BYTE 0x18 "flags" ELSE 0
  PATCH_IF ((("%flags%" BAND 0b00000100) = 0b00000100) AND // don't care if it's undroppable
           (("%prof%" =  89) OR
            ("%prof%" =  90) OR
            ("%prof%" =  93) OR
            ("%prof%" =  95) OR
            ("%prof%" = 100) OR
            ("%prof%" = 104) OR
            ("%prof%" = 105) OR
            ("%prof%" = 106) OR
            ("%prof%" = 107))) BEGIN
    PATCH_IF ("%prof%" =  89) BEGIN TEXT_SPRINT "cdname" "%cdname_bastardsword%"                            END ELSE // bastard swords
    PATCH_IF ("%prof%" =  90) BEGIN TEXT_SPRINT "cdname" "%cdname_longsword%"                               END ELSE // long swords
    PATCH_IF ("%prof%" =  93) BEGIN TEXT_SPRINT "cdname" "%cdname_2hsword%"                                 END ELSE // 2h swords
    PATCH_IF ("%prof%" =  95) BEGIN TEXT_SPRINT "cdname" "%cdname_scimitar%/%cdname_waki%/%cdname_ninjato%" END ELSE // scimitars
    PATCH_IF ("%prof%" = 100) BEGIN TEXT_SPRINT "cdname" "%cdname_flail%/%cdname_morningstar%"              END ELSE // morning stars, flails
    PATCH_IF ("%prof%" = 104) BEGIN TEXT_SPRINT "cdname" "%cdname_longbow%"                                 END ELSE // long bow
    PATCH_IF ("%prof%" = 105) BEGIN TEXT_SPRINT "cdname" "%cdname_shortbow%"                                END ELSE // short bow
    PATCH_IF ("%prof%" = 106) BEGIN TEXT_SPRINT "cdname" "%cdname_dart%"                                    END ELSE // dart
    PATCH_IF ("%prof%" = 107) BEGIN TEXT_SPRINT "cdname" "%cdname_sling%"                                   END      // sling
    FOR (offset = 0x50 ; offset < 0x55 ; offset = offset + 0x04) BEGIN
      READ_LONG "%offset%" "valid" ELSE 0
      PATCH_IF ("%valid%" > "%iwd_offset%") BEGIN // also don't care if it's a leftover BG2 item
        READ_STRREF "%offset%" "description"
        INNER_PATCH ~%description%~ BEGIN
          REPLACE_TEXTUALLY ~Proficiency\( Type\)?[:-].*~ ~Proficiency Type: %cdname%~
          SET char = 0 // different than the check
          FOR (i = 0; char != 0xfafa; i += 1) BEGIN
            READ_BYTE i char ELSE 0xfafa // if out of bounds, read my custom EOF signal/value
          END
          READ_ASCII 0 description (i - 1)
        END
        INNER_ACTION BEGIN
            STRING_SET_EVALUATE valid ~%description%~
        END
 //       SAY_EVALUATED "%offset%" ~%description%~      // old non-idempotent way
      END
    END
  END
  BUT_ONLY_IF_IT_CHANGES

BEGIN ~End the game if all party members die~ DESIGNATED 4000        // string changes are done in "collected string changes"

ACTION_FOR_EACH script IN baldur baldur25 BEGIN
   EXTEND_TOP ~%script%.bcs~ ~iwd_in_bg2/files/losegame.baf~
END

BEGIN ~Install some misc files~ DESIGNATED 4100 // in general I don't want WAV files distributed, since the BG2 override is full of them
                                                    // these eight are missing, so this component needs to be part of
                                                    // an easy install

// from the v5.4 fixpack
COPY ~iwd_in_bg2/extra_snd/iwd~ ~iwd_in_bg2/biff/extra~

// from the BG2 fixpack (I don't know for sure if they're needed)
COPY ~iwd_in_bg2/extra_snd/fp~ ~iwd_in_bg2/biff/extra~

MAKE_BIFF ~i#extra~ BEGIN ~iwd_in_bg2/biff/extra~ ~.*..*~  END

BEGIN ~Collected string hacks (now moved last)~ DESIGNATED 4500

// The "you can't rest" string

COMPILE ~iwd_in_bg2/files/#nosleep.d~

// change labelling on frontpage buttons

OUTER_INNER_PATCH ~~ BEGIN
            GET_STRREF ~10922~+~iwd_offset~ ~iwd~
            GET_STRREF ~26799~+~iwd_offset~ ~how~
END
STRING_SET_EVALUATE ~73247~ ~%iwd%~
STRING_SET_EVALUATE ~73248~ ~%how%~


// the "you find signs of" string

STRING_SET 67807 ~<CREATURE>~

// overwrite the "child of bhaal" background with the generic MP one

OUTER_INNER_PATCH ~~ BEGIN
   GET_STRREF 15882 ~background~
END
STRING_SET 33347 ~%background%~

// quit-game string

OUTER_INNER_PATCH ~~ BEGIN
GET_STRREF 20186+~iwd_offset~ ~newstring~
END
STRING_SET 20186 ~%newstring%~

// movie subtitles

COPY ~iwd_in_bg2/rules/avalanch.2da~ ~override~
     ~iwd_in_bg2/rules/howdrag.2da~  ~override~
     ~iwd_in_bg2/rules/intro.2da~    ~override~
     ~iwd_in_bg2/rules/intro15f.2da~ ~override~
     ~iwd_in_bg2/rules/return.2da~   ~override~
     ~iwd_in_bg2/rules/scry.2da~     ~override~
     ~iwd_in_bg2/rules/tower.2da~    ~override~
  PATCH_IF (SOURCE_SIZE > 0) BEGIN
    REPLACE_TEXTUALLY ~^[a-z]+[ %tab%]+[0-9]+[ %tab%]+[0-9]+[ %tab%]*[%lnl%%mnl%%%wnl%]+~ ~~
    COUNT_2DA_ROWS ~3~ "rowcount"
    FOR (row = 0 ; row < rowcount ; row = row + 1) BEGIN // covers last 19 rows (n/a as actual profs)
      READ_2DA_ENTRY row 0 3 "first"
      PATCH_IF ("%first%" STRING_COMPARE_REGEXP "[0-9]+" = 0) BEGIN
        READ_2DA_ENTRY row 2 3 "string"
        PATCH_IF ("%string%" >= 0) AND ("%string%" < 100000) BEGIN
            SET ~string~=~string~+~iwd_offset~
            SET_2DA_ENTRY row 2 3 ~%string%~
        END
      END
    END
  END
  
// whole-party end-game string

  OUTER_INNER_PATCH ~~ BEGIN
   GET_STRREF 16498 ~endstring~
   GET_STRREF 16498+~%iwd_offset%~ ~newendstring~
END

<<<<<<<< losegame.txt
OUTER_SPRINT ~oldendstring~ ~%endstring%~
>>>>>>>>
COPY losegame.txt ~iwd_in_bg2/workspace~ EVALUATE_BUFFER

STRING_SET_EVALUATE 16498 ~%newendstring%~
STRING_SET_EVALUATE 19377 ~%newendstring%~


//give Whirlwind its description

COPY_EXISTING ~sppr615.spl~ ~override~
       SAY 0x50 @40003

// give Cam's "Outer Planar Destroyed" string to 3 White Doves

COPY_EXISTING ~cddovme2.eff~ ~override~
       SAY 0x1c @600000



// Hide the tutorial

STRING_SET 44200 @800000
STRING_SET 33093 ~~

// initial pop-up

STRING_SET 71532 @800001

// correct descriptions of crossbows so thieves can use them 

ACTION_FOR_EACH ~xbow~ IN dlxbow hqlxbow lxbowbm ulxbw2a ulxbw3a ulxbw3b ulxbw5a xbow04 xbow05 xbow06 xxbow06 BEGIN
   COPY_EXISTING ~%xbow%.itm~ ~override~
       PATCH_FOR_EACH ~loc~ IN 0x54 0x50 BEGIN
           READ_STRREF ~loc~ ~desc~
           SPRINT ~thief~ @300002
           INNER_PATCH_SAVE ~desc2~ ~%desc%~ BEGIN
              REPLACE_TEXTUALLY CASE_SENSITIVE ~%thief%~ ~~
           END
           PATCH_IF ~%desc%~ STRING_COMPARE ~%desc2%~ BEGIN
              SAY_EVALUATED ~loc~ ~%desc2%~
           END
       END
   BUT_ONLY
END


BEGIN ~BIFF misc files~ DESIGNATED 5000

// this biffs the files that will be distributed in an Easy install.
// It also collects the files that will need to be distributed into their prebuff folders


// ini creatures
MAKE_BIFF ~i#inicre~ BEGIN ~iwd_in_bg2/biff/cre_ini~ ~.*\.cre~ END

// creatures
ACTION_BASH_FOR ~override~ ~.*\.cre~ BEGIN
   MOVE ~override/%BASH_FOR_RES%.cre~ ~iwd_in_bg2/biff/gen_cre~
END
MAKE_BIFF ~i#gencre~ BEGIN ~iwd_in_bg2/biff/gen_cre~ ~.*\.cre~ END

// items and spells
ACTION_BASH_FOR ~override~ ~.*\.itm~ BEGIN
   MOVE ~override/%BASH_FOR_RES%.itm~ ~iwd_in_bg2/biff/itm_spl~
END
ACTION_BASH_FOR ~override~ ~.*\.spl~ BEGIN
   MOVE ~override/%BASH_FOR_RES%.spl~ ~iwd_in_bg2/biff/itm_spl~
END
MAKE_BIFF ~i#itmspl~ BEGIN  ~iwd_in_bg2/biff/itm_spl~ ~.*..*~ END

// scripts and dialog
ACTION_BASH_FOR ~override~ ~.*\.bcs~ BEGIN
   MOVE ~override/%BASH_FOR_RES%.bcs~ ~iwd_in_bg2/biff/bcs_dlg~
END
ACTION_BASH_FOR ~override~ ~.*\.dlg~ BEGIN
   MOVE ~override/%BASH_FOR_RES%.dlg~ ~iwd_in_bg2/biff/bcs_dlg~
END
MAKE_BIFF ~i#bcsdlg~ BEGIN  ~iwd_in_bg2/biff/bcs_dlg~ ~.*..*~ END

// misc
ACTION_BASH_FOR ~override~ ~.*\.\(2da\|bmp\|eff\|are\|plt\|pro\|bam\|cre\|chu\|gam\|ids\|mos\|sto\|vvc\|wmp\)~ BEGIN
   MOVE ~override/%BASH_FOR_FILE%~ ~iwd_in_bg2/biff/misc~
END
MAKE_BIFF ~i#misc~ BEGIN  ~iwd_in_bg2/biff/misc~ ~.*..*~ END

// at this point all that's left in the override are a few fragments from the install, a bunch of TIS and WED
// files not used in IWD, and a bunch of WAV files already present in the BG2 override directory - i.e., nothing we need






BEGIN ~List files for biffing~   DESIGNATED 10000 
<<<<<<<< biff_file_list.2da
>>>>>>>>

COPY biff_file_list.2da ~iwd_in_bg2\lib~

ACTION_FOR_EACH ~biff_file~ IN CRE_anim2 CRE_snd dialog_snd misc_anim misc_snd mos_bmp spl_anim BEGIN
   ACTION_BASH_FOR ~iwd_in_bg2\biff\%biff_file%~ ~.*\.*~ BEGIN
      APPEND_OUTER ~iwd_in_bg2\lib\biff_file_list.2da~ ~%BASH_FOR_FILE% %BASH_FOR_FILESPEC%~
   END
END



/*
COPY - ~iwd_in_bg2/david/tables/anim_mappings.2da~ ~iwd_in_bg2/david/tables~
     READ_2DA_ENTRIES_NOW animlist 0
     FOR (i=1;i<~animlist~;i=i+1) BEGIN
        READ_2DA_ENTRY_FORMER animlist i 0 ~anim_prefix~
        PATCH_BASH_FOR ~iwd_in_bg2/override~ ~%anim_prefix%.*\.bam~ BEGIN
           INNER_ACTION BEGIN
              APPEND_OUTER ~iwd_in_bg2\lib\biff_file_list.2da~ ~%BASH_FOR_FILE% %BASH_FOR_FILESPEC%~
           END
        END
     END
BUT_ONLY
*/
COPY ~iwd_in_bg2/lib/rename_copy.tpa~ ~override~
     REPLACE_TEXTUALLY ~"~ ~~
     REPLACE_TEXTUALLY ~iwd_in_bg2\/override\/~ ~~
     REPLACE_TEXTUALLY ~iwd_in_bg2\/real_override\/~ ~~
     REPLACE_TEXTUALLY ~COPY~ ~~

COPY ~iwd_in_bg2\lib\biff_file_list.2da~ ~iwd_in_bg2\lib~
     APPEND_FILE ~override\rename_copy.tpa~
     APPEND_FILE ~iwd_in_bg2\lib\anim_rename.2da~

APPEND_OUTER ~iwd_in_bg2\lib\biff_file_list.2da~ ~ign_21.wav iwd_in_bg2/real_override/ign_21.wav~

ACTION_FOR_EACH ~bmp_prefix~ IN
dff dmc dmf2 dmf dmt efc eff efw2
efw emc emf2 emf emt emw gfw gmt
gmw haff haft hamf hamt hefb
hefc heff hefw hemf hemt hemw
hfd hff2 hff hft2 hft hfw2 hfw3
hfw hmb2 hmb hmc2 hmc hmc3 hmc4
hmf2 hmf3 hmf4 hmf5 hmf6 hmf7 hmf
hmw2 hmw3 hmw4 hmw
BEGIN
   ACTION_BASH_FOR ~iwd_in_bg2/override~ ~%bmp_prefix%.*\.bmp~ BEGIN
              APPEND_OUTER ~iwd_in_bg2\lib\biff_file_list.2da~ ~%BASH_FOR_FILE% %BASH_FOR_FILESPEC%~
   END
END

ACTION_FOR_EACH ~subtitle~ IN
avalanch howdrag return scry tower
BEGIN
   APPEND_OUTER ~iwd_in_bg2\lib\biff_file_list.2da~ ~%subtitle%.2da iwd_in_bg2\rules\%subtitle%.2da~
END


APPEND_OUTER ~iwd_in_bg2\lib\biff_file_list.2da~ ~intro.2da iwd_in_bg2\rules\intro15f.2da~
APPEND_OUTER ~iwd_in_bg2\lib\biff_file_list.2da~ ~howseer.2da iwd_in_bg2\rules\intro.2da~

BEGIN ~Tidy up~ DESIGNATED 11000

ACTION_IF ~easy_version~=1 BEGIN
   AT_EXIT ~move weidu.log iwd_in_bg2\workspace\converter_weidu.log~
   AT_EXIT ~move setup-iwd_in_bg2.debug iwd_in_bg2\workspace~
END
COPY_EXISTING ~baldur.ini~ ~baldur.ini~
   REPLACE_TEXTUALLY ~One Time Popup=1~ ~One Time Popup=0~
   REPLACE_TEXTUALLY ~Never Show Nuisance SOA=[01]~ ~~
   REPLACE_TEXTUALLY ~Never Show Nuisance=[01]~ ~~
   COUNT_2DA_ROWS 0 rowcount
   FOR (i=0;i<rowcount;i+=1) BEGIN
      SET insert_point=1
      READ_2DA_ENTRY i 0 0 entry
      PATCH_IF ~%entry%~ STRING_EQUAL_CASE ~[Game~ BEGIN
         SET insert_point = i + 1
         SET i = rowcount + 1
      END
   END
   INSERT_2DA_ROW insert_point 0 ~Never Show Nuisance SOA=1~
   INSERT_2DA_ROW insert_point 0 ~Never Show Nuisance=1~
BUT_ONLY
